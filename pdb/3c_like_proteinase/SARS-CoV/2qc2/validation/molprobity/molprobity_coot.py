# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('A', '  46 ', 'ALA', 0.000995450869412358, (-7.295999999999999, 19.834, -0.624)), ('A', '  49 ', 'MET', 0.007478008380297987, (-1.758, 16.955, 0.841)), ('A', '  51 ', 'ASN', 0.02326507820248959, (3.633, 16.736, -0.374)), ('A', '  54 ', 'TYR', 0.03968467374124203, (4.685999999999998, 21.411, 7.097)), ('A', '  55 ', 'GLU', 0.04578248252931599, (7.633999999999999, 23.02199999999999, 8.885)), ('A', ' 142 ', 'ASN', 0.00458151654214667, (-15.497, 10.326, 7.819)), ('A', ' 143 ', 'GLY', 0.0111503, (-12.257999999999996, 11.584, 9.359)), ('A', ' 154 ', 'TYR', 0.03438452915016933, (-4.785, -0.428, 37.06)), ('A', ' 275 ', 'GLY', 0.08095793662029983, (-8.541999999999998, -28.574, 9.441)), ('A', ' 300 ', 'CYS', 0.010299912214112234, (-9.506999999999998, -15.412, 32.482)), ('A', ' 302 ', 'GLY', 0.007719419999999999, (-11.218999999999998, -11.677, 37.203999999999986)), ('B', '  43 ', 'ILE', 0.08518431876129282, (-29.564, -11.72, 49.285)), ('B', '  48 ', 'ASP', 0.01158120449676593, (-31.029000000000003, -19.551, 49.472)), ('B', '  54 ', 'TYR', 0.0008817329965123511, (-37.482, -13.846000000000002, 48.005)), ('B', ' 137 ', 'LYS', 0.02849704565716551, (-23.058, -15.674999999999999, 23.788999999999994)), ('B', ' 142 ', 'ASN', 0.013272732786756803, (-17.937000000000005, -15.724, 37.458)), ('B', ' 177 ', 'LEU', 0.010424246866287302, (-33.882, -2.635, 34.142)), ('B', ' 255 ', 'ALA', 0.002227860532897095, (-31.138999999999996, 1.4850000000000003, -1.879)), ('B', ' 256 ', 'GLN', 0.011588130751987879, (-27.49099999999999, 2.438000000000001, -1.336)), ('B', ' 302 ', 'GLY', 0.00990630665188153, (-20.315, 7.526999999999999, 8.122))]
data['omega'] = []
data['rota'] = [('A', '   4 ', 'ARG', 0.02575138697326815, (-15.471, -12.414999999999996, 24.513999999999992)), ('A', '   5 ', 'LYS', 0.1018408756272439, (-12.876000000000005, -10.22, 22.818)), ('A', '  30 ', 'LEU', 0.008555262825077603, (-6.161000000000001, 14.148, 22.555)), ('A', '  49 ', 'MET', 0.0005853392681389075, (-1.758, 16.955, 0.841)), ('A', '  57 ', 'LEU', 0.1548859132682592, (3.261, 25.87, 6.328)), ('A', '  59 ', 'ILE', 0.0002645526374156137, (5.033999999999997, 29.124, 10.259)), ('A', '  77 ', 'VAL', 0.003150532575091347, (-4.585, 27.772999999999993, 22.032)), ('A', '  90 ', 'LYS', 4.618095549154445e-06, (-0.7409999999999988, 24.450999999999993, 24.20499999999999)), ('A', ' 104 ', 'VAL', 0.007351242675213143, (4.324999999999998, 3.969, 24.768)), ('A', ' 106 ', 'ILE', 0.1768378193113717, (3.4300000000000024, -0.702, 20.603999999999992)), ('A', ' 131 ', 'ARG', 0.21743758954332493, (-1.0700000000000012, -5.980000000000001, 12.353)), ('A', ' 142 ', 'ASN', 0.015958960333395913, (-15.497, 10.326, 7.819)), ('A', ' 154 ', 'TYR', 0.023629770698542128, (-4.785, -0.428, 37.06)), ('A', ' 213 ', 'ILE', 0.07034925656667379, (-8.013, -23.042, 30.447)), ('A', ' 226 ', 'THR', 0.013599336671177298, (10.908999999999997, -28.415000000000006, 17.114)), ('A', ' 227 ', 'LEU', 0.07120002725924736, (10.500999999999998, -24.656, 16.624)), ('A', ' 240 ', 'GLU', 0.22514065198323538, (4.23, -15.353000000000002, 11.287999999999997)), ('A', ' 268 ', 'LEU', 0.08001095955580659, (-1.6600000000000006, -26.206999999999994, 16.348)), ('A', ' 274 ', 'ASN', 0.001122781829008188, (-6.2669999999999995, -31.563000000000002, 8.937)), ('A', ' 279 ', 'ARG', 0.0, (-14.885999999999994, -29.396999999999995, 15.603)), ('B', '  22 ', 'CYS', 0.16060155923770253, (-24.997999999999998, -8.904, 51.58099999999999)), ('B', '  30 ', 'LEU', 0.1664239522832531, (-26.433999999999997, 0.404, 39.024999999999984)), ('B', '  45 ', 'THR', 0.10983069780741563, (-26.305, -17.936, 50.1)), ('B', '  48 ', 'ASP', 0.012010422016530764, (-31.029000000000003, -19.551, 49.472)), ('B', '  76 ', 'ARG', 0.0981101630404163, (-25.863, 4.138, 53.02599999999999)), ('B', '  77 ', 'VAL', 0.005655377321261508, (-29.146, 2.495, 52.033)), ('B', ' 106 ', 'ILE', 0.015099565140632406, (-35.046, -5.098000000000002, 23.982)), ('B', ' 127 ', 'GLN', 0.0, (-21.026, -5.628, 21.77)), ('B', ' 136 ', 'ILE', 0.013163527312631942, (-26.267999999999997, -14.075000000000001, 25.05)), ('B', ' 142 ', 'ASN', 0.0038461165368331527, (-17.937000000000005, -15.724, 37.458)), ('B', ' 154 ', 'TYR', 0.0022779864592991244, (-26.78199999999999, 10.994, 21.226)), ('B', ' 188 ', 'ARG', 0.20910260641493153, (-32.938, -20.199, 41.05)), ('B', ' 190 ', 'THR', 0.17657350781412115, (-32.08899999999999, -25.208, 39.26799999999999)), ('B', ' 213 ', 'ILE', 0.011583115503170552, (-21.327999999999996, -1.681, 0.036)), ('B', ' 227 ', 'LEU', 0.1257387262445848, (-40.289, -14.944, 0.501)), ('B', ' 265 ', 'CYS', 0.19435978932650963, (-32.048, -13.069, -0.234)), ('B', ' 268 ', 'LEU', 0.008405282794770678, (-27.901999999999997, -16.066, 0.922)), ('B', ' 288 ', 'GLU', 0.16764635367177774, (-22.025999999999996, -13.111000000000002, 11.055)), ('B', ' 294 ', 'PHE', 0.2787019738439791, (-29.037, -0.315, 11.963)), ('B', ' 305 ', 'PHE', 0.038566777326308005, (-24.701999999999998, 12.561, 4.008))]
data['cbeta'] = []
data['probe'] = [(' A   4  ARG  H  ', ' B 139  SER  HB2', -0.935, (-16.168, -13.415, 27.071)), (' A 165  MET  HE1', ' A 187  ASP  HA ', -0.878, (-0.114, 10.684, 5.596)), (' B  53  ASN HD22', ' B  56  ASP  HB2', -0.867, (-40.827, -16.599, 51.253)), (' B 152  ILE HD12', ' B 157  VAL HG22', -0.861, (-25.468, 6.449, 26.753)), (' A  45  THR HG22', ' A  48  ASP  OD2', -0.861, (-4.644, 22.952, 1.011)), (' B 286  ILE HG12', ' B 287  LEU  H  ', -0.857, (-20.899, -18.479, 8.789)), (' A 226  THR HG22', ' A 229  ASP  H  ', -0.855, (11.752, -27.89, 13.801)), (' B 213  ILE HD12', ' B 300  CYS  HB3', -0.853, (-21.809, 0.884, 4.081)), (' A   4  ARG  N  ', ' B 139  SER  HB2', -0.843, (-15.996, -13.138, 26.018)), (' A 243  THR  H  ', ' A 246  HIS  HD2', -0.836, (8.347, -16.29, 16.778)), (' B 188  ARG  HB3', ' B 190  THR HG23', -0.835, (-33.616, -22.79, 39.632)), (' B 105  ARG  NH1', ' B 180  LYS  HG3', -0.819, (-39.201, -8.823, 30.268)), (' B 167  LEU  HG ', ' B 168  PRO  HD2', -0.819, (-27.933, -22.62, 32.029)), (' A 131  ARG  HD2', ' A 137  LYS  HE3', -0.811, (-4.598, -7.463, 9.557)), (' B 165  MET  HE2', ' B 167  LEU HD12', -0.8, (-28.863, -19.562, 33.773)), (' A  86  LEU  HG ', ' A 179  GLY  HA2', -0.795, (3.147, 12.021, 15.892)), (' A  57  LEU  HA ', ' A  60  ARG  HD3', -0.795, (3.551, 27.192, 5.521)), (' A   6  MET  O  ', ' A 127  GLN  HG3', -0.789, (-11.315, -5.817, 23.359)), (' B  45  THR HG23', ' B  47  GLU  HB2', -0.781, (-27.702, -20.166, 51.553)), (' B 209  TYR  O  ', ' B 213  ILE HG22', -0.763, (-22.808, -3.536, 1.599)), (' A   4  ARG  H  ', ' B 139  SER  CB ', -0.758, (-16.34, -13.158, 26.892)), (' B 105  ARG HH12', ' B 180  LYS  HG3', -0.744, (-38.413, -9.063, 30.634)), (' A 276  MET  O  ', ' A 279  ARG  HB2', -0.742, (-13.35, -30.307, 14.57)), (' B 211  ALA  HA ', ' B 282  LEU HD21', -0.735, (-18.144, -6.047, 3.113)), (' A 280  THR HG22', ' A 285  THR HG22', -0.718, (-16.584, -25.194, 14.559)), (' A 175  THR HG22', ' A 181  PHE  HA ', -0.709, (2.879, 7.368, 12.362)), (' A 243  THR  H  ', ' A 246  HIS  CD2', -0.708, (7.606, -15.949, 17.459)), (' B  45  THR HG22', ' B  48  ASP  OD2', -0.702, (-29.167, -17.763, 51.51)), (' A  48  ASP  HA ', ' A 312  HOH  O  ', -0.699, (-0.596, 21.691, -1.885)), (' A 142  ASN  N  ', ' A 142  ASN HD22', -0.699, (-16.474, 9.011, 8.509)), (' B 286  ILE HG12', ' B 287  LEU  N  ', -0.688, (-20.534, -17.719, 8.535)), (' B 140  PHE  HB2', ' B 172  HIS  CD2', -0.683, (-21.674, -14.46, 31.041)), (' A  24  THR HG22', ' A 319  HOH  O  ', -0.68, (-8.655, 24.803, 4.724)), (' A 163  HIS  CE1', ' A 172  HIS  HB3', -0.672, (-7.266, 4.461, 9.804)), (' A  57  LEU HD11', ' A 308  HOH  O  ', -0.665, (-1.082, 23.792, 3.109)), (' A 209  TYR  O  ', ' A 213  ILE HG22', -0.661, (-6.998, -21.61, 28.287)), (' B  49  MET  HA ', ' B  49  MET  HE2', -0.66, (-31.207, -18.807, 44.746)), (' B 222  ARG  HG2', ' B 222  ARG HH11', -0.659, (-30.409, -13.727, -14.247)), (' B 212  VAL  HA ', ' B 216  ASP  O  ', -0.657, (-19.672, -6.604, -1.669)), (' A 141  LEU HD23', ' B 302  GLY  H  ', -0.651, (-19.76, 5.715, 7.035)), (' A  30  LEU HD22', ' A  32  LEU  HG ', -0.648, (-4.573, 13.862, 26.129)), (' A 141  LEU HD23', ' B 302  GLY  HA2', -0.645, (-19.503, 6.67, 8.193)), (' B  40  ARG  HD3', ' B  85  CYS  HA ', -0.641, (-36.258, -10.347, 41.544)), (' B 240  GLU  HG3', ' B 312  HOH  O  ', -0.634, (-34.691, -14.994, 13.738)), (' A  84  ASN  ND2', ' A 178  GLU  O  ', -0.631, (7.124, 11.817, 16.641)), (' B 212  VAL HG22', ' B 217  ARG  HB3', -0.617, (-21.821, -7.471, -3.462)), (' B   5  LYS  NZ ', ' B 290  GLU  HB2', -0.616, (-22.089, -9.456, 15.729)), (' B 293  PRO  O  ', ' B 297  VAL HG23', -0.615, (-27.868, -0.739, 8.741)), (' A 171  VAL HG12', ' A 172  HIS  N  ', -0.612, (-4.828, 0.209, 7.324)), (' A 171  VAL  CG1', ' A 172  HIS  N  ', -0.612, (-5.353, -0.142, 7.083)), (' A 111  THR HG22', ' A 129  ALA  HB2', -0.611, (-4.15, -7.414, 18.315)), (' A 276  MET  HE1', ' A 285  THR  HA ', -0.608, (-14.158, -23.408, 13.996)), (' B  40  ARG  HA ', ' B  87  LEU  HG ', -0.607, (-32.923, -7.753, 44.676)), (' A   7  ALA  HA ', ' A 127  GLN  HG2', -0.605, (-11.477, -3.617, 23.666)), (' B 291  PHE  HB2', ' B 307  HOH  O  ', -0.605, (-23.9, -8.521, 11.095)), (' A 141  LEU HD23', ' B 302  GLY  N  ', -0.603, (-20.206, 5.934, 7.905)), (' B 151  ASN  O  ', ' B 152  ILE HD13', -0.6, (-26.81, 3.95, 25.144)), (' B  62  SER  HB2', ' B 323  HOH  O  ', -0.599, (-31.925, -2.113, 58.628)), (' B  30  LEU HD22', ' B  32  LEU  HG ', -0.596, (-28.546, 3.543, 36.985)), (' B   3  PHE  HE1', ' B 300  CYS  HG ', -0.595, (-20.37, -1.443, 7.427)), (' A  21  THR  HB ', ' A  67  LEU  HB3', -0.592, (-11.3, 25.31, 14.465)), (' B  66  PHE  HB2', ' B  77  VAL HG11', -0.59, (-28.383, -1.289, 51.895)), (' B  10  SER  O  ', ' B  14  GLU  HG3', -0.588, (-18.19, 3.527, 31.262)), (' A 111  THR HG23', ' A 292  THR HG23', -0.588, (-2.856, -8.825, 21.3)), (' B  84  ASN  HB2', ' B 179  GLY  HA3', -0.587, (-38.135, -7.291, 37.822)), (' A 140  PHE  HB3', ' A 144  SER  OG ', -0.584, (-11.008, 6.817, 10.746)), (' A 222  ARG  HG2', ' A 222  ARG  O  ', -0.581, (2.78, -37.662, 23.055)), (' B 242  LEU  HA ', ' B 246  HIS  HD2', -0.58, (-37.793, -12.243, 8.584)), (' A 303  VAL HG22', ' A 304  THR  H  ', -0.58, (-8.179, -6.041, 37.755)), (' A 235  MET  SD ', ' A 241  PRO  HG3', -0.577, (7.984, -17.556, 8.862)), (' B  21  THR  HB ', ' B  67  LEU  HB3', -0.577, (-21.979, -4.782, 51.111)), (' B  10  SER  HB2', ' B 115  LEU HD13', -0.567, (-18.647, 0.642, 29.607)), (' A  87  LEU HD22', ' A  89  LEU  HG ', -0.563, (-1.894, 21.779, 17.683)), (' B  19  GLN HE21', ' B  26  THR HG21', -0.563, (-18.013, -7.19, 45.542)), (' B 232  LEU  O  ', ' B 236  LYS  HG2', -0.56, (-36.254, -25.444, 3.867)), (' B 165  MET  CE ', ' B 167  LEU HD12', -0.56, (-29.458, -19.769, 34.062)), (' A 141  LEU HD23', ' B 302  GLY  CA ', -0.559, (-19.777, 6.472, 7.679)), (' B  53  ASN  ND2', ' B  56  ASP  HB2', -0.555, (-40.832, -16.264, 51.14)), (' A  86  LEU  HG ', ' A 179  GLY  CA ', -0.553, (3.502, 12.47, 16.145)), (' B 176  ASP  C  ', ' B 178  GLU  H  ', -0.552, (-35.26, -4.384, 33.535)), (' B 213  ILE  O  ', ' B 213  ILE HD13', -0.552, (-20.121, 0.275, 1.226)), (' B 180  LYS  HE3', ' B 181  PHE  O  ', -0.551, (-38.563, -11.619, 30.584)), (' B  45  THR  OG1', ' B  46  ALA  N  ', -0.547, (-25.09, -19.52, 50.405)), (' A 163  HIS  HE1', ' A 172  HIS  HB3', -0.544, (-6.52, 4.538, 9.325)), (' A 153  ASP  C  ', ' A 154  TYR  CG ', -0.543, (-2.565, -0.715, 36.091)), (' A 140  PHE  C  ', ' A 141  LEU HD12', -0.543, (-14.617, 4.142, 8.386)), (' A 135  THR  HB ', ' A 171  VAL  CG1', -0.541, (-3.367, -0.752, 7.688)), (' A  84  ASN  HB2', ' A 179  GLY  HA3', -0.541, (5.686, 12.682, 15.249)), (' A 154  TYR  CD2', ' A 154  TYR  N  ', -0.54, (-3.683, -1.696, 35.874)), (' B  30  LEU HD12', ' B 148  VAL HG11', -0.54, (-27.99, -1.079, 34.855)), (' B 152  ILE  CD1', ' B 157  VAL HG22', -0.539, (-25.149, 5.529, 27.297)), (' A 114  VAL HG11', ' A 140  PHE  HZ ', -0.539, (-9.331, 3.397, 15.387)), (' B 286  ILE  CG1', ' B 287  LEU  H  ', -0.531, (-20.459, -18.225, 8.8)), (' B 303  VAL  O  ', ' B 303  VAL HG12', -0.531, (-22.413, 12.412, 10.991)), (' B  77  VAL  HA ', ' B  90  LYS  O  ', -0.53, (-30.009, 3.19, 50.254)), (' B 243  THR  H  ', ' B 246  HIS  CD2', -0.53, (-38.471, -11.325, 8.67)), (' A 169  THR  HB ', ' A 171  VAL  HB ', -0.53, (-5.713, -1.006, 4.39)), (' A  33  ASP  O  ', ' A  94  SER  HA ', -0.528, (-4.638, 21.004, 30.258)), (' B  40  ARG  CD ', ' B  85  CYS  HA ', -0.527, (-35.887, -10.929, 41.955)), (' A 299  GLN  C  ', ' A 301  SER  H  ', -0.527, (-8.847, -13.324, 33.261)), (' A 171  VAL  CG1', ' A 172  HIS  H  ', -0.526, (-5.811, -0.346, 8.145)), (' A 142  ASN  N  ', ' A 142  ASN  ND2', -0.525, (-16.926, 9.218, 8.78)), (' A  50  LEU  O  ', ' A  51  ASN  HB2', -0.523, (3.335, 15.362, -2.479)), (' A 164  HIS  CD2', ' A 175  THR HG23', -0.523, (0.293, 8.988, 12.311)), (' B 102  LYS  HE3', ' B 156  CYS  SG ', -0.518, (-33.476, 8.878, 26.088)), (' A 229  ASP  O  ', ' A 233  VAL HG23', -0.518, (6.978, -27.604, 9.829)), (' A 140  PHE  HB2', ' A 172  HIS  CD2', -0.514, (-10.092, 3.621, 9.093)), (' B   5  LYS  HZ3', ' B 290  GLU  HB2', -0.51, (-21.89, -9.836, 15.479)), (' B  44  CYS  HB3', ' B  48  ASP  HB2', -0.51, (-30.18, -17.601, 48.807)), (' B 176  ASP  O  ', ' B 178  GLU  N  ', -0.509, (-35.236, -4.031, 34.355)), (' A  55  GLU  N  ', ' A  55  GLU  OE2', -0.508, (7.093, 21.36, 7.427)), (' B 233  VAL  O  ', ' B 236  LYS  HB2', -0.506, (-32.885, -24.817, 4.694)), (' A 279  ARG  HA ', ' A 279  ARG  HE ', -0.505, (-15.28, -29.795, 16.822)), (' A 277  ASN  N  ', ' A 277  ASN HD22', -0.504, (-11.639, -31.045, 10.081)), (' A 280  THR  HB ', ' A 284  SER  O  ', -0.504, (-15.748, -23.238, 16.586)), (' A 247  VAL HG13', ' A 261  VAL HG11', -0.504, (7.268, -21.548, 22.861)), (' A 276  MET  HE3', ' A 279  ARG  O  ', -0.503, (-13.584, -26.79, 14.28)), (' A 279  ARG  CA ', ' A 279  ARG  HE ', -0.502, (-14.878, -29.968, 17.204)), (' A 222  ARG  HG2', ' A 222  ARG HH11', -0.502, (3.266, -39.071, 23.226)), (' A 165  MET  CE ', ' A 187  ASP  HA ', -0.498, (-0.319, 10.093, 5.551)), (' A 303  VAL HG22', ' A 304  THR  N  ', -0.498, (-8.217, -6.371, 37.516)), (' A  59  ILE  O  ', ' A  59  ILE HD13', -0.498, (4.449, 31.223, 10.647)), (' B  45  THR  CG2', ' B  47  GLU  HB2', -0.496, (-28.23, -19.681, 52.519)), (' A  51  ASN  N  ', ' A  52  PRO  HD3', -0.495, (1.603, 16.89, 0.014)), (' B  53  ASN  O  ', ' B  56  ASP  N  ', -0.494, (-39.48, -14.254, 50.642)), (' B  32  LEU  O  ', ' B  33  ASP  HB2', -0.494, (-31.418, 7.97, 40.463)), (' B 277  ASN  C  ', ' B 279  ARG  H  ', -0.494, (-15.062, -20.065, -0.244)), (' A 210  ALA  HA ', ' A 213  ILE  CG2', -0.494, (-7.506, -19.954, 28.169)), (' A 213  ILE HD12', ' A 256  GLN HE22', -0.493, (-6.065, -19.807, 33.158)), (' A 140  PHE  HB3', ' A 144  SER  HG ', -0.493, (-11.192, 6.372, 11.337)), (' A  54  TYR  O  ', ' A  55  GLU  C  ', -0.492, (6.251, 24.352, 8.066)), (' A 276  MET  HE1', ' A 285  THR  CA ', -0.491, (-14.0, -23.313, 13.495)), (' A 291  PHE  CE2', ' A 296  VAL HG22', -0.491, (-6.884, -14.469, 25.409)), (' B 286  ILE  CG1', ' B 287  LEU  N  ', -0.488, (-20.388, -17.975, 9.106)), (' B  37  TYR  HB3', ' B  86  LEU HD21', -0.487, (-31.832, -2.784, 39.566)), (' A 270  GLU  HG2', ' A 274  ASN  ND2', -0.487, (-3.929, -33.173, 11.839)), (' A  55  GLU  CD ', ' A  55  GLU  H  ', -0.486, (7.937, 20.81, 7.977)), (' A  63  ASN  ND2', ' A  79  GLY  N  ', -0.486, (-0.193, 29.307, 20.989)), (' A  63  ASN  ND2', ' A  78  ILE  C  ', -0.486, (-0.481, 29.84, 21.476)), (' B  63  ASN  HB3', ' B  77  VAL  O  ', -0.485, (-30.964, 1.29, 54.296)), (' B  43  ILE  HB ', ' B  61  LYS  HE3', -0.484, (-30.296, -10.526, 51.256)), (' A  69  GLN  HG2', ' A  74  GLN  NE2', -0.483, (-14.559, 25.71, 19.971)), (' A 175  THR  HB ', ' A 180  LYS  O  ', -0.483, (4.172, 7.834, 14.802)), (' A   4  ARG  HG3', ' A   4  ARG HH11', -0.482, (-17.648, -10.747, 22.406)), (' A  66  PHE  HB2', ' A  77  VAL HG11', -0.481, (-5.652, 26.871, 18.159)), (' A 136  ILE  O  ', ' A 136  ILE HG13', -0.48, (-6.886, -0.211, 11.553)), (' A 140  PHE  HD1', ' A 172  HIS  CD2', -0.477, (-8.767, 3.869, 10.375)), (' A 210  ALA  O  ', ' A 213  ILE HG23', -0.477, (-8.531, -20.969, 28.249)), (' A 104  VAL  CG1', ' A 158  SER  HB3', -0.474, (1.091, 2.645, 26.983)), (' B  19  GLN  NE2', ' B  26  THR HG21', -0.474, (-17.914, -6.462, 46.064)), (' A 277  ASN  C  ', ' A 279  ARG  H  ', -0.472, (-14.807, -30.178, 13.179)), (' A   3  PHE  CZ ', ' A 300  CYS  SG ', -0.472, (-9.393, -16.383, 29.25)), (' A 299  GLN  O  ', ' A 301  SER  N  ', -0.471, (-10.01, -13.64, 33.535)), (' B 247  VAL HG13', ' B 261  VAL HG11', -0.471, (-36.057, -7.396, 1.994)), (' A 111  THR HG23', ' A 292  THR  CG2', -0.469, (-2.412, -8.544, 21.312)), (' B  86  LEU HD23', ' B  87  LEU  N  ', -0.468, (-33.131, -4.605, 41.687)), (' A 140  PHE  CD1', ' A 172  HIS  CD2', -0.468, (-9.188, 3.353, 10.184)), (' B 242  LEU HD12', ' B 246  HIS  CD2', -0.468, (-36.689, -11.412, 8.148)), (' B 210  ALA  HA ', ' B 213  ILE  CG2', -0.467, (-22.662, -2.489, 3.238)), (' A 114  VAL HG11', ' A 140  PHE  CZ ', -0.467, (-9.45, 3.174, 15.35)), (' A 277  ASN  H  ', ' A 277  ASN HD22', -0.466, (-11.827, -30.366, 10.014)), (' B 134  HIS  HB3', ' B 182  TYR  O  ', -0.466, (-34.241, -14.248, 27.798)), (' B 263  ASP  O  ', ' B 266  ALA  N  ', -0.465, (-31.181, -13.354, -2.973)), (' A 260  ALA  O  ', ' A 263  ASP  HB2', -0.463, (3.481, -28.08, 24.514)), (' B 262  LEU  HA ', ' B 265  CYS  HB2', -0.461, (-34.862, -11.84, -1.261)), (' B  43  ILE  HB ', ' B  61  LYS  CE ', -0.46, (-30.746, -10.624, 51.629)), (' A 186  VAL  H  ', ' A 192  GLN HE22', -0.458, (2.912, 6.954, 4.332)), (' B 163  HIS  CE1', ' B 172  HIS  HB3', -0.458, (-25.107, -14.008, 32.307)), (' B 217  ARG  CZ ', ' B 326  HOH  O  ', -0.458, (-21.173, -2.665, -6.028)), (' B 212  VAL HG23', ' B 219  PHE  CZ ', -0.458, (-22.472, -8.369, -0.703)), (' A 131  ARG  HB2', ' A 135  THR  O  ', -0.457, (-2.39, -3.816, 11.262)), (' B  53  ASN  O  ', ' B  55  GLU  N  ', -0.457, (-39.474, -14.047, 49.181)), (' A 225  THR  OG1', ' A 226  THR  N  ', -0.456, (8.471, -29.379, 16.226)), (' B  31  TRP  CD2', ' B  95  ASN  HB2', -0.456, (-24.598, 7.072, 42.247)), (' B  34  ASP  O  ', ' B  91  VAL HG22', -0.456, (-30.133, 5.991, 46.031)), (' B 260  ALA  O  ', ' B 263  ASP  HB2', -0.455, (-31.791, -8.178, -4.085)), (' A  40  ARG  HG3', ' A  54  TYR  CE2', -0.455, (1.558, 17.26, 9.054)), (' A   4  ARG  HB2', ' B 139  SER  HB3', -0.453, (-16.879, -12.133, 26.949)), (' A 231  ASN  C  ', ' A 233  VAL  H  ', -0.451, (6.751, -24.447, 9.324)), (' A 175  THR HG22', ' A 181  PHE  CA ', -0.45, (3.788, 7.39, 12.222)), (' A 112  PHE  HB3', ' A 151  ASN HD21', -0.45, (-2.89, -1.475, 23.036)), (' B 154  TYR  HB2', ' B 155  ASP  H  ', -0.449, (-28.517, 11.958, 22.891)), (' B 207  TRP  CE2', ' B 282  LEU HD12', -0.449, (-19.632, -9.356, 7.046)), (' B  43  ILE  O  ', ' B  43  ILE HG13', -0.449, (-31.433, -13.031, 49.092)), (' B 255  ALA  O  ', ' B 256  GLN  C  ', -0.449, (-27.809, 1.205, -2.669)), (' A   3  PHE  HE2', ' A 291  PHE  CE2', -0.448, (-8.921, -14.627, 26.069)), (' A 218  TRP  CZ2', ' A 279  ARG  HB3', -0.448, (-12.479, -29.658, 16.862)), (' A  51  ASN  C  ', ' A  51  ASN HD22', -0.447, (5.185, 17.047, 0.622)), (' A 291  PHE  CE1', ' A 295  ASP  HB3', -0.445, (-7.729, -11.26, 25.19)), (' A  22  CYS  SG ', ' A  61  LYS  NZ ', -0.445, (-4.48, 25.477, 9.696)), (' A 292  THR  O  ', ' A 296  VAL HG23', -0.443, (-4.271, -13.707, 25.676)), (' A 125  VAL  O  ', ' A 125  VAL HG13', -0.443, (-15.775, -0.207, 22.149)), (' A 113  SER  O  ', ' A 149  GLY  HA2', -0.442, (-7.075, 2.432, 21.263)), (' B  56  ASP  O  ', ' B  60  ARG  HD2', -0.442, (-37.571, -14.081, 54.928)), (' A 112  PHE  HB3', ' A 151  ASN  ND2', -0.442, (-2.914, -1.2, 23.643)), (' A  26  THR HG21', ' A 119  ASN  OD1', -0.441, (-15.549, 18.528, 12.801)), (' B  40  ARG  O  ', ' B  43  ILE HG12', -0.44, (-31.722, -11.231, 47.133)), (' A 153  ASP  HB3', ' A 154  TYR  CZ ', -0.439, (-1.122, -1.833, 34.535)), (' A 226  THR HG23', ' A 327  HOH  O  ', -0.439, (13.434, -26.306, 15.577)), (' A  45  THR HG23', ' A  46  ALA  N  ', -0.439, (-6.6, 21.688, 0.256)), (' A 167  LEU  HA ', ' A 167  LEU HD12', -0.438, (-4.047, 4.326, 2.58)), (' B   8  PHE  HE2', ' B 151  ASN  OD1', -0.435, (-26.29, 0.035, 21.378)), (' B 207  TRP  NE1', ' B 282  LEU HD12', -0.435, (-19.477, -8.625, 7.161)), (' B 213  ILE  C  ', ' B 213  ILE HD13', -0.433, (-19.919, -0.523, 1.156)), (' B 298  ARG  HG2', ' B 298  ARG  O  ', -0.433, (-22.011, 3.924, 12.685)), (' A   6  MET  O  ', ' A 127  GLN  CG ', -0.432, (-10.745, -5.213, 23.727)), (' B 240  GLU  CB ', ' B 312  HOH  O  ', -0.431, (-34.942, -14.806, 13.293)), (' B 206  ALA  HB2', ' B 293  PRO  HG3', -0.431, (-29.954, -5.614, 8.592)), (' B 276  MET  HE3', ' B 281  ILE HG13', -0.431, (-18.68, -15.065, 2.701)), (' A 137  LYS  O  ', ' B   4  ARG  HD3', -0.43, (-11.145, -3.753, 12.638)), (' A   4  ARG  HD3', ' B 138  GLY  HA2', -0.43, (-19.936, -12.995, 25.038)), (' B 165  MET  HE2', ' B 167  LEU  HA ', -0.429, (-27.83, -20.306, 33.86)), (' B 109  GLY  HA2', ' B 200  ILE HD13', -0.429, (-30.724, -10.91, 16.841)), (' A 277  ASN  N  ', ' A 277  ASN  ND2', -0.428, (-11.641, -31.245, 10.274)), (' B  84  ASN  HB3', ' B 179  GLY  O  ', -0.428, (-38.57, -8.988, 37.308)), (' A  43  ILE  HB ', ' A  61  LYS  HE3', -0.428, (-1.986, 24.334, 8.99)), (' A 203  ASN  OD1', ' A 292  THR  HA ', -0.428, (-1.834, -12.199, 21.285)), (' A 260  ALA  O  ', ' A 263  ASP  N  ', -0.427, (4.054, -27.623, 23.628)), (' B 153  ASP  C  ', ' B 154  TYR  CG ', -0.426, (-28.747, 10.102, 20.938)), (' A 171  VAL HG13', ' A 172  HIS  H  ', -0.426, (-5.547, -0.707, 8.011)), (' B  92  ASP  OD1', ' B  93  THR  N  ', -0.426, (-26.439, 9.313, 50.203)), (' B 207  TRP  CH2', ' B 281  ILE  HB ', -0.425, (-18.805, -12.736, 5.109)), (' A 243  THR  N  ', ' A 246  HIS  HD2', -0.425, (8.549, -16.133, 16.785)), (' A   4  ARG  HG2', ' B 126  TYR  CD1', -0.425, (-18.912, -9.484, 24.688)), (' A 180  LYS  HD2', ' A 336  HOH  O  ', -0.425, (7.378, 8.237, 11.781)), (' A 121  SER  HA ', ' A 122  PRO  HD3', -0.424, (-16.798, 13.07, 21.801)), (' B 210  ALA  HB2', ' B 296  VAL HG13', -0.424, (-23.028, -3.418, 6.611)), (' A 111  THR HG22', ' A 129  ALA  CB ', -0.424, (-3.912, -6.966, 18.335)), (' B  10  SER  CB ', ' B 115  LEU HD13', -0.424, (-18.319, 0.596, 29.399)), (' B  19  GLN HE21', ' B  26  THR  CG2', -0.422, (-18.235, -7.052, 45.548)), (' A 226  THR HG23', ' A 228  ASN  H  ', -0.421, (12.391, -26.077, 15.082)), (' B  43  ILE  CB ', ' B  61  LYS  HE3', -0.421, (-30.068, -10.585, 51.108)), (' B 138  GLY  O  ', ' B 172  HIS  HE1', -0.421, (-20.594, -15.772, 27.45)), (' B 305  PHE  HA ', ' B 305  PHE  HD2', -0.42, (-26.239, 11.84, 4.133)), (' A 304  THR HG21', ' B 121  SER  OG ', -0.42, (-12.455, -2.498, 39.044)), (' B  44  CYS  CB ', ' B  48  ASP  HB2', -0.42, (-30.353, -16.989, 48.931)), (' B 294  PHE  HD2', ' B 294  PHE  O  ', -0.419, (-27.319, 1.184, 12.693)), (' A  76  ARG  NH1', ' A  92  ASP  OD1', -0.419, (-7.216, 31.341, 27.814)), (' A  94  SER  O  ', ' A  96  PRO  HD3', -0.418, (-8.519, 21.256, 32.593)), (' A  87  LEU HD23', ' A  88  ARG  N  ', -0.418, (1.054, 20.584, 17.916)), (' B 254  SER  OG ', ' B 260  ALA  HA ', -0.417, (-33.166, -3.867, -2.504)), (' A 166  GLU  HB2', ' A 309  HOH  O  ', -0.416, (-9.259, 6.82, 6.653)), (' A  13  VAL HG21', ' A 150  PHE  CD2', -0.415, (-8.282, 5.217, 25.593)), (' B  60  ARG  HG3', ' B  60  ARG HH11', -0.414, (-37.909, -13.452, 57.151)), (' A 140  PHE  CB ', ' A 144  SER  HG ', -0.414, (-11.105, 5.799, 11.16)), (' A  88  ARG  HD3', ' A 324  HOH  O  ', -0.413, (6.184, 19.005, 21.386)), (' B 198  THR HG21', ' B 240  GLU  OE1', -0.413, (-35.018, -19.541, 14.675)), (' B 209  TYR  HB3', ' B 253  LEU HD22', -0.412, (-26.528, -3.399, 3.38)), (' A 299  GLN  C  ', ' A 301  SER  N  ', -0.412, (-9.395, -13.553, 33.546)), (' A 243  THR  O  ', ' A 246  HIS  HB2', -0.411, (8.255, -16.999, 19.578)), (' A   6  MET  HB2', ' A   6  MET  HE3', -0.41, (-12.315, -7.558, 27.62)), (' A  40  ARG  C  ', ' A  42  VAL  H  ', -0.41, (-2.497, 18.232, 10.548)), (' A 225  THR  CB ', ' A 269  LYS  HZ1', -0.408, (6.442, -29.622, 15.673)), (' B 166  GLU  HA ', ' B 166  GLU  OE1', -0.408, (-23.645, -17.918, 32.918)), (' B 278  GLY  HA2', ' B 310  HOH  O  ', -0.406, (-14.829, -21.305, 3.029)), (' B 222  ARG  CG ', ' B 222  ARG  NH1', -0.406, (-29.859, -13.574, -14.233)), (' A 211  ALA  O  ', ' A 214  ALA  HB3', -0.404, (-10.935, -23.426, 27.273)), (' A 235  MET  CE ', ' A 241  PRO  HG3', -0.403, (8.339, -17.471, 8.334)), (' B 127  GLN  HB3', ' B 127  GLN HE21', -0.403, (-21.116, -5.64, 18.943)), (' B 222  ARG  CG ', ' B 222  ARG HH11', -0.402, (-29.902, -13.511, -14.135)), (' B 239  TYR  CZ ', ' B 272  LEU HD21', -0.402, (-27.51, -19.054, 6.836)), (' B 225  THR  OG1', ' B 226  THR  N  ', -0.401, (-37.674, -16.937, -3.614)), (' B 180  LYS  HD2', ' B 181  PHE  N  ', -0.4, (-38.72, -11.063, 32.778))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

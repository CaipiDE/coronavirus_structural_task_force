# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('A', '  46 ', 'ALA', 0.030977071316708914, (-7.101, 7.451, -0.388)), ('A', '  51 ', 'ASN', 0.09712966053520067, (2.735999999999999, 3.609, -0.4300000000000001)), ('A', '  54 ', 'TYR', 0.028348177786479318, (4.308000000000002, 8.457000000000003, 7.215000000000002)), ('A', ' 141 ', 'LEU', 0.009480686061809237, (-15.188000000000006, -6.106, 8.476)), ('A', ' 154 ', 'TYR', 0.015041538294772165, (-4.878000000000004, -13.137, 37.00500000000002)), ('A', ' 271 ', 'LEU', 0.03513667561063436, (-6.68, -40.034000000000006, 12.809)), ('A', ' 274 ', 'ASN', 0.012763902298771054, (-7.042999999999999, -44.073, 8.732000000000003)), ('A', ' 275 ', 'GLY', 0.006151575987852125, (-9.707, -41.366, 8.28)), ('A', ' 284 ', 'ALA', 0.004252092036657768, (-16.999, -32.055, 16.538)), ('A', ' 304 ', 'THR', 0.0, (-6.620000000000002, -20.515000000000004, 42.125000000000014)), ('B', '  46 ', 'ALA', 0.03360108262520858, (-25.776000000000007, -34.304, 48.979)), ('B', '  47 ', 'GLU', 0.015276545934293504, (-28.973000000000013, -35.988000000000014, 50.146)), ('B', '  48 ', 'ASP', 0.008919318449335118, (-31.333, -33.08, 49.529)), ('B', ' 154 ', 'TYR', 0.0367400373799141, (-27.316000000000003, -1.082, 21.85300000000001)), ('B', ' 222 ', 'ARG', 0.012512857665545449, (-28.117000000000004, -24.777000000000005, -10.37)), ('B', ' 275 ', 'GLY', 0.0065317482807785675, (-20.089000000000002, -36.384, 2.259)), ('B', ' 276 ', 'MET', 0.0, (-18.440000000000005, -32.96200000000001, 1.926)), ('B', ' 277 ', 'ASN', 0.002531693036876225, (-15.926000000000002, -34.186, -0.7130000000000002)), ('B', ' 283 ', 'GLY', 0.05775890296541835, (-12.41, -23.073, 6.658))]
data['omega'] = []
data['rota'] = [('A', '   5 ', 'LYS', 0.04501618772860174, (-13.223000000000006, -22.431, 22.747)), ('A', '  30 ', 'LEU', 0.09021339108815687, (-6.167000000000002, 1.4830000000000005, 22.985)), ('A', '  64 ', 'HIS', 0.1516072908429016, (-5.684000000000002, 19.092000000000002, 17.242)), ('A', '  76 ', 'ARG', 0.13601255143414892, (-7.920000000000002, 16.355000000000008, 23.979)), ('A', '  77 ', 'VAL', 0.009599324249126228, (-4.699000000000002, 15.018000000000004, 22.478)), ('A', '  87 ', 'LEU', 0.07182229923400062, (0.8979999999999979, 5.978, 16.724)), ('A', ' 107 ', 'GLN', 0.1794603604181353, (4.932999999999997, -16.606, 18.721)), ('A', ' 127 ', 'GLN', 0.0, (-10.801000000000002, -16.539, 20.363000000000007)), ('A', ' 131 ', 'ARG', 0.15609656335679195, (-1.435000000000001, -18.789, 12.270000000000003)), ('A', ' 153 ', 'ASP', 0.028594009825448484, (-3.2290000000000045, -13.946, 33.694)), ('A', ' 165 ', 'MET', 0.2847801178674135, (-5.017000000000002, -4.375000000000002, 7.452)), ('A', ' 167 ', 'LEU', 0.06520638210884133, (-4.752, -9.327, 3.181)), ('A', ' 196 ', 'THR', 0.07440114468788214, (1.232, -21.259000000000007, 2.794)), ('A', ' 228 ', 'ASN', 0.24804762248668782, (11.037000000000003, -38.133, 12.913)), ('A', ' 268 ', 'LEU', 0.0005965216728119277, (-2.809000000000002, -38.534, 15.690000000000003)), ('A', ' 288 ', 'GLU', 0.16303526092800474, (-9.230000000000004, -28.569, 16.172)), ('B', '   5 ', 'LYS', 0.020220363911143253, (-18.317000000000007, -17.233, 15.859)), ('B', '   9 ', 'PRO', 0.08925044408640755, (-18.567, -8.319, 25.2)), ('B', '  30 ', 'LEU', 0.00016821382811963277, (-26.593000000000007, -12.514, 39.19400000000002)), ('B', '  63 ', 'ASN', 0.0008081908734792081, (-31.134, -14.524, 55.489)), ('B', '  77 ', 'VAL', 0.003150532575091347, (-29.008000000000006, -10.367, 52.28800000000001)), ('B', '  78 ', 'ILE', 0.1806989989816254, (-32.05700000000001, -8.609, 53.76600000000001)), ('B', '  87 ', 'LEU', 0.08682110288592275, (-33.79500000000001, -17.793000000000003, 44.22900000000001)), ('B', ' 127 ', 'GLN', 0.0, (-21.240000000000002, -18.236, 21.892)), ('B', ' 153 ', 'ASP', 0.23371714497204707, (-28.620000000000005, -4.629, 21.729)), ('B', ' 187 ', 'ASP', 0.0017698934911512573, (-33.399, -29.637, 39.80600000000001)), ('B', ' 213 ', 'ILE', 0.0, (-20.987, -14.243000000000002, 0.489)), ('B', ' 232 ', 'LEU', 0.03519912417456092, (-37.76800000000001, -36.135, 3.463)), ('B', ' 238 ', 'ASN', 0.2357525709630774, (-31.27600000000001, -36.004, 11.567)), ('B', ' 268 ', 'LEU', 0.054956590333704806, (-27.41900000000002, -29.055, 1.411)), ('B', ' 288 ', 'GLU', 0.1977998959694827, (-21.92, -25.442, 11.519))]
data['cbeta'] = []
data['probe'] = [(' A 226  THR HG22', ' A 228  ASN  H  ', -0.981, (11.709, -39.5, 14.39)), (' B 223  PHE  HB2', ' B 311  HOH  O  ', -0.953, (-28.749, -30.13, -9.38)), (' B  63  ASN  H  ', ' B  63  ASN HD22', -0.945, (-32.655, -14.882, 56.366)), (' B  63  ASN  N  ', ' B  63  ASN HD22', -0.936, (-32.924, -15.483, 55.616)), (' A  49  MET  HA ', ' A  49  MET  HE2', -0.896, (-1.343, 4.182, 2.446)), (' B  63  ASN  H  ', ' B  63  ASN  ND2', -0.863, (-33.668, -14.526, 56.031)), (' B   6  MET  O  ', ' B 127  GLN  HG3', -0.819, (-21.094, -15.665, 18.938)), (' B 226  THR HG22', ' B 229  ASP  HB2', -0.789, (-38.288, -32.401, -2.977)), (' B 167  LEU HD21', ' B 185  PHE  CE1', -0.781, (-31.406, -33.224, 30.168)), (' B 141  LEU HD11', ' B 345  HOH  O  ', -0.78, (-15.191, -27.458, 30.077)), (' B 140  PHE  HB2', ' B 172  HIS  CE1', -0.759, (-21.225, -27.012, 30.848)), (' B 280  THR  HB ', ' B 284  ALA  O  ', -0.758, (-13.892, -26.688, 5.31)), (' A 285  ALA  HB3', ' B 286  ALA  HB2', -0.754, (-16.822, -32.302, 10.873)), (' A 226  THR HG22', ' A 228  ASN  N  ', -0.753, (10.802, -39.023, 14.472)), (' A  57  LEU HD23', ' A  60  ARG HH21', -0.746, (2.355, 14.373, 3.642)), (' B 276  MET  HE1', ' B 286  ALA  HA ', -0.744, (-17.988, -30.889, 7.397)), (' A 303  VAL HG12', ' A 304  THR HG22', -0.744, (-4.517, -21.162, 39.621)), (' A   4  ARG  HB2', ' B 139  SER  HB2', -0.742, (-16.159, -24.609, 26.806)), (' B 131  ARG HH22', ' B 289  ASP  CG ', -0.735, (-26.815, -26.799, 15.818)), (' A 140  PHE  HB3', ' A 144  SER  OG ', -0.733, (-11.503, -5.499, 10.681)), (' A  30  LEU HD22', ' A  32  LEU  HG ', -0.725, (-3.851, 0.435, 26.236)), (' A 219  PHE  HB2', ' A 271  LEU HD21', -0.723, (-7.77, -41.551, 16.807)), (' B  49  MET  HA ', ' B  49  MET  HE2', -0.706, (-31.531, -31.583, 44.751)), (' B 127  GLN HE21', ' B 128  CYS  N  ', -0.698, (-23.122, -18.512, 21.121)), (' B  33  ASP  O  ', ' B  94  SER  HA ', -0.689, (-28.499, -2.924, 43.644)), (' A 234  ALA  HB1', ' A 239  TYR  HB2', -0.687, (1.513, -32.941, 9.848)), (' A 169  THR  HB ', ' A 171  VAL HG12', -0.677, (-5.545, -13.258, 3.902)), (' B  52  PRO  HD2', ' B 188  ARG  HG2', -0.67, (-35.835, -32.727, 43.997)), (' A 126  TYR  HD2', ' B   6  MET  HG2', -0.67, (-15.531, -12.222, 16.722)), (' B 118  TYR  O  ', ' B 119  ASN  HB2', -0.669, (-15.504, -18.595, 41.774)), (' B 127  GLN  CA ', ' B 127  GLN HE21', -0.663, (-22.293, -18.57, 21.35)), (' A 131  ARG  HD2', ' A 137  LYS  HE3', -0.656, (-5.17, -20.139, 8.988)), (' B 166  GLU  HG3', ' B 172  HIS  CD2', -0.656, (-22.804, -29.236, 32.696)), (' B 131  ARG  HB2', ' B 135  THR  O  ', -0.652, (-29.119, -27.266, 23.57)), (' B 105  ARG  NH1', ' B 180  LYS  HB3', -0.651, (-39.121, -20.984, 31.193)), (' A   6  MET  O  ', ' A 127  GLN  HG3', -0.649, (-11.482, -18.879, 24.066)), (' B  67  LEU HD11', ' B  74  GLN HE21', -0.648, (-19.488, -13.913, 53.664)), (' B  33  ASP  HA ', ' B 328  HOH  O  ', -0.642, (-29.472, -1.641, 40.599)), (' A 140  PHE  HB2', ' A 172  HIS  CD2', -0.642, (-10.462, -8.361, 9.684)), (' B  63  ASN  N  ', ' B  63  ASN  ND2', -0.641, (-33.084, -14.537, 55.297)), (' B 212  VAL  HA ', ' B 216  ASP  O  ', -0.64, (-19.438, -19.224, -1.076)), (' B  48  ASP  O  ', ' B  52  PRO  HB3', -0.639, (-33.596, -32.408, 47.255)), (' B 213  ILE HD13', ' B 214  ASN  N  ', -0.639, (-19.123, -13.823, 1.823)), (' B 106  ILE HG12', ' B 110  GLN  HB2', -0.638, (-33.208, -18.367, 21.034)), (' A 163  HIS  CE1', ' A 172  HIS  HB3', -0.636, (-6.902, -7.645, 9.598)), (' B 299  GLN  HG2', ' B 299  GLN  O  ', -0.631, (-19.683, -11.0, 9.562)), (' B  19  GLN  NE2', ' B 119  ASN  HB3', -0.629, (-16.143, -18.272, 44.131)), (' B 140  PHE  C  ', ' B 141  LEU HD12', -0.626, (-17.773, -27.481, 32.184)), (' B 276  MET  O  ', ' B 278  GLY  N  ', -0.624, (-15.2, -33.304, 0.954)), (' B  78  ILE  O  ', ' B  78  ILE HD12', -0.621, (-34.447, -8.222, 53.385)), (' A 285  ALA  HA ', ' A 312  HOH  O  ', -0.617, (-15.607, -35.431, 13.553)), (' B  76  ARG  HB3', ' B  92  ASP  OD2', -0.613, (-26.354, -5.751, 53.814)), (' A 243  THR  H  ', ' A 246  HIS  CD2', -0.612, (7.615, -29.512, 17.147)), (' B   7  ALA  HA ', ' B 127  GLN  HG2', -0.612, (-21.146, -15.141, 20.93)), (' B 254  SER  HB2', ' B 259  ILE  O  ', -0.608, (-31.768, -16.956, -2.598)), (' A 209  TYR  O  ', ' A 213  ILE HG12', -0.606, (-7.216, -34.075, 28.19)), (' A  48  ASP  HA ', ' A 356  HOH  O  ', -0.603, (-0.454, 9.128, -0.69)), (' B 109  GLY  HA2', ' B 200  ILE HD13', -0.601, (-30.864, -24.004, 16.666)), (' B 161  TYR  CE1', ' B 174  GLY  HA3', -0.598, (-30.077, -23.783, 31.259)), (' B 203  ASN  OD1', ' B 292  THR  HA ', -0.595, (-29.277, -20.05, 12.753)), (' B 213  ILE  C  ', ' B 213  ILE HD13', -0.594, (-19.45, -13.176, 1.618)), (' B 209  TYR  O  ', ' B 213  ILE HG22', -0.591, (-23.16, -15.659, 1.928)), (' B 153  ASP  O  ', ' B 154  TYR  HB2', -0.589, (-29.28, -1.583, 22.669)), (' B 132  PRO  HD2', ' B 197  ASP  OD2', -0.588, (-29.977, -30.472, 19.071)), (' A   1  SER  HA ', ' B 137  LYS  HG2', -0.58, (-23.053, -30.89, 23.541)), (' B  88  ARG  HD3', ' B 330  HOH  O  ', -0.58, (-39.244, -13.92, 42.643)), (' B 171  VAL HG22', ' B 172  HIS  H  ', -0.58, (-25.831, -29.135, 27.952)), (' B  49  MET  HB3', ' B 189  GLN  HG2', -0.573, (-29.114, -33.782, 43.1)), (' A 270  GLU  C  ', ' A 272  LEU  N  ', -0.57, (-5.091, -40.184, 11.438)), (' A 175  THR HG22', ' A 181  PHE  HA ', -0.57, (2.597, -5.059, 12.631)), (' B 105  ARG HH12', ' B 180  LYS  HB3', -0.566, (-39.441, -21.516, 31.905)), (' A 136  ILE  O  ', ' A 171  VAL HG23', -0.564, (-6.659, -13.931, 9.203)), (' B 270  GLU  CG ', ' B 274  ASN HD22', -0.563, (-24.121, -34.009, -4.132)), (' A 305  PHE  O  ', ' A 306  GLN  HB3', -0.563, (-8.061, -14.591, 42.883)), (' A 304  THR  OG1', ' A 305  PHE  N  ', -0.562, (-5.493, -19.242, 43.103)), (' A 135  THR  OG1', ' A 171  VAL HG21', -0.559, (-4.018, -15.278, 7.649)), (' A 270  GLU  O  ', ' A 272  LEU  N  ', -0.556, (-5.16, -40.86, 11.07)), (' A   4  ARG HH21', ' B 128  CYS  CB ', -0.556, (-22.633, -23.128, 21.947)), (' A 243  THR  H  ', ' A 246  HIS  HD2', -0.554, (6.954, -29.323, 17.09)), (' A  60  ARG  NH2', ' A 348  HOH  O  ', -0.554, (3.452, 14.846, 2.171)), (' B  49  MET  HE1', ' B  54  TYR  OH ', -0.553, (-32.465, -29.084, 43.605)), (' A 305  PHE  O  ', ' A 306  GLN  CB ', -0.552, (-8.764, -14.9, 43.055)), (' A 111  THR HG22', ' A 129  ALA  HB2', -0.549, (-4.642, -19.917, 18.154)), (' A 153  ASP  O  ', ' A 154  TYR  HB2', -0.548, (-3.055, -12.238, 36.251)), (' A 186  VAL  HA ', ' A 328  HOH  O  ', -0.544, (4.705, -2.435, 6.833)), (' A 126  TYR  CD2', ' B   6  MET  HG2', -0.542, (-14.926, -12.313, 16.86)), (' A 270  GLU  C  ', ' A 272  LEU  H  ', -0.541, (-4.835, -40.195, 11.438)), (' B 231  ASN  O  ', ' B 235  MET  HG3', -0.541, (-37.146, -34.664, 6.204)), (' B 127  GLN  C  ', ' B 127  GLN HE21', -0.54, (-22.45, -18.777, 21.087)), (' B  10  SER  O  ', ' B  14  GLU  HG3', -0.54, (-18.292, -9.165, 31.652)), (' A  86  LEU HD12', ' A 179  GLY  N  ', -0.54, (2.804, -0.987, 18.037)), (' B 187  ASP  O  ', ' B 188  ARG  HG3', -0.54, (-34.343, -31.667, 41.852)), (' B 105  ARG  NH1', ' B 176  ASP  OD2', -0.539, (-38.452, -20.551, 30.529)), (' A  10  SER  HB2', ' A 115  LEU HD13', -0.539, (-13.986, -7.63, 24.713)), (' B 275  GLY  O  ', ' B 277  ASN  N  ', -0.534, (-17.51, -35.019, 0.478)), (' A  52  PRO  HG2', ' A  54  TYR  CE1', -0.534, (2.819, 4.561, 5.031)), (' A 114  VAL HG11', ' A 140  PHE  HZ ', -0.533, (-9.327, -9.278, 16.429)), (' B 260  ALA  O  ', ' B 263  ASP  HB2', -0.53, (-32.097, -21.618, -3.732)), (' B  77  VAL  HA ', ' B  91  VAL HG12', -0.529, (-29.047, -9.826, 50.651)), (' A   4  ARG  HG2', ' A   4  ARG HH11', -0.528, (-18.978, -25.106, 23.682)), (' B  45  THR HG22', ' B  48  ASP  OD2', -0.528, (-28.47, -31.16, 51.931)), (' A   4  ARG HH21', ' B 128  CYS  HB3', -0.528, (-22.589, -22.692, 22.415)), (' A 114  VAL HG11', ' A 140  PHE  CZ ', -0.526, (-9.828, -9.144, 15.819)), (' A  57  LEU HD23', ' A  60  ARG  NH2', -0.524, (2.166, 14.272, 3.431)), (' A 293  PRO  O  ', ' A 297  VAL HG23', -0.523, (-2.777, -27.057, 29.149)), (' B 252  PRO  HG2', ' B 346  HOH  O  ', -0.522, (-31.89, -12.812, 5.329)), (' A 167  LEU HD21', ' A 185  PHE  CE1', -0.521, (0.513, -11.158, 4.489)), (' A 302  GLY  HA3', ' A 353  HOH  O  ', -0.521, (-12.988, -23.435, 38.573)), (' A  95  ASN  HB3', ' A  98  THR  OG1', -0.521, (-6.348, 3.985, 31.275)), (' A 138  GLY  O  ', ' A 172  HIS  HE1', -0.52, (-10.893, -12.234, 9.628)), (' A  86  LEU HD21', ' A 162  MET  SD ', -0.52, (-1.845, -0.419, 16.717)), (' B  88  ARG  CD ', ' B 330  HOH  O  ', -0.518, (-39.148, -13.444, 42.213)), (' B 226  THR HG22', ' B 229  ASP  CB ', -0.518, (-38.807, -32.617, -2.737)), (' A 166  GLU  N  ', ' A 166  GLU  OE2', -0.516, (-7.583, -5.282, 6.291)), (' A  66  PHE  HB2', ' A  77  VAL HG11', -0.513, (-5.494, 14.158, 18.131)), (' B  50  LEU HD23', ' B 189  GLN  HB2', -0.513, (-29.93, -37.018, 43.089)), (' B 276  MET  C  ', ' B 278  GLY  H  ', -0.513, (-16.334, -33.818, 1.475)), (' A  30  LEU HD22', ' A  32  LEU  CG ', -0.509, (-3.909, 0.18, 26.431)), (' B  21  THR HG23', ' B  26  THR  OG1', -0.509, (-21.051, -21.637, 49.455)), (' B 226  THR HG23', ' B 229  ASP  H  ', -0.508, (-40.068, -31.431, -1.691)), (' A   3  PHE  HB2', ' A 282  LEU HD22', -0.506, (-14.073, -31.309, 24.193)), (' B 110  GLN  HG2', ' B 323  HOH  O  ', -0.506, (-33.48, -16.797, 17.32)), (' A  45  THR  O  ', ' A  46  ALA  HB3', -0.505, (-6.072, 9.141, 0.209)), (' A  86  LEU HD12', ' A 179  GLY  H  ', -0.505, (2.755, -1.065, 18.297)), (' A  30  LEU  O  ', ' A  36  VAL  HA ', -0.499, (-4.533, 4.672, 23.352)), (' A 274  ASN  O  ', ' A 275  GLY  C  ', -0.498, (-9.57, -42.11, 9.919)), (' B 246  HIS  O  ', ' B 249  ILE  HB ', -0.496, (-36.042, -18.273, 7.427)), (' B 140  PHE  HB3', ' B 144  SER  OG ', -0.496, (-21.149, -25.094, 34.071)), (' A 229  ASP  O  ', ' A 233  VAL HG23', -0.496, (5.738, -40.185, 10.029)), (' A 276  MET  HB3', ' A 340  HOH  O  ', -0.496, (-13.903, -39.237, 10.47)), (' B 227  LEU  C  ', ' B 227  LEU HD13', -0.494, (-40.23, -28.736, 1.755)), (' B 242  LEU  HA ', ' B 246  HIS  HD2', -0.493, (-37.729, -25.163, 8.666)), (' A 165  MET  SD ', ' A 187  ASP  HA ', -0.493, (-0.184, -2.311, 5.87)), (' A  62  SER  O  ', ' A  65  SER  HB2', -0.492, (-2.867, 16.458, 14.341)), (' A 124  GLY  HA3', ' B   6  MET  CE ', -0.491, (-18.228, -9.609, 17.829)), (' B  86  LEU  HG ', ' B 179  GLY  HA2', -0.491, (-35.135, -19.227, 37.699)), (' A 140  PHE  HB2', ' A 172  HIS  NE2', -0.486, (-10.514, -9.176, 9.784)), (' B 270  GLU  HG2', ' B 274  ASN HD22', -0.485, (-23.532, -33.696, -3.619)), (' B   4  ARG  HG2', ' B   4  ARG HH11', -0.485, (-12.607, -16.56, 12.878)), (' B 107  GLN  N  ', ' B 110  GLN  OE1', -0.484, (-35.726, -18.826, 21.299)), (' A   5  LYS  HB2', ' A   5  LYS  NZ ', -0.483, (-12.504, -23.32, 20.148)), (' B 112  PHE  O  ', ' B 127  GLN  NE2', -0.48, (-24.202, -17.777, 21.799)), (' B 233  VAL HG11', ' B 269  LYS  HG3', -0.48, (-31.232, -34.735, 0.13)), (' A 273  GLN  O  ', ' A 275  GLY  N  ', -0.476, (-7.771, -42.504, 7.404)), (' A 107  GLN  HA ', ' A 107  GLN HE21', -0.475, (6.081, -16.541, 17.85)), (' A 171  VAL HG22', ' A 172  HIS  N  ', -0.475, (-5.374, -12.748, 8.027)), (' B  47  GLU  O  ', ' B  48  ASP  C  ', -0.472, (-31.076, -34.254, 47.976)), (' B 171  VAL HG22', ' B 172  HIS  N  ', -0.471, (-25.774, -29.721, 28.225)), (' A 131  ARG HH22', ' A 289  ASP  CG ', -0.47, (-4.961, -24.883, 13.306)), (' A  63  ASN  HB3', ' A  77  VAL  O  ', -0.47, (-3.048, 17.485, 20.79)), (' B 243  THR  H  ', ' B 246  HIS  CD2', -0.469, (-38.563, -24.377, 8.84)), (' A 231  ASN  O  ', ' A 235  MET  HG3', -0.469, (6.438, -34.088, 7.944)), (' B 269  LYS  HD3', ' B 329  HOH  O  ', -0.468, (-32.753, -35.496, -2.983)), (' B 221  ASN  O  ', ' B 221  ASN  OD1', -0.466, (-27.683, -26.996, -7.436)), (' B 162  MET  O  ', ' B 164  HIS  HD2', -0.465, (-30.175, -22.142, 34.871)), (' B 282  LEU  C  ', ' B 284  ALA  H  ', -0.465, (-14.702, -23.139, 6.859)), (' A 303  VAL HG12', ' A 304  THR  N  ', -0.463, (-6.027, -21.544, 40.193)), (' A 131  ARG  HB2', ' A 135  THR  O  ', -0.463, (-2.347, -16.866, 10.885)), (' B 111  THR HG23', ' B 292  THR HG23', -0.462, (-28.098, -18.686, 16.756)), (' B  40  ARG  HG3', ' B  54  TYR  CE2', -0.461, (-33.759, -25.903, 44.65)), (' B   3  PHE  HE1', ' B 300  CYS  SG ', -0.461, (-21.174, -13.037, 7.439)), (' B  19  GLN HE21', ' B 119  ASN  CB ', -0.461, (-16.841, -18.816, 44.316)), (' A  94  SER  O  ', ' A  96  PRO  HD3', -0.46, (-9.0, 8.322, 33.318)), (' A 106  ILE HG12', ' A 110  GLN  HB2', -0.46, (1.325, -16.42, 20.634)), (' B  24  THR HG23', ' B 308  HOH  O  ', -0.459, (-21.98, -28.756, 50.413)), (' A 247  VAL HG13', ' A 261  VAL HG11', -0.458, (6.337, -34.625, 22.914)), (' A  49  MET  CE ', ' A  49  MET  HA ', -0.456, (-2.137, 4.048, 3.272)), (' B 175  THR  HB ', ' B 180  LYS  O  ', -0.455, (-35.782, -22.056, 33.975)), (' B 224  THR  HB ', ' B 263  ASP  OD1', -0.455, (-32.444, -24.463, -7.304)), (' B 226  THR  CG2', ' B 229  ASP  H  ', -0.455, (-39.54, -31.697, -1.457)), (' B 225  THR  OG1', ' B 226  THR  N  ', -0.454, (-36.335, -30.225, -3.773)), (' A  53  ASN  HB3', ' A 351  HOH  O  ', -0.454, (4.794, 10.003, 2.552)), (' B  45  THR  O  ', ' B  45  THR HG23', -0.454, (-26.914, -32.209, 51.999)), (' B 155  ASP  N  ', ' B 155  ASP  OD1', -0.454, (-27.571, -0.065, 24.606)), (' A   5  LYS  HB2', ' A   5  LYS  HZ2', -0.453, (-12.231, -23.399, 20.332)), (' B 164  HIS  CD2', ' B 175  THR HG23', -0.452, (-31.96, -23.097, 35.996)), (' B  52  PRO  HG2', ' B  54  TYR  CE1', -0.451, (-35.184, -30.057, 45.189)), (' A  30  LEU HD12', ' A 177  LEU HD11', -0.451, (-3.027, -1.951, 22.203)), (' A 285  ALA  CB ', ' B 286  ALA  HB2', -0.451, (-17.267, -32.325, 11.105)), (' B 130  MET  HB2', ' B 130  MET  HE2', -0.45, (-31.219, -21.63, 24.037)), (' B  41  HIS  HB2', ' B  49  MET  CE ', -0.449, (-30.622, -28.493, 44.243)), (' B  88  ARG  CZ ', ' B  88  ARG  HB3', -0.448, (-36.136, -12.292, 43.469)), (' B 140  PHE  HB3', ' B 144  SER  HG ', -0.448, (-21.17, -25.463, 33.787)), (' B  55  GLU  CD ', ' B  55  GLU  H  ', -0.446, (-41.096, -26.513, 47.829)), (' B 276  MET  C  ', ' B 278  GLY  N  ', -0.444, (-16.071, -33.506, 1.275)), (' B 180  LYS  HE2', ' B 341  HOH  O  ', -0.444, (-44.55, -21.76, 32.925)), (' A 188  ARG  O  ', ' A 190  THR  N  ', -0.443, (0.321, -2.504, 0.59)), (' A 268  LEU HD22', ' A 272  LEU  HG ', -0.442, (-3.563, -36.912, 12.885)), (' B 213  ILE  C  ', ' B 213  ILE  CD1', -0.437, (-19.907, -13.468, 1.726)), (' A  40  ARG  O  ', ' A  43  ILE HG12', -0.437, (-0.741, 7.302, 10.45)), (' A  45  THR  O  ', ' A  45  THR HG23', -0.435, (-6.394, 10.49, 1.816)), (' A 247  VAL HG13', ' A 261  VAL  CB ', -0.435, (6.15, -35.074, 23.577)), (' A  40  ARG  HG3', ' A  54  TYR  CE2', -0.433, (1.199, 4.464, 8.931)), (' B  30  LEU  HA ', ' B  30  LEU HD23', -0.431, (-25.093, -12.229, 38.329)), (' A 211  ALA  HA ', ' A 282  LEU HD11', -0.431, (-11.533, -33.809, 23.974)), (' B 127  GLN  HA ', ' B 127  GLN HE21', -0.431, (-22.561, -17.853, 22.041)), (' A 125  VAL  O  ', ' A 125  VAL HG13', -0.431, (-15.95, -12.738, 22.507)), (' A 243  THR  N  ', ' A 246  HIS  HD2', -0.43, (7.519, -29.639, 16.966)), (' B 299  GLN  CG ', ' B 299  GLN  O  ', -0.43, (-19.815, -10.996, 10.448)), (' B  92  ASP  OD1', ' B  93  THR  N  ', -0.43, (-26.6, -3.527, 50.253)), (' A 213  ILE HD13', ' A 257  THR  CG2', -0.429, (-5.637, -35.992, 30.504)), (' A  50  LEU  O  ', ' A  51  ASN  HB3', -0.429, (2.667, 3.989, -2.709)), (' A  13  VAL HG13', ' A 159  PHE  HE1', -0.428, (-7.121, -4.487, 25.693)), (' B 242  LEU HD12', ' B 246  HIS  CD2', -0.428, (-36.788, -24.527, 8.724)), (' B 127  GLN HE21', ' B 128  CYS  H  ', -0.427, (-23.401, -18.773, 22.001)), (' A  67  LEU HD12', ' A  68  VAL  N  ', -0.427, (-11.489, 13.383, 19.192)), (' B 294  PHE  HB2', ' B 354  HOH  O  ', -0.427, (-31.686, -14.132, 12.893)), (' B 133  ASN  O  ', ' B 134  HIS  HB2', -0.427, (-34.112, -29.606, 25.781)), (' A 135  THR  HB ', ' A 171  VAL HG22', -0.426, (-3.812, -13.406, 8.241)), (' A  67  LEU HD13', ' A  74  GLN  NE2', -0.426, (-12.773, 15.955, 19.411)), (' A  18  VAL HG22', ' A  29  GLY  O  ', -0.425, (-8.811, 3.26, 22.138)), (' B   5  LYS  HD3', ' B 127  GLN  O  ', -0.425, (-20.756, -20.242, 20.068)), (' A 153  ASP  O  ', ' A 154  TYR  CB ', -0.424, (-3.088, -12.754, 36.758)), (' B  19  GLN HE21', ' B 119  ASN  HB3', -0.424, (-16.634, -18.295, 44.412)), (' B 211  ALA  HA ', ' B 282  LEU  HG ', -0.421, (-18.719, -19.506, 4.139)), (' A 208  LEU  O  ', ' A 211  ALA  HB3', -0.42, (-8.204, -35.644, 23.452)), (' A 111  THR HG22', ' A 129  ALA  CB ', -0.416, (-4.523, -19.692, 18.137)), (' B  60  ARG  HB3', ' B  60  ARG HH11', -0.413, (-34.979, -26.126, 58.381)), (' A  13  VAL HG21', ' A 150  PHE  CD2', -0.413, (-8.38, -7.675, 25.577)), (' A 276  MET  HA ', ' A 309  HOH  O  ', -0.412, (-10.578, -42.388, 12.109)), (' A 136  ILE HD11', ' A 140  PHE  HE1', -0.411, (-7.445, -9.491, 13.696)), (' B  19  GLN HE21', ' B 119  ASN  CA ', -0.411, (-16.982, -18.627, 43.751)), (' B 229  ASP  O  ', ' B 233  VAL HG23', -0.41, (-35.666, -34.926, 0.328)), (' A  44  CYS  SG ', ' A  49  MET  HE3', -0.41, (-2.007, 5.365, 5.097)), (' A 212  VAL  O  ', ' A 213  ILE  C  ', -0.41, (-10.408, -36.694, 29.291)), (' A  86  LEU  HA ', ' A  86  LEU HD23', -0.41, (0.064, 1.7, 15.427)), (' A   1  SER  HA ', ' B 137  LYS  CG ', -0.409, (-22.873, -30.695, 23.55)), (' A 247  VAL HG13', ' A 261  VAL HG21', -0.409, (5.742, -34.515, 24.202)), (' B 127  GLN  CA ', ' B 127  GLN  NE2', -0.409, (-22.626, -17.704, 21.064)), (' B 114  VAL HG11', ' B 140  PHE  CZ ', -0.408, (-22.806, -21.44, 30.447)), (' B 258  GLY  HA2', ' B 352  HOH  O  ', -0.408, (-30.027, -12.634, -5.285)), (' B  30  LEU  O  ', ' B  36  VAL  HA ', -0.408, (-28.533, -11.245, 42.105)), (' A 269  LYS  O  ', ' A 273  GLN  HG3', -0.407, (-1.981, -41.422, 9.691)), (' A 124  GLY  HA3', ' B   6  MET  HE2', -0.407, (-18.362, -9.893, 17.896)), (' A 291  PHE  HB2', ' A 311  HOH  O  ', -0.407, (-6.969, -26.783, 20.326)), (' A 121  SER  HA ', ' A 122  PRO  HD3', -0.406, (-16.863, 0.728, 22.006)), (' B 108  PRO  HA ', ' B 130  MET  CG ', -0.406, (-33.201, -23.727, 22.288)), (' B 211  ALA  CB ', ' B 282  LEU  HG ', -0.406, (-18.743, -20.468, 4.325)), (' B  35  THR  OG1', ' B  90  LYS  HE3', -0.405, (-34.516, -7.837, 44.521)), (' B 208  LEU  O  ', ' B 212  VAL HG23', -0.405, (-22.947, -20.032, 0.643)), (' B 202  LEU HD11', ' B 293  PRO  HG2', -0.405, (-32.707, -18.715, 9.178)), (' B 127  GLN  NE2', ' B 128  CYS  N  ', -0.405, (-23.627, -18.643, 21.115)), (' B  60  ARG  HB3', ' B  60  ARG  NH1', -0.405, (-34.773, -26.503, 58.29)), (' A   4  ARG  HG2', ' A   4  ARG  NH1', -0.404, (-19.45, -25.312, 23.492)), (' A  51  ASN  C  ', ' A  51  ASN  ND2', -0.403, (4.392, 4.285, 0.098)), (' B 277  ASN  HB3', ' B 279  ARG  HG3', -0.402, (-13.995, -32.135, -1.505)), (' B 207  TRP  HZ3', ' B 287  LEU HD23', -0.402, (-20.989, -26.698, 6.468)), (' B 131  ARG  NH2', ' B 289  ASP  OD2', -0.402, (-26.014, -26.836, 16.164))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

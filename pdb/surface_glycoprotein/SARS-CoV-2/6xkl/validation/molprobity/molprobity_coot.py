# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('A', '  31 ', 'PHE', 0.010630673705327625, (187.37, 242.87700000000007, 223.18)), ('A', ' 109 ', 'LEU', 0.005134504789181939, (188.726, 243.10100000000006, 189.057)), ('B', '  31 ', 'PHE', 0.0018839183951010478, (268.087, 264.752, 222.804))]
data['omega'] = []
data['rota'] = [('A', '  30 ', 'SER', 0.29597851030153827, (186.904, 243.82600000000005, 219.501)), ('A', '  32 ', 'THR', 0.14700359928677514, (189.04, 239.45100000000005, 223.262)), ('A', ' 116 ', 'LEU', 0.24509263357942163, (189.47699999999995, 235.03700000000006, 194.16100000000003)), ('A', ' 119 ', 'VAL', 0.2338637729739385, (180.74099999999996, 230.95300000000006, 197.10400000000004)), ('A', ' 156 ', 'PHE', 0.071846871011637, (173.83, 232.22500000000005, 190.091)), ('A', ' 207 ', 'THR', 0.18325803333135898, (179.56799999999996, 229.86800000000005, 218.503)), ('A', ' 283 ', 'THR', 0.27749620749977905, (193.04799999999994, 224.291, 223.578)), ('A', ' 285 ', 'THR', 0.2324514893018594, (191.92199999999994, 229.39000000000004, 226.86599999999999)), ('A', ' 307 ', 'VAL', 0.28279187725536836, (202.907, 238.87800000000004, 238.763)), ('A', ' 340 ', 'VAL', 0.2117250876928661, (238.147, 270.6779999999999, 176.096)), ('A', ' 363 ', 'ASP', 0.005288069430381811, (230.875, 266.79500000000013, 187.80200000000002)), ('A', ' 394 ', 'VAL', 0.16496282178538477, (240.973, 260.2810000000001, 183.565)), ('A', ' 517 ', 'LEU', 0.06264809545398714, (243.51799999999994, 251.17900000000006, 189.944)), ('A', ' 523 ', 'VAL', 0.161436554365487, (239.317, 262.481, 190.767)), ('A', ' 533 ', 'VAL', 0.247021924228724, (220.06899999999993, 271.079, 212.94400000000002)), ('A', ' 598 ', 'THR', 0.2517093628702558, (202.783, 246.946, 240.46600000000004)), ('A', ' 601 ', 'THR', 0.19254022997758066, (197.482, 240.76900000000006, 239.867)), ('A', ' 619 ', 'VAL', 0.2601060621295929, (206.805, 261.013, 226.41100000000003)), ('A', ' 702 ', 'ASN', 0.01483179597331892, (212.146, 258.936, 270.516)), ('A', ' 715 ', 'THR', 0.16973422970589447, (210.402, 245.77600000000007, 286.726)), ('A', ' 737 ', 'CYS', 0.0, (228.613, 217.234, 228.063)), ('A', ' 746 ', 'THR', 0.19168767821838464, (229.074, 209.82100000000005, 216.138)), ('A', ' 880 ', 'THR', 0.07440931944167024, (219.109, 220.06900000000005, 274.958)), ('A', '1030 ', 'GLU', 0.21549808999968656, (227.032, 228.54600000000005, 269.615)), ('B', '  87 ', 'ASP', 0.15584556146460882, (261.291, 254.91399999999996, 206.19700000000003)), ('B', '  93 ', 'SER', 0.23089830306036596, (268.764, 273.34500000000014, 210.053)), ('B', ' 108 ', 'THR', 0.28857596963430576, (267.015, 256.525, 190.565)), ('B', ' 125 ', 'VAL', 0.21668846978666806, (256.917, 277.428, 197.40500000000003)), ('B', ' 166 ', 'THR', 0.2957726851267825, (252.159, 263.9950000000001, 186.897)), ('B', ' 204 ', 'SER', 0.2754903165600321, (257.3529999999999, 271.031, 210.295)), ('B', ' 239 ', 'THR', 0.29498678780860527, (269.283, 268.6740000000001, 199.455)), ('B', ' 273 ', 'THR', 0.16763166106926172, (256.013, 253.42900000000006, 220.67600000000002)), ('B', ' 330 ', 'ASN', 0.0024123418632308992, (273.239, 214.18200000000004, 202.029)), ('B', ' 356 ', 'ARG', 0.013305551442902033, (255.88699999999997, 206.10600000000005, 194.134)), ('B', ' 358 ', 'SER', 0.2826806765518059, (261.24899999999997, 208.38800000000006, 197.365)), ('B', ' 427 ', 'ASP', 0.2152441267683994, (241.94399999999993, 215.71100000000007, 203.645)), ('B', ' 429 ', 'THR', 0.1543562935039356, (247.45699999999994, 217.19200000000006, 200.79400000000004)), ('B', ' 442 ', 'SER', 0.2981799187575123, (244.91099999999994, 213.85200000000006, 169.787)), ('B', ' 510 ', 'VAL', 0.07416474134034563, (249.21899999999994, 214.753, 187.183)), ('B', ' 530 ', 'THR', 0.1797779489084082, (275.414, 223.37400000000005, 208.055)), ('B', ' 531 ', 'ASN', 0.14078999768539102, (277.342, 222.29300000000006, 211.142)), ('B', ' 545 ', 'LEU', 0.04336627133901854, (261.089, 220.28800000000007, 212.039)), ('B', ' 548 ', 'THR', 0.29196138402966315, (264.598, 226.93100000000007, 219.28400000000002)), ('B', ' 580 ', 'THR', 0.1707883819393959, (275.288, 211.33500000000006, 211.23899999999998)), ('B', ' 585 ', 'ASP', 0.052363717951029135, (268.265, 216.44200000000006, 223.67300000000003)), ('B', ' 637 ', 'THR', 0.12364369959505239, (271.271, 249.10000000000005, 233.437)), ('B', ' 688 ', 'SER', 0.25053189836978584, (272.535, 255.85500000000002, 251.66400000000002)), ('B', ' 702 ', 'ASN', 0.02270188219578913, (263.323, 240.15400000000005, 273.361)), ('B', ' 729 ', 'SER', 0.29312772839716555, (228.784, 248.41900000000007, 248.616)), ('B', ' 937 ', 'LEU', 0.210969404975016, (243.971, 259.5490000000001, 258.905)), ('B', '1036 ', 'SER', 0.26466021895552583, (233.064, 241.87300000000005, 273.054)), ('B', '1096 ', 'SER', 0.29187682466265147, (254.5570000000001, 240.41900000000007, 298.077)), ('B', '1099 ', 'THR', 0.22753739125733527, (258.31, 241.69000000000005, 303.389)), ('B', '1103 ', 'VAL', 0.17062373571156295, (245.916, 240.42400000000006, 297.582)), ('B', '1121 ', 'VAL', 0.26927825637443026, (239.867, 227.65700000000007, 302.658)), ('C', '  28 ', 'THR', 0.2411625403512621, (241.744, 179.14400000000006, 222.726)), ('C', '  32 ', 'THR', 0.0013599335943581536, (246.56999999999994, 190.426, 226.976)), ('C', '  62 ', 'THR', 0.1641820796016996, (241.533, 180.19900000000007, 216.494)), ('C', ' 125 ', 'VAL', 0.08982727479665963, (264.313, 187.00700000000006, 203.25)), ('C', ' 166 ', 'THR', 0.23273566312613775, (255.067, 195.68300000000005, 190.853)), ('C', ' 270 ', 'GLN', 0.2967456792803318, (238.619, 195.257, 216.654)), ('C', ' 275 ', 'LEU', 0.2461924939160786, (245.13299999999995, 202.91500000000005, 227.547)), ('C', ' 283 ', 'THR', 0.06090866156202118, (258.578, 200.13800000000006, 225.744)), ('C', ' 358 ', 'SER', 0.2317854450868118, (203.165, 218.933, 194.743)), ('C', ' 384 ', 'THR', 0.29097270644185974, (222.602, 212.688, 196.414)), ('C', ' 517 ', 'LEU', 0.12933806126100456, (209.50299999999993, 222.712, 207.19100000000003)), ('C', ' 532 ', 'LEU', 0.1483130159605824, (205.383, 199.869, 212.584)), ('C', ' 538 ', 'VAL', 0.1805611837572973, (213.587, 201.93900000000002, 217.021)), ('C', ' 552 ', 'THR', 0.2500296827390934, (203.759, 203.82000000000005, 222.359)), ('C', ' 598 ', 'THR', 0.12276505576312184, (235.046, 199.503, 244.567)), ('C', ' 607 ', 'VAL', 0.1482137882086264, (233.471, 195.57700000000006, 241.78500000000003)), ('C', ' 619 ', 'VAL', 0.22993538163587093, (220.85999999999996, 194.57200000000006, 231.644)), ('C', ' 641 ', 'VAL', 0.15555107394700782, (220.232, 192.536, 241.80300000000003)), ('C', ' 759 ', 'CYS', 0.05492158234119415, (246.167, 239.674, 226.876)), ('C', ' 771 ', 'VAL', 0.2725968606694196, (249.785, 239.34100000000007, 245.71800000000002)), ('C', ' 784 ', 'VAL', 0.16726850640055962, (253.09900000000007, 239.63700000000006, 267.224)), ('C', ' 825 ', 'VAL', 0.1433395955818957, (252.595, 216.29000000000005, 252.60100000000003)), ('C', ' 855 ', 'ASN', 0.20856234088316486, (256.161, 227.53400000000005, 227.84200000000004)), ('C', ' 859 ', 'VAL', 0.212678448986217, (255.936, 229.91600000000005, 239.615)), ('C', ' 865 ', 'THR', 0.25540057396040494, (260.173, 231.32700000000006, 253.65200000000002)), ('C', ' 880 ', 'THR', 0.08240167388988266, (251.69199999999995, 231.994, 275.347)), ('C', ' 886 ', 'THR', 0.11322238053555521, (248.71099999999996, 239.47600000000006, 278.3)), ('C', ' 979 ', 'ILE', 0.11329171095305357, (251.146, 225.36500000000007, 209.458)), ('C', ' 984 ', 'ASP', 0.20814779130392197, (251.17399999999995, 231.438, 202.642)), ('C', '1076 ', 'THR', 0.05765558854760407, (218.549, 217.695, 294.115)), ('C', '1127 ', 'VAL', 0.2614752227738641, (206.52499999999995, 230.42200000000005, 296.865)), ('C', '1135 ', 'THR', 0.1996610601751513, (219.578, 223.28100000000006, 308.547))]
data['cbeta'] = []
data['probe'] = [(' C 649  LEU HD21', ' C 652  ALA  HB3', -0.887, (225.714, 196.064, 245.672)), (' C 192  VAL HG23', ' C 222  LEU HD12', -0.846, (252.367, 191.28, 216.248)), (' B 451  LEU HD13', ' B 491  LEU HD12', -0.834, (237.102, 200.461, 175.916)), (' A 516  LEU  HG ', ' A 517  LEU HD13', -0.801, (240.772, 249.892, 188.415)), (' C 107  THR  OG1', ' C 233  ASN  O  ', -0.745, (243.475, 191.484, 197.245)), (' B 341  PHE  HE1', ' B 510  VAL HG11', -0.728, (252.434, 216.432, 185.773)), (' C1105  GLN HE21', ' C1108  PHE  HB3', -0.713, (234.427, 221.556, 290.981)), (' B 400  VAL HG22', ' B 508  ARG  HD3', -0.708, (247.748, 212.694, 178.839)), (' B 655  VAL HG11', ' B 692  ILE HD12', -0.698, (271.011, 247.544, 252.391)), (' B 347  ALA  HB2', ' B 353  ASN HD22', -0.695, (249.545, 204.221, 183.113)), (' B  36  TYR  OH ', ' B  52  ASP  OD2', -0.693, (254.941, 259.139, 212.353)), (' B 904  ARG  NH1', ' B1048  LEU  O  ', -0.674, (231.734, 248.775, 275.139)), (' A  45  SER  HA ', ' A 278  TYR  O  ', -0.665, (197.87, 224.193, 228.671)), (' A 721  VAL HG12', ' A1064  VAL HG22', -0.664, (212.081, 230.785, 272.312)), (' B 432  VAL HG22', ' B 511  VAL HG22', -0.66, (245.629, 216.245, 190.644)), (' C 655  VAL HG11', ' C 692  ILE HD12', -0.654, (226.275, 194.156, 254.55)), (' B 175  LEU HD23', ' B 189  ARG  HD2', -0.652, (263.222, 277.141, 207.344)), (' C 984  ASP  N  ', ' C 984  ASP  OD1', -0.651, (250.301, 230.017, 202.172)), (' C  34  GLY  HA3', ' C  55  LEU  HB3', -0.648, (245.982, 191.947, 219.878)), (' B  99  ILE HG22', ' B 241  LEU HD11', -0.642, (272.898, 276.846, 201.681)), (' A 352  TRP  HZ3', ' A 354  ARG  HB2', -0.641, (245.544, 260.859, 173.039)), (' C 335  CYS  SG ', ' C 357  ILE HG23', -0.636, (205.803, 217.162, 190.999)), (' B 365  SER  OG ', ' B 387  ASN  ND2', -0.634, (262.977, 225.153, 194.072)), (' B 772  GLU  OE2', ' B1018  ARG  NH1', -0.63, (225.722, 238.126, 246.572)), (' A 566  ARG  HD3', ' A 570  ASP  HA ', -0.628, (238.821, 257.307, 221.453)), (' B 433  ILE  HB ', ' B 510  VAL HG13', -0.625, (250.205, 218.143, 187.043)), (' A  63  TRP  HE1', ' A 263  ALA  HB1', -0.621, (175.921, 244.409, 211.849)), (' C 545  LEU HD21', ' C 572  THR HG21', -0.62, (210.299, 214.802, 214.694)), (' C 438  ASN  OD1', ' C 442  SER  OG ', -0.619, (221.979, 228.063, 168.525)), (' B 742  CYS  SG ', ' B 749  SER  N  ', -0.618, (222.075, 244.353, 215.291)), (' C 904  ARG  NH1', ' C1048  LEU  O  ', -0.616, (243.66, 229.044, 276.933)), (' C 322  THR  OG1', ' C 323  GLU  OE2', -0.614, (214.285, 196.807, 216.338)), (' A 352  TRP  HB3', ' A 399  PHE  HB3', -0.605, (241.519, 262.475, 167.249)), (' C  90  TYR  OH ', ' C 190  GLU  OE2', -0.602, (251.395, 186.269, 220.392)), (' B 352  TRP  HZ3', ' B 354  ARG  HB2', -0.602, (248.197, 205.929, 191.107)), (' C 298  THR HG22', ' C 314  THR HG21', -0.6, (235.072, 202.967, 236.69)), (' A 904  ARG  NH1', ' A1048  LEU  O  ', -0.598, (220.638, 228.79, 276.201)), (' B 427  ASP  N  ', ' B 427  ASP  OD1', -0.598, (240.844, 214.247, 203.62)), (' C 810  LYS  HG3', ' C 811  PRO  HD2', -0.593, (267.288, 219.226, 260.967)), (' C 742  CYS  SG ', ' C 749  SER  N  ', -0.589, (251.331, 235.922, 216.939)), (' A 983  LEU HD21', ' C 380  GLY  O  ', -0.587, (222.436, 221.43, 201.917)), (' A 554  SER  HB3', ' A 585  ASP  HB2', -0.586, (230.415, 270.897, 222.276)), (' C 279  ASN HD21', ' C1301  NAG  H82', -0.585, (261.178, 200.244, 232.52)), (' B 745  SER  HB2', ' B 748  CYS  SG ', -0.583, (223.927, 246.419, 214.217)), (' C 820  LEU  O  ', ' C 824  LYS  HG2', -0.583, (254.518, 214.267, 257.906)), (' C 272  ARG  HD3', ' C 291  ALA  HB3', -0.581, (236.872, 197.586, 224.331)), (' C  35  VAL HG11', ' C 219  PHE  CZ ', -0.581, (250.589, 195.354, 224.924)), (' A1317  NAG  H3 ', ' A1317  NAG  H83', -0.577, (208.237, 256.063, 300.554)), (' A1318  NAG  H3 ', ' A1318  NAG  H83', -0.572, (207.746, 250.637, 305.826)), (' B1105  GLN HE21', ' B1108  PHE  HB3', -0.572, (243.103, 247.19, 289.29)), (' B 721  VAL HG22', ' B 929  ALA  HB1', -0.57, (242.264, 257.866, 270.992)), (' B 293  ASP  N  ', ' B 293  ASP  OD2', -0.567, (264.736, 253.979, 228.681)), (' C 724  GLU  OE1', ' C1027  LYS  NZ ', -0.566, (238.817, 225.447, 263.159)), (' A1310  NAG  H3 ', ' A1310  NAG  H83', -0.565, (224.998, 267.449, 290.356)), (' A 762  LEU HD22', ' A1007  VAL HG21', -0.564, (230.556, 223.136, 232.59)), (' A 706  TYR  HB2', ' B 882  THR HG23', -0.557, (220.764, 260.14, 277.581)), (' B 380  GLY  O  ', ' C 983  LEU HD21', -0.557, (249.185, 224.096, 202.529)), (' B 169  TYR  CE1', ' B 171  SER  HB2', -0.554, (251.64, 273.749, 198.469)), (' B 820  LEU HD21', ' B 938  SER  HB2', -0.553, (242.486, 264.112, 258.096)), (' A 341  PHE  HB3', ' A1305  NAG  H83', -0.553, (231.271, 270.646, 175.727)), (' A1138  ASP  N  ', ' A1138  ASP  OD1', -0.551, (226.187, 247.02, 310.199)), (' C 821  LEU HD21', ' C 937  LEU HD13', -0.55, (250.38, 216.843, 261.148)), (' B 705  ALA  HB1', ' B1314  NAG  O7 ', -0.549, (263.55, 238.035, 284.434)), (' C 505  GLN  HG3', ' C 506  PRO  HD2', -0.549, (222.917, 229.341, 171.858)), (' C 737  CYS  SG ', ' C 738  THR  N  ', -0.544, (249.698, 236.877, 226.1)), (' A 559  LEU  H  ', ' A 562  GLN  NE2', -0.543, (242.767, 271.718, 217.984)), (' B 357  ILE  HB ', ' B 394  VAL HG13', -0.541, (257.827, 210.833, 194.319)), (' A1140  LEU  HG ', ' A1144  LEU HD13', -0.54, (228.302, 240.704, 315.965)), (' B 169  TYR  HE1', ' B 171  SER  HB2', -0.539, (251.829, 273.345, 199.141)), (' C 661  CYS  HB2', ' C 696  MET  HG2', -0.538, (226.2, 205.567, 255.763)), (' A 104  ILE HD12', ' A 238  GLN HE21', -0.536, (182.576, 240.641, 194.016)), (' A 120  ASN HD21', ' A 173  PRO  HB3', -0.535, (180.005, 226.417, 202.958)), (' B 302  LEU HD12', ' B 307  VAL HG12', -0.535, (254.601, 253.496, 236.97)), (' B1038  ARG  NE ', ' C1030  GLU  OE1', -0.535, (235.313, 236.231, 267.882)), (' A1304  NAG  H3 ', ' A1304  NAG  H83', -0.535, (230.029, 284.729, 201.954)), (' B 126  VAL HG21', ' B1301  NAG  H5 ', -0.535, (257.55, 278.339, 191.629)), (' B 706  TYR  HB2', ' C 882  THR HG23', -0.534, (258.585, 233.205, 280.793)), (' C  51  GLN  N  ', ' C  51  GLN  OE1', -0.534, (242.043, 205.985, 219.769)), (' B 603  THR HG21', ' B 686  VAL HG11', -0.53, (264.941, 257.235, 247.602)), (' B 133  GLN  HG2', ' B 161  SER  HB3', -0.53, (266.412, 266.62, 181.652)), (' C 564  PHE  HB3', ' C 575  VAL HG23', -0.529, (204.493, 214.328, 213.646)), (' A 350  TYR  HA ', ' A 421  ASN HD21', -0.527, (244.3, 259.947, 162.186)), (' B 275  LEU  O  ', ' B 287  ALA  HA ', -0.523, (255.187, 260.916, 225.71)), (' C 595  SER  OG ', ' C 612  GLN  NE2', -0.519, (226.678, 207.064, 238.598)), (' B 425  PRO  HG2', ' B 428  PHE  HB2', -0.519, (243.051, 213.368, 199.289)), (' A 327  ARG  HD3', ' A 577  ASP  OD1', -0.519, (229.333, 271.134, 208.495)), (' C 559  LEU  N  ', ' C 562  GLN  OE1', -0.518, (194.524, 217.83, 217.089)), (' C 192  VAL  HB ', ' C 203  TYR  HB2', -0.518, (252.809, 193.723, 214.391)), (' C 869  ILE  O  ', ' C 873  THR HG23', -0.517, (255.613, 230.36, 262.064)), (' C 294  PRO  O  ', ' C 298  THR HG23', -0.516, (235.761, 200.483, 235.898)), (' B 352  TRP  CZ3', ' B 354  ARG  HB2', -0.516, (247.654, 205.706, 190.819)), (' A 972  ILE HG23', ' A 991  GLN  OE1', -0.515, (224.254, 225.839, 207.832)), (' A 724  GLU  OE1', ' A1027  LYS  NZ ', -0.514, (221.06, 233.859, 262.281)), (' A 357  ILE  HB ', ' A 394  VAL HG23', -0.514, (240.822, 263.796, 183.473)), (' B 308  GLU  HG2', ' B 312  TYR  OH ', -0.514, (253.967, 252.437, 242.059)), (' B 566  ARG HH21', ' B 570  ASP  HA ', -0.512, (252.072, 216.789, 221.207)), (' C 745  SER  HB3', ' C 748  CYS  SG ', -0.512, (253.081, 232.879, 216.316)), (' A 985  PRO  O  ', ' A 989  GLU  HG3', -0.511, (231.898, 217.852, 206.465)), (' A 516  LEU  HG ', ' A 517  LEU  CD1', -0.51, (240.187, 249.443, 189.085)), (' C 243  LEU  H  ', ' C 243  LEU HD23', -0.508, (258.25, 171.465, 201.818)), (' A 441  ASP  HB3', ' A 450  TYR  HE2', -0.508, (236.403, 270.644, 161.202)), (' C 104  ILE HG12', ' C 240  LEU HD21', -0.508, (252.495, 180.723, 201.003)), (' C 297  GLU  OE2', ' C 315  SER  OG ', -0.508, (232.712, 203.869, 230.315)), (' B 315  SER  OG ', ' B 316  ASN  N  ', -0.508, (259.656, 241.67, 228.764)), (' A 721  VAL HG22', ' A 929  ALA  HB1', -0.507, (207.708, 232.72, 271.149)), (' A1302  NAG  H83', ' C 557  LYS  NZ ', -0.507, (191.076, 214.121, 226.722)), (' B 502  VAL  HA ', ' B 505  GLN  NE2', -0.506, (240.747, 223.456, 173.819)), (' A 227  ASP  N  ', ' A 227  ASP  OD2', -0.504, (194.055, 225.251, 203.242)), (' C 205  LYS  HB2', ' C 222  LEU HD22', -0.504, (256.765, 190.326, 219.5)), (' A  40  LYS  NZ ', ' C 561  PHE  O  ', -0.503, (196.356, 219.878, 210.383)), (' C 188  LEU HD23', ' C 207  THR  O  ', -0.502, (258.559, 183.317, 222.424)), (' B 563  GLN  HG3', ' B 564  PHE  N  ', -0.501, (261.298, 211.148, 215.081)), (' C  33  ARG  NH1', ' C 190  GLU  OE1', -0.501, (253.461, 187.562, 223.293)), (' C 199  TYR  CE1', ' C 229  PRO  HB3', -0.501, (252.533, 203.276, 202.049)), (' A 962  VAL HG12', ' C 569  ALA  HB2', -0.5, (215.14, 222.607, 225.757)), (' B 199  TYR  HE1', ' B 229  PRO  HB3', -0.5, (246.368, 261.063, 198.345)), (' C 855  ASN  ND2', ' C 855  ASN  O  ', -0.498, (253.919, 227.392, 227.278)), (' B 561  PHE  O  ', ' C  40  LYS  NZ ', -0.498, (260.974, 203.56, 213.305)), (' C 346  PHE  CE2', ' C 398  SER  HB2', -0.496, (212.22, 226.417, 181.682)), (' C 531  ASN  OD1', ' C 532  LEU  N  ', -0.496, (204.441, 198.439, 210.828)), (' B 714  PRO  HA ', ' B1071  GLU  HA ', -0.495, (252.133, 247.006, 285.449)), (' A 869  ILE  O  ', ' A 873  THR HG23', -0.492, (216.934, 216.93, 261.815)), (' B 376  PHE  CD1', ' B 433  ILE HG12', -0.49, (251.091, 221.653, 189.395)), (' B 387  ASN  O  ', ' B 525  GLY  HA3', -0.49, (263.536, 221.87, 199.002)), (' A 131  GLU  HG2', ' A 164  ASN  HB2', -0.489, (190.66, 235.033, 182.497)), (' C 169  TYR  CE2', ' C 171  SER  HB2', -0.489, (263.269, 193.38, 203.698)), (' C 437  SER  O  ', ' C 437  SER  OG ', -0.488, (218.253, 225.615, 173.008)), (' A 496  PHE  CE1', ' A 506  PRO  HB3', -0.487, (234.182, 268.01, 159.587)), (' C 279  ASN  ND2', ' C1301  NAG  H82', -0.487, (260.868, 199.922, 232.335)), (' C 123  THR HG22', ' C 173  PRO  HG3', -0.486, (270.575, 186.012, 207.452)), (' C 205  LYS  HG3', ' C 222  LEU  HA ', -0.485, (256.857, 192.72, 219.144)), (' C 390  CYS  HB3', ' C 523  VAL  O  ', -0.484, (208.599, 214.618, 201.122)), (' C 169  TYR  CZ ', ' C 171  SER  HB2', -0.484, (263.561, 193.566, 203.751)), (' C 714  PRO  HA ', ' C1070  GLN  O  ', -0.48, (231.358, 213.13, 286.756)), (' A1030  GLU  N  ', ' A1030  GLU  OE1', -0.48, (228.326, 227.777, 267.778)), (' A 857  LEU HD23', ' A 958  LEU HD22', -0.479, (219.223, 220.867, 233.013)), (' A 745  SER  HB3', ' A 748  CYS  SG ', -0.479, (226.18, 214.191, 216.796)), (' A 349  VAL  HB ', ' A 400  VAL  O  ', -0.478, (239.302, 262.818, 163.052)), (' C 365  SER  HB2', ' C 387  ASN HD21', -0.478, (217.505, 209.174, 193.153)), (' A 577  ASP  OD2', ' A 580  THR HG22', -0.478, (229.87, 274.405, 209.525)), (' A1036  SER  OG ', ' A1038  ARG  HG2', -0.476, (226.923, 234.875, 270.581)), (' B  96  LYS  HZ2', ' B 186  LYS  N  ', -0.474, (270.156, 283.139, 214.292)), (' A  90  TYR  OH ', ' A 190  GLU  OE1', -0.474, (185.197, 237.343, 215.882)), (' A1104  THR HG22', ' A1111  PRO  HA ', -0.474, (216.647, 246.446, 295.37)), (' C 342  ASN  OD1', ' C1303  NAG  N2 ', -0.473, (213.762, 215.895, 178.307)), (' C 566  ARG  NH1', ' C 570  ASP  OD1', -0.473, (211.629, 221.499, 216.48)), (' A 975  VAL  HB ', ' A 978  ASP  OD2', -0.472, (216.749, 219.484, 212.762)), (' C 199  TYR  HE1', ' C 229  PRO  HB3', -0.47, (253.197, 203.329, 201.686)), (' B 721  VAL  HA ', ' B1063  HIS  O  ', -0.47, (240.259, 253.398, 269.828)), (' A1101  TRP  HB2', ' A1134  ASN  ND2', -0.469, (220.436, 254.985, 301.695)), (' B 335  CYS  HB2', ' B 337  PHE  CE2', -0.467, (262.006, 214.681, 191.251)), (' A 769  ILE  O  ', ' A 773  GLN  HG2', -0.466, (227.495, 220.236, 245.65)), (' B 491  LEU  H  ', ' B 491  LEU HD23', -0.465, (232.45, 200.242, 177.756)), (' B 434  ALA  HB2', ' B 509  VAL HG22', -0.465, (245.061, 218.75, 184.871)), (' B 279  ASN  OD1', ' B 280  GLU  N  ', -0.465, (246.552, 271.115, 228.684)), (' A 725  ILE HG12', ' A1060  VAL HG22', -0.464, (213.068, 228.645, 258.233)), (' A  98  ASN  CG ', ' A 101  ARG  HE ', -0.463, (172.802, 231.116, 202.883)), (' A  99  ILE HG22', ' A 241  LEU  HB2', -0.462, (173.466, 238.737, 202.675)), (' B  52  ASP  HB3', ' B  54  PHE  CE1', -0.459, (254.401, 257.676, 215.991)), (' A 610  LEU HD22', ' A 665  ILE HG23', -0.458, (211.564, 254.308, 240.451)), (' A 956  GLN HE21', ' B 764  ARG  NH2', -0.458, (215.316, 233.384, 233.446)), (' A 359  ASN  H  ', ' A 522  THR HG23', -0.456, (243.298, 263.754, 190.417)), (' C 976  LEU HD11', ' C 992  ILE HG12', -0.455, (249.556, 230.047, 213.55)), (' C 125  VAL  CG2', ' C 171  SER  HB3', -0.455, (263.505, 190.201, 204.217)), (' C 530  THR HG22', ' C 531  ASN  N  ', -0.453, (208.107, 198.508, 208.532)), (' A 701  GLU  OE1', ' B 789  LYS  NZ ', -0.453, (214.306, 264.42, 267.33)), (' B 557  LYS  HB2', ' B 557  LYS  HE2', -0.453, (267.786, 203.307, 226.924)), (' B 785  LYS  HG3', ' B 786  GLN  HG3', -0.453, (212.416, 251.44, 267.895)), (' C 913  ASN  O  ', ' C 917  GLU  HG3', -0.452, (243.194, 221.801, 294.597)), (' A 319  VAL HG22', ' A 590  SER  O  ', -0.452, (216.958, 258.911, 223.88)), (' A  45  SER  CA ', ' A 278  TYR  O  ', -0.451, (198.686, 224.124, 228.758)), (' C 972  ILE HG23', ' C 991  GLN  OE1', -0.45, (244.076, 224.033, 208.313)), (' C 382  SER  OG ', ' C 385  LYS  HG3', -0.45, (222.614, 214.43, 200.384)), (' A 541  ASN  OD1', ' A 546  THR HG22', -0.449, (228.575, 259.124, 207.407)), (' B 735  VAL HG11', ' B1003  LEU HD11', -0.448, (227.444, 245.468, 228.916)), (' C 516  LEU  O  ', ' C 517  LEU  HG ', -0.448, (210.909, 224.741, 206.309)), (' A 735  VAL HG12', ' A 857  LEU  HG ', -0.447, (222.252, 219.099, 232.729)), (' A 706  TYR  HB2', ' B 882  THR  CG2', -0.445, (220.32, 260.139, 277.374)), (' A 401  ILE HD11', ' A 509  VAL HG21', -0.445, (233.427, 260.402, 166.575)), (' C 111  SER  HB2', ' C 133  GLN  HG2', -0.445, (248.05, 182.376, 188.462)), (' B 933  ILE HD13', ' B1062  LEU HD13', -0.445, (237.894, 257.948, 266.465)), (' B 733  THR HG21', ' B1006  TYR  OH ', -0.444, (229.456, 247.392, 235.821)), (' C 559  LEU  HB2', ' C 562  GLN  NE2', -0.444, (194.508, 220.342, 217.39)), (' C 105  PHE  HD2', ' C 234  ILE HD11', -0.443, (247.645, 189.179, 204.272)), (' A1115  THR  OG1', ' A1117  ASP  OD1', -0.442, (224.368, 243.593, 302.89)), (' C 104  ILE HD12', ' C 117  LEU  HG ', -0.44, (253.958, 183.47, 198.249)), (' A 530  THR HG22', ' A 531  ASN  N  ', -0.438, (221.213, 270.426, 205.532)), (' A 295  LEU  O  ', ' A 299  LYS  HG3', -0.438, (201.171, 241.684, 232.598)), (' B 555  ASN  O  ', ' B 557  LYS  NZ ', -0.437, (269.139, 206.29, 228.694)), (' C 270  GLN  OE1', ' C 271  PRO  HD2', -0.436, (235.708, 196.362, 216.717)), (' B 353  ASN  O  ', ' B 397  ASP  HA ', -0.435, (249.351, 207.906, 188.843)), (' A 281  ASN  HB2', ' A 283  THR HG22', -0.435, (191.729, 221.529, 225.526)), (' A 382  SER  OG ', ' A 385  LYS  HG3', -0.435, (224.297, 255.39, 187.626)), (' A 286  ASP  OD1', ' A 287  ALA  N  ', -0.434, (194.347, 234.79, 227.26)), (' B 554  SER  HB3', ' B 585  ASP  HB2', -0.434, (269.328, 214.269, 225.384)), (' C  86  ASN  OD1', ' C  87  ASP  N  ', -0.433, (240.168, 191.589, 209.535)), (' A 724  GLU  CD ', ' A1027  LYS  HZ3', -0.433, (220.411, 234.078, 262.469)), (' A 911  THR  OG1', ' A 913  ASN  ND2', -0.432, (217.728, 236.609, 292.495)), (' A 133  GLN  NE2', ' A 161  SER  OG ', -0.432, (180.289, 238.782, 182.544)), (' B 355  LYS  HB3', ' B 355  LYS  HE3', -0.432, (254.613, 205.7, 188.045)), (' C 275  LEU  O  ', ' C 287  ALA  HA ', -0.432, (247.246, 200.005, 228.702)), (' B 403  GLY  HA2', ' B 503  GLY  O  ', -0.43, (235.807, 218.904, 176.435)), (' C  28  THR HG22', ' C  61  VAL HG23', -0.43, (243.582, 180.905, 220.785)), (' A 298  THR  HA ', ' A 301  THR HG22', -0.429, (206.592, 242.123, 231.866)), (' B 551  LEU  HA ', ' B 585  ASP  O  ', -0.429, (269.409, 219.412, 222.825)), (' A 360  CYS  O  ', ' A 523  VAL  HA ', -0.429, (239.12, 264.202, 190.84)), (' B 984  ASP  OD2', ' B 986  PRO  HD2', -0.428, (226.854, 240.309, 199.555)), (' A 882  THR HG23', ' C 706  TYR  HB2', -0.428, (215.788, 213.516, 280.811)), (' A 349  VAL HG22', ' A 421  ASN  OD1', -0.428, (241.901, 258.859, 163.821)), (' B 713  ILE HD11', ' B1095  VAL HG11', -0.428, (250.495, 240.708, 291.737)), (' A 766  LEU  HA ', ' A 766  LEU HD23', -0.427, (229.012, 220.99, 239.135)), (' C 392  THR  O  ', ' C 522  THR  OG1', -0.427, (203.89, 219.132, 199.52)), (' B 330  ASN  OD1', ' B1304  NAG  N2 ', -0.426, (274.083, 210.669, 204.213)), (' A 752  LEU  HA ', ' A 752  LEU HD12', -0.425, (233.987, 219.018, 219.983)), (' A 389  LEU HD23', ' A 391  PHE  CZ ', -0.425, (233.572, 255.368, 187.902)), (' B 820  LEU  O  ', ' B 824  LYS  HG2', -0.425, (239.046, 263.243, 253.802)), (' A 120  ASN HD21', ' A 173  PRO  CB ', -0.425, (179.697, 225.86, 203.418)), (' A 706  TYR  CD1', ' B 882  THR HG23', -0.424, (221.665, 260.053, 278.433)), (' C  56  PRO  HB3', ' C 272  ARG HH21', -0.424, (237.58, 193.287, 222.249)), (' A  28  THR HG22', ' A  29  ASN  N  ', -0.424, (182.555, 246.41, 219.636)), (' A 319  VAL HG23', ' A 589  CYS  HB3', -0.423, (218.065, 260.292, 221.536)), (' B 582  GLU  HG2', ' B 583  ILE  H  ', -0.423, (272.986, 211.545, 219.013)), (' B 913  ASN  O  ', ' B 917  GLU  HG3', -0.423, (238.209, 254.687, 292.013)), (' C 563  GLN  OE1', ' C 576  ARG  HD2', -0.422, (198.319, 214.291, 210.524)), (' A 389  LEU  HA ', ' A 389  LEU HD12', -0.422, (232.612, 255.121, 192.903)), (' B 576  ARG  HA ', ' B 582  GLU  O  ', -0.421, (269.597, 212.08, 216.477)), (' B 421  ASN  ND2', ' B 452  TYR  HB2', -0.42, (235.904, 207.666, 183.238)), (' B 200  PHE  HE2', ' B 202  ILE HD11', -0.419, (257.054, 266.412, 201.235)), (' C 113  THR HG22', ' C 114  GLN  N  ', -0.419, (246.122, 191.693, 193.18)), (' A 821  LEU HD21', ' A 937  LEU HD13', -0.419, (207.996, 227.557, 259.368)), (' A 327  ARG  NH1', ' A 577  ASP  OD2', -0.419, (228.952, 273.263, 208.977)), (' B 438  ASN  O  ', ' B 442  SER  HB2', -0.419, (246.258, 216.408, 169.969)), (' C1101  TRP  CZ2', ' C1132  VAL HG21', -0.418, (216.701, 218.179, 299.811)), (' B 323  GLU  OE1', ' B 324  SER  N  ', -0.418, (272.618, 229.413, 212.872)), (' B 171  SER  OG ', ' B 172  GLN  N  ', -0.417, (252.216, 277.026, 200.549)), (' A 824  LYS  HA ', ' A 824  LYS  HD3', -0.417, (203.55, 226.845, 252.211)), (' B 915  LEU HD12', ' B 922  ILE HD12', -0.417, (237.662, 256.244, 284.733)), (' B1311  NAG  H61', ' B1312  NAG  H82', -0.417, (238.447, 271.115, 268.758)), (' C 353  ASN  O  ', ' C 397  ASP  HA ', -0.416, (209.484, 229.562, 186.706)), (' C  32  THR  HA ', ' C  57  PHE  CD1', -0.416, (245.01, 191.649, 226.274)), (' C 401  ILE HD13', ' C 406  VAL  HA ', -0.415, (222.598, 233.473, 183.405)), (' B1026  THR HG22', ' B1041  PHE  HZ ', -0.415, (231.709, 240.527, 264.225)), (' B 128  LYS  HG2', ' B 168  GLU  HG2', -0.415, (254.629, 271.477, 189.585)), (' A 882  THR  CG2', ' C 706  TYR  HB2', -0.414, (216.14, 213.286, 280.822)), (' B  38  PRO  HG3', ' B  50  THR HG21', -0.414, (250.728, 259.257, 218.865)), (' C 104  ILE  CD1', ' C 117  LEU  HG ', -0.413, (254.202, 183.326, 198.473)), (' A 808  PRO  HA ', ' A 813  LYS  HE3', -0.413, (205.628, 209.015, 265.978)), (' C  89  VAL HG23', ' C 266  VAL HG13', -0.413, (245.043, 186.079, 212.227)), (' B  47  LEU  CD2', ' B 277  LYS  HG3', -0.412, (250.41, 263.015, 230.299)), (' B  31  PHE  HB3', ' B  32  THR  H  ', -0.412, (266.557, 266.589, 223.833)), (' B1106  ARG  HD2', ' C 903  TYR  CE2', -0.411, (243.636, 236.668, 285.859)), (' C 279  ASN  CG ', ' C 280  GLU  H  ', -0.411, (259.421, 203.037, 232.271)), (' A 974  SER  OG ', ' C 570  ASP  OD2', -0.411, (215.61, 223.114, 216.541)), (' B 657  ASN  ND2', ' B 659  TYR  CZ ', -0.41, (271.269, 248.424, 258.29)), (' C  30  SER  O  ', ' C  58  PHE  HA ', -0.41, (241.662, 186.574, 226.424)), (' A 642  PHE  CE2', ' A 644  THR HG22', -0.41, (208.834, 261.612, 242.472)), (' C 204  SER  O  ', ' C 205  LYS  HG2', -0.409, (258.822, 192.163, 218.058)), (' A 867  GLU  N  ', ' A 867  GLU  OE2', -0.408, (213.223, 211.228, 256.0)), (' B 551  LEU  CD2', ' B 586  ILE HG12', -0.408, (267.251, 220.142, 220.512)), (' B  82  VAL HG21', ' B 236  ARG  CZ ', -0.408, (271.149, 258.608, 195.531)), (' A 789  LYS  HD3', ' C 701  GLU  OE1', -0.407, (215.911, 206.072, 270.885)), (' B 582  GLU  HG2', ' B 583  ILE  N  ', -0.407, (272.937, 211.6, 218.797)), (' B 583  ILE  HA ', ' B 583  ILE HD13', -0.407, (268.862, 211.701, 218.444)), (' B 561  PHE  HB2', ' C  40  LYS  HE2', -0.406, (259.683, 201.83, 213.387)), (' C 188  LEU HD12', ' C 215  LEU HD11', -0.406, (252.636, 182.857, 222.568)), (' A 325  ILE  O  ', ' A 325  ILE HG13', -0.406, (224.422, 265.701, 209.407)), (' C 557  LYS  HG3', ' C 557  LYS  O  ', -0.406, (193.195, 216.462, 222.014)), (' A 742  CYS  SG ', ' A 749  SER  N  ', -0.406, (229.151, 214.103, 218.086)), (' B 732  LYS  HE3', ' B 770  ALA  O  ', -0.405, (221.268, 247.8, 243.315)), (' B 325  ILE  O  ', ' B 325  ILE HG13', -0.405, (269.906, 223.477, 212.835)), (' C 900  GLN  O  ', ' C 904  ARG  HG3', -0.405, (245.26, 229.636, 282.539)), (' A 198  GLY  HA2', ' A 231  GLY  HA2', -0.405, (200.47, 233.532, 196.874)), (' A 275  LEU  HA ', ' A 275  LEU HD12', -0.405, (202.914, 234.005, 224.64)), (' B 552  THR HG22', ' B 553  GLU  N  ', -0.404, (273.556, 217.06, 226.159)), (' B 341  PHE  HB3', ' B1305  NAG  C7 ', -0.404, (256.446, 217.866, 181.725)), (' A 407  ARG  HB3', ' A 407  ARG HH11', -0.403, (227.734, 252.579, 163.001)), (' B 356  ARG  NH1', ' B 358  SER  HB2', -0.403, (260.11, 205.36, 197.906)), (' B 279  ASN  CG ', ' B 280  GLU  H  ', -0.403, (246.95, 271.419, 228.729)), (' A 333  ASN  O  ', ' A 361  VAL HG22', -0.403, (236.837, 270.249, 191.74)), (' C 124  ASN  OD1', ' C 170  VAL HG13', -0.403, (267.423, 189.65, 200.325)), (' B 559  LEU  N  ', ' B 562  GLN  OE1', -0.402, (263.749, 203.895, 219.894)), (' A 417  ILE  H  ', ' A 417  ILE HD12', -0.402, (237.621, 254.153, 159.698)), (' C  51  GLN  CD ', ' C  51  GLN  H  ', -0.402, (242.129, 206.508, 219.121)), (' C 408  GLN  OE1', ' C 415  GLY  HA3', -0.402, (224.536, 240.683, 187.223)), (' C 886  THR HG21', ' C 893  LEU HD12', -0.402, (249.964, 241.768, 281.988)), (' B 740  TYR  CE1', ' B 965  LEU HD11', -0.401, (231.048, 247.873, 223.834)), (' A 302  LEU HD23', ' A 307  VAL HG12', -0.4, (205.084, 238.346, 236.521))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('A', ' 348 ', 'CYS', 0.016458829935501983, (15.577000000000004, -32.449, 44.294)), ('A', ' 450 ', 'PRO', 0.08486455919064081, (37.467, -18.134, 40.638)), ('B', ' 127 ', 'VAL', 0.001447369565161245, (24.462, -12.099, -49.349)), ('B', ' 187 ', 'SER', 0.016636330791185927, (35.246000000000016, -20.511, -49.529)), ('C', ' 138 ', 'ASN', 0.03136080093595724, (37.225, -13.18, -33.071)), ('C', ' 189 ', 'HIS', 0.0, (12.492, -0.969, -47.034)), ('H', ' 127 ', 'VAL', 0.0005999158254816958, (17.671999999999997, 23.458000000000002, 108.429)), ('H', ' 146 ', 'GLY', 0.09043035035564699, (4.143, 21.213, 88.463)), ('H', ' 187 ', 'SER', 0.024865867342788502, (25.47100000000001, 34.492, 106.283)), ('L', ' 138 ', 'ASN', 0.029200298100912833, (30.015000000000004, 24.404, 91.716)), ('S', ' 348 ', 'CYS', 0.014842351658801727, (3.44, 29.057000000000002, 13.906))]
data['omega'] = [('A', ' 470 ', 'PRO', None, (36.593, 14.689999999999998, 36.349)), ('B', '  98 ', 'PRO', None, (33.87400000000001, -18.196, 15.993)), ('B', ' 149 ', 'PRO', None, (12.147000000000006, -24.526, -22.381)), ('B', ' 151 ', 'PRO', None, (17.93000000000001, -26.45, -22.154)), ('B', ' 191 ', 'PRO', None, (29.884, -23.875, -51.489)), ('C', '   8 ', 'PRO', None, (40.143, -2.643, -9.832)), ('C', '  95 ', 'PRO', None, (23.355, -4.803000000000002, 6.622)), ('C', ' 141 ', 'PRO', None, (39.98400000000001, -5.842, -27.779)), ('C', ' 189 ', 'HIS', None, (11.118, -1.454, -46.984)), ('H', '  98 ', 'PRO', None, (25.183, 24.02799999999999, 42.718)), ('H', ' 149 ', 'PRO', None, (3.058, 25.234, 79.968)), ('H', ' 151 ', 'PRO', None, (7.961000000000001, 28.685000000000002, 79.067)), ('H', ' 191 ', 'PRO', None, (19.319, 36.441, 107.621)), ('L', '   8 ', 'PRO', None, (35.986000000000004, 12.0, 69.226)), ('L', '  95 ', 'PRO', None, (19.512000000000008, 8.608, 52.823)), ('L', ' 141 ', 'PRO', None, (35.012000000000015, 17.252, 88.004)), ('S', ' 470 ', 'PRO', None, (41.026, -5.883000000000002, 24.553))]
data['rota'] = [('S', ' 344 ', 'LYS', 1.723707601782141e-05, (12.291, 21.252, 13.791)), ('S', ' 349 ', 'VAL', 0.039962019538957984, (3.9849999999999994, 30.618, 17.33)), ('S', ' 374 ', 'LEU', 0.22163836728456876, (10.364, 37.171000000000014, 23.57)), ('S', ' 421 ', 'LEU', 0.22619115516162117, (15.374, 25.09, 29.627999999999997)), ('S', ' 431 ', 'THR', 0.08587685977202371, (15.123999999999999, 4.424999999999999, 40.023)), ('S', ' 463 ', 'ASP', 0.1718683805578447, (48.333, 8.496, 21.936)), ('S', ' 472 ', 'LEU', 0.012954593378600528, (46.476000000000006, -1.3789999999999996, 27.303)), ('A', ' 337 ', 'VAL', 0.03539621826870958, (28.331000000000007, -10.500000000000004, 33.585)), ('A', ' 378 ', 'CYS', 0.24596214008589368, (24.633999999999993, -37.28800000000001, 43.412)), ('A', ' 432 ', 'SER', 0.19736119991352669, (16.971, -1.7959999999999996, 16.232)), ('A', ' 439 ', 'LYS', 0.07401684657019264, (27.619000000000007, -4.196, 30.809000000000005)), ('A', ' 500 ', 'SER', 0.15897385091732094, (28.44300000000001, -25.648, 39.459)), ('L', '  66 ', 'ARG', 0.0, (40.375, 14.306000000000003, 54.287)), ('L', '  89 ', 'LEU', 1.727375808950394e-05, (27.247, 14.560999999999996, 58.373000000000005)), ('L', ' 144 ', 'ILE', 0.04807931697807878, (28.552, 12.71, 89.949)), ('L', ' 175 ', 'MET', 0.11011911710690986, (22.99300000000001, 19.825999999999993, 90.018)), ('L', ' 197 ', 'THR', 0.0888737325346132, (29.578000000000007, 10.532999999999998, 95.293)), ('H', '  10 ', 'VAL', 0.20023534696046755, (3.9530000000000003, 24.025, 69.383)), ('H', '  11 ', 'LEU', 0.08299713871751394, (2.113, 22.294999999999995, 72.255)), ('H', '  30 ', 'THR', 0.1099633594607778, (11.257000000000003, 25.769, 43.557)), ('H', '  33 ', 'ARG', 0.23338518450835666, (15.160000000000007, 20.61799999999999, 48.054)), ('H', '  65 ', 'ASP', 0.23631907892990933, (4.697999999999999, 6.835000000000002, 58.644999999999996)), ('H', '  73 ', 'THR', 0.13439555949140988, (4.818, 27.502, 45.932)), ('H', '  82B', 'SER', 0.20441451173251185, (0.253, 9.976, 66.389)), ('H', ' 100C', 'THR', 0.008159601566148922, (23.371999999999996, 22.734, 50.799)), ('C', '  22 ', 'THR', 0.12548803511508877, (41.52, -3.0410000000000004, -4.106)), ('C', '  66 ', 'ARG', 0.0, (45.039, -3.972000000000001, 5.094)), ('C', '  89 ', 'LEU', 1.8936521317682673e-05, (32.571000000000005, -8.016, 0.973)), ('C', ' 105 ', 'GLU', 0.0054399582506021085, (40.616, -11.895000000000003, -18.354)), ('C', ' 110 ', 'ASP', 0.10916312384242174, (44.333, -6.255, -30.368000000000002)), ('C', ' 147 ', 'LYS', 0.0, (24.488999999999997, 0.09300000000000001, -34.682)), ('B', '  10 ', 'VAL', 0.19637303778897686, (13.688000000000002, -23.936000000000007, -11.055)), ('B', '  33 ', 'ARG', 0.0342867779470019, (23.239, -18.141000000000005, 10.743)), ('B', '  58 ', 'THR', 0.22410964809144418, (17.254, -10.571000000000002, 9.585)), ('B', '  61 ', 'GLN', 0.15360567570121947, (15.303, -3.937, 3.6570000000000005)), ('B', ' 172 ', 'LEU', 0.014854370451372924, (15.784999999999998, -14.701, -22.736))]
data['cbeta'] = []
data['probe'] = [(' L  66  ARG  CG ', ' L  66  ARG HH11', -1.017, (39.551, 12.325, 51.986)), (' S 472  LEU  H  ', ' S 472  LEU HD12', -0.929, (47.588, -3.44, 25.556)), (' S 425  THR HG21', ' S 495  ARG  HG3', -0.907, (13.439, 15.322, 32.482)), (' A 359  THR HG23', ' B  30  THR HG21', -0.902, (18.412, -26.921, 16.017)), (' L  66  ARG  HG2', ' L  66  ARG HH11', -0.865, (39.781, 11.967, 51.746)), (' C  66  ARG  CG ', ' C  66  ARG HH11', -0.863, (43.259, -2.231, 6.607)), (' C  32  TYR  HB2', ' C  92  VAL HG22', -0.846, (33.508, -6.687, 9.754)), (' S 369  VAL HG12', ' S 370  SER  H  ', -0.836, (15.511, 38.033, 23.724)), (' C 144  ILE HG22', ' C 145  ASN  N  ', -0.803, (30.869, -3.113, -30.776)), (' A 369  VAL HG23', ' A 417  MET  HG3', -0.797, (32.148, -31.885, 37.381)), (' C 112  ALA  HA ', ' C 200  THR HG21', -0.795, (39.323, -5.372, -35.657)), (' A 390  LYS  HG3', ' A 491  TYR  HA ', -0.773, (29.561, -10.186, 20.304)), (' A 432  SER  HA ', ' A 485  THR HG22', -0.771, (17.655, -2.59, 15.036)), (' H 150  GLU  OE1', ' H 170  ALA  HB3', -0.766, (11.958, 23.222, 81.804)), (' H 100C THR  O  ', ' H 100D LEU  HB2', -0.741, (25.693, 22.133, 53.615)), (' C  54  LEU HD11', ' C  58  VAL  HB ', -0.722, (44.404, -19.184, -0.205)), (' C  32  TYR  HB2', ' C  92  VAL  CG2', -0.721, (33.734, -6.181, 9.021)), (' L 198  HIS  HD2', ' L 200  THR  CG2', -0.72, (34.179, 16.17, 93.857)), (' L  66  ARG  NH1', ' L  68  GLY  O  ', -0.72, (38.932, 10.192, 52.383)), (' B  38  LYS  HB2', ' B  48  ILE HD11', -0.716, (18.815, -13.706, -3.712)), (' H  10  VAL HG11', ' H  18  VAL HG21', -0.707, (2.624, 21.395, 66.38)), (' L  66  ARG  HG3', ' L  66  ARG HH11', -0.701, (38.373, 12.132, 52.723)), (' C 144  ILE  CG2', ' C 145  ASN  N  ', -0.694, (31.124, -3.048, -30.773)), (' C 198  HIS  HD2', ' C 200  THR  CG2', -0.692, (38.942, -3.566, -33.974)), (' C 198  HIS  HD2', ' C 200  THR HG22', -0.685, (38.791, -3.648, -33.278)), (' A 431  THR HG22', ' A 433  THR  H  ', -0.682, (16.453, -0.636, 18.379)), (' S 391  GLY  O  ', ' S 394  VAL HG23', -0.679, (23.084, 20.482, 36.178)), (' A 369  VAL HG12', ' A 370  SER  N  ', -0.678, (30.393, -35.446, 34.027)), (' S 431  THR HG22', ' S 433  THR  H  ', -0.678, (16.259, 1.282, 40.385)), (' C  66  ARG  HG2', ' C  66  ARG HH11', -0.674, (43.557, -2.027, 7.339)), (' A 404  VAL HG22', ' S 470  PRO  HB3', -0.673, (39.69, -7.383, 27.561)), (' H 100B ARG  NH1', ' H 216  HOH  O  ', -0.672, (26.23, 29.667, 49.268)), (' S 405  ILE  HA ', ' S 409  ASN HD22', -0.662, (28.864, 16.45, 27.683)), (' B  96  GLY  H  ', ' B 100C THR HG22', -0.662, (30.251, -17.715, 10.762)), (' H  30  THR HG23', ' H  53  GLY  HA2', -0.66, (9.566, 23.501, 41.467)), (' C  33  LEU HD13', ' C  71  TYR  CG ', -0.657, (39.77, -4.493, 2.631)), (' A 338  TYR  HE2', ' A 439  LYS  HG3', -0.653, (27.161, -3.844, 34.164)), (' L 195  GLU  HG2', ' L 206  VAL HG22', -0.65, (25.971, 10.744, 102.753)), (' S 472  LEU  CD1', ' S 472  LEU  H  ', -0.647, (47.93, -2.765, 26.085)), (' L 198  HIS  CD2', ' L 200  THR  HB ', -0.645, (34.866, 16.031, 92.727)), (' L 108  ARG  NH1', ' L 109  ALA  O  ', -0.642, (37.574, 22.593, 88.889)), (' C  32  TYR  CB ', ' C  92  VAL HG22', -0.642, (33.95, -7.171, 9.656)), (' A 441  ARG  HA ', ' A 478  LEU HD23', -0.636, (32.868, -3.089, 34.045)), (' C  66  ARG  HG3', ' C  66  ARG HH11', -0.634, (42.863, -2.356, 6.412)), (' S 363  THR  HB ', ' S 422  ALA  HB3', -0.627, (17.393, 24.082, 33.151)), (' L 198  HIS  CD2', ' L 200  THR  CG2', -0.623, (34.441, 15.68, 93.743)), (' C  14  SER  O  ', ' C  17  GLU  HB2', -0.622, (50.504, -11.89, -16.357)), (' S 472  LEU  O  ', ' S 473  ASN  HB2', -0.617, (47.129, 0.792, 25.116)), (' L 136  LEU  N  ', ' L 136  LEU HD12', -0.614, (23.422, 19.572, 94.583)), (' H  40  ARG HH12', ' H  85  GLU  HA ', -0.614, (10.588, 11.235, 71.998)), (' C  37  GLN  OE1', ' C  45  LYS  HE2', -0.613, (38.428, -20.273, -7.676)), (' H  39  GLN  HB2', ' H  45  LEU HD23', -0.606, (19.181, 17.623, 65.725)), (' L  66  ARG  CG ', ' L  66  ARG  NH1', -0.605, (38.544, 11.622, 52.319)), (' C  89  LEU  HG ', ' C  98  PHE  CE1', -0.605, (30.163, -11.038, -0.508)), (' B 173  GLN  OE1', ' C 160  LEU HD13', -0.6, (15.499, -9.578, -27.655)), (' C 144  ILE  CG2', ' C 145  ASN  H  ', -0.6, (31.169, -2.767, -31.248)), (' H  40  ARG  NH1', ' H  85  GLU  HA ', -0.598, (10.822, 10.84, 71.678)), (' B 119  PRO  HB3', ' B 147  TYR  HB3', -0.596, (13.652, -22.812, -29.93)), (' H 119  PRO  HB3', ' H 147  TYR  HB3', -0.596, (4.751, 25.634, 86.845)), (' A 363  THR  HB ', ' A 422  ALA  HB3', -0.595, (26.698, -21.36, 24.586)), (' H  94  ARG  NH1', ' H 101  ASP  OD1', -0.595, (22.997, 28.07, 49.928)), (' C 198  HIS  CD2', ' C 200  THR HG22', -0.595, (38.351, -3.719, -33.409)), (' C 123  GLU  N  ', ' C 123  GLU  OE2', -0.595, (13.127, -19.78, -45.794)), (' C 187  GLU  HG2', ' C 211  ARG HH12', -0.594, (9.172, -8.008, -49.152)), (' H  95  GLU  HA ', ' H 100C THR  HB ', -0.592, (21.332, 21.07, 49.652)), (' C 131  SER  HA ', ' C 179  LEU  O  ', -0.592, (15.642, -9.628, -38.239)), (' S 472  LEU  N  ', ' S 472  LEU HD12', -0.592, (46.812, -3.28, 26.379)), (' L 192  TYR  O  ', ' L 208  SER  HB2', -0.591, (19.111, 13.315, 105.849)), (' H 150  GLU  OE2', ' H 151  PRO  HA ', -0.588, (9.602, 27.128, 80.252)), (' A 337  VAL  CG1', ' A 389  VAL HG12', -0.584, (29.223, -11.944, 30.01)), (' S 425  THR  CG2', ' S 495  ARG  HG3', -0.583, (13.625, 15.766, 33.502)), (' B  94  ARG  NH1', ' B 101  ASP  OD1', -0.581, (32.641, -22.056, 7.885)), (' S 425  THR HG21', ' S 495  ARG  CG ', -0.579, (12.901, 15.367, 32.277)), (' L 135  PHE  C  ', ' L 136  LEU HD12', -0.578, (22.553, 19.415, 95.016)), (' H   2  VAL HG12', ' H   3  GLN  N  ', -0.577, (17.246, 32.555, 53.208)), (' L  66  ARG  HG2', ' L  66  ARG  NH1', -0.568, (39.678, 11.397, 51.804)), (' L 198  HIS  CD2', ' L 200  THR HG22', -0.568, (34.234, 15.279, 94.318)), (' S 348  CYS  SG ', ' S 349  VAL  N  ', -0.564, (4.289, 28.65, 15.95)), (' L 182  THR HG22', ' L 184  ASP  H  ', -0.564, (1.251, 12.125, 102.3)), (' S 323  CYS  SG ', ' S 345  ILE HG23', -0.56, (6.636, 25.483, 15.121)), (' S 338  TYR  CE2', ' S 439  LYS  HG3', -0.554, (25.018, 7.249, 25.003)), (' A 337  VAL HG11', ' A 389  VAL HG12', -0.553, (29.976, -12.015, 29.888)), (' A 338  TYR  CE2', ' A 439  LYS  HG3', -0.553, (27.791, -3.845, 34.52)), (' C  61  ARG  NH2', ' C  82  ASP  OD1', -0.549, (45.756, -19.952, -9.782)), (' A 369  VAL  CG1', ' A 370  SER  N  ', -0.547, (30.69, -35.721, 34.39)), (' S 431  THR HG22', ' S 433  THR  N  ', -0.545, (16.628, 1.385, 41.055)), (' L 131  SER  HA ', ' L 179  LEU  O  ', -0.542, (10.098, 15.843, 97.892)), (' L 155  ARG  HD3', ' L 156  GLN  H  ', -0.533, (12.849, 4.54, 96.526)), (' H  14  PRO  HA ', ' H  82C LEU  O  ', -0.533, (0.664, 11.923, 71.358)), (' H 190  TRP  CG ', ' H 191  PRO  HA ', -0.532, (18.561, 36.56, 105.181)), (' B 100D LEU HD12', ' B 103  TRP  CZ2', -0.53, (30.366, -15.334, 0.999)), (' B  12  ALA  O  ', ' B 111  VAL  HA ', -0.529, (9.53, -18.112, -14.242)), (' S 351  ASP  O  ', ' S 354  VAL HG22', -0.529, (3.231, 29.587, 26.04)), (' H 155  THR  OG1', ' H 198  ASN  HB2', -0.528, (12.026, 37.226, 90.059)), (' A 432  SER  HA ', ' A 485  THR  CG2', -0.523, (17.734, -3.196, 14.879)), (' L 149  LYS  HB2', ' L 193  THR  HB ', -0.523, (20.095, 9.488, 103.435)), (' S 369  VAL HG22', ' S 417  MET  HG3', -0.522, (18.743, 35.442, 20.384)), (' H  47  TRP  CZ3', ' L  95  PRO  HB3', -0.521, (16.554, 9.776, 54.339)), (' A 469  PRO  HA ', ' A 471  ALA  H  ', -0.518, (38.467, 12.974, 36.722)), (' H  17  SER  HA ', ' H  82  LEU  O  ', -0.518, (0.309, 14.979, 63.744)), (' H  99  GLN  O  ', ' H 100C THR HG23', -0.517, (24.775, 20.949, 48.098)), (' H 152  VAL  CG1', ' H 201  HIS  HD2', -0.516, (6.377, 28.892, 83.887)), (' H  56  ASP  OD2', ' S 426  ARG  NH1', -0.515, (11.916, 12.09, 44.106)), (' H 154  LEU  C  ', ' H 154  LEU HD23', -0.514, (14.871, 33.642, 89.53)), (' L 140  TYR  CG ', ' L 141  PRO  HA ', -0.513, (34.905, 19.22, 86.218)), (' S 347  ASN  O  ', ' S 348  CYS  HB3', -0.513, (3.323, 26.876, 13.217)), (' C  35  TRP  CZ3', ' C  88  CYS  HB3', -0.513, (37.331, -7.68, -2.75)), (' H   6  GLU  OE1', ' H 104  GLY  HA3', -0.51, (14.247, 26.385, 60.573)), (' B 142  CYS  HB2', ' B 156  TRP  CH2', -0.509, (24.139, -22.662, -38.835)), (' H  36  TRP  C  ', ' H  37  ILE HD12', -0.507, (16.221, 18.127, 57.913)), (' B 168  PHE  HE1', ' C 175  MET  CA ', -0.507, (28.819, -12.527, -30.775)), (' A 395  ARG  C  ', ' A 395  ARG  HD2', -0.506, (36.226, -18.588, 25.089)), (' C  47  LEU HD11', ' C  86  TYR  CE2', -0.505, (39.8, -15.225, -5.753)), (' C  66  ARG  NH1', ' C  68  GLY  O  ', -0.504, (42.107, -0.65, 6.904)), (' B 190  TRP  CD1', ' B 191  PRO  HA ', -0.504, (28.547, -24.688, -49.616)), (' S 385  ASP  O  ', ' S 497  VAL  HA ', -0.503, (16.278, 20.568, 24.291)), (' H 100C THR  OG1', ' H 100D LEU HD23', -0.502, (23.993, 20.075, 51.906)), (' A 369  VAL HG12', ' A 370  SER  H  ', -0.499, (30.974, -35.964, 34.009)), (' C 192  TYR  O  ', ' C 208  SER  HB2', -0.498, (22.924, -3.575, -45.487)), (' C  11  LEU HD23', ' C  12  SER  N  ', -0.497, (44.163, -7.312, -16.289)), (' H  13  ARG  HA ', ' H 112  SER  O  ', -0.497, (-0.231, 16.549, 74.761)), (' H  30  THR HG23', ' H  53  GLY  CA ', -0.497, (9.798, 23.378, 41.461)), (' A 390  LYS  CG ', ' A 490  GLY  O  ', -0.496, (29.773, -10.677, 20.393)), (' C 161  ASN HD22', ' C 177  SER  HA ', -0.495, (22.89, -8.399, -31.813)), (' A 351  ASP  C  ', ' A 353  SER  H  ', -0.495, (17.882, -34.053, 31.637)), (' H  32  TYR  CE1', ' H  96  GLY  HA3', -0.495, (20.04, 25.12, 46.3)), (' C  89  LEU  HB3', ' C  98  PHE  CD1', -0.492, (30.609, -9.306, -1.194)), (' L 198  HIS  CD2', ' L 200  THR  CB ', -0.492, (35.025, 15.739, 93.767)), (' B 179  LEU  C  ', ' B 179  LEU HD23', -0.491, (21.457, -19.243, -31.575)), (' S 431  THR HG22', ' S 434  GLY  H  ', -0.491, (17.199, 2.414, 40.24)), (' S 351  ASP  N  ', ' S 351  ASP  OD2', -0.491, (1.642, 29.878, 23.364)), (' L  89  LEU  HG ', ' L  98  PHE  CE1', -0.489, (23.741, 16.478, 59.42)), (' C  47  LEU HD11', ' C  86  TYR  HE2', -0.488, (40.056, -15.372, -5.718)), (' B  10  VAL HG11', ' B  18  VAL HG21', -0.487, (11.233, -22.94, -8.361)), (' S 386  SER  O  ', ' S 387  PHE  HB3', -0.487, (19.417, 15.549, 24.124)), (' L 113  PRO  HG2', ' L 205  ILE HD12', -0.486, (30.63, 16.914, 97.845)), (' C 134  CYS  HB2', ' C 148  TRP  CH2', -0.486, (22.963, -7.596, -38.438)), (' H  98  PRO  HG2', ' H 100A LEU  HG ', -0.484, (28.47, 24.765, 44.796)), (' C 195  GLU  HG2', ' C 206  VAL HG22', -0.483, (28.942, 0.82, -41.361)), (' S 338  TYR  HE2', ' S 439  LYS  HG3', -0.483, (24.588, 7.492, 25.119)), (' B  21  SER  HB3', ' B  79  TYR  CE2', -0.48, (14.134, -26.456, 0.839)), (' S 344  LYS  HD3', ' S 344  LYS  O  ', -0.48, (10.018, 21.003, 12.96)), (' H  40  ARG  HG2', ' H  40  ARG HH11', -0.48, (12.763, 12.905, 70.792)), (' A 488  GLY  O  ', ' A 492  GLN  HG3', -0.479, (26.079, -10.396, 15.891)), (' C 112  ALA  CA ', ' C 200  THR HG21', -0.478, (39.588, -5.386, -35.657)), (' C  66  ARG  HG2', ' C  66  ARG  NH1', -0.477, (43.01, -1.865, 7.762)), (' H  94  ARG  HD3', ' H 101  ASP  OD2', -0.477, (21.864, 26.876, 51.671)), (' C 133  VAL HG22', ' C 178  THR HG23', -0.477, (19.508, -12.264, -36.552)), (' S 441  ARG  HA ', ' S 478  LEU HD23', -0.476, (31.114, 9.127, 25.342)), (' A 333  LYS  HB3', ' A 333  LYS  HE2', -0.473, (14.042, -8.156, 31.891)), (' B 124  LEU  HB2', ' B 141  GLY  CA ', -0.473, (24.044, -18.402, -40.568)), (' A 355  LEU HD22', ' A 421  LEU HD21', -0.473, (22.341, -27.968, 30.404)), (' H  33  ARG  CZ ', ' H  52  TYR  HB2', -0.471, (13.48, 17.191, 45.841)), (' A 353  SER  C  ', ' A 355  LEU  H  ', -0.471, (18.49, -31.948, 28.52)), (' C 155  ARG  HD3', ' C 156  GLN  H  ', -0.468, (15.204, 1.731, -33.926)), (' H  47  TRP  CE3', ' L  95  PRO  CB ', -0.468, (17.283, 10.24, 55.022)), (' H 173  GLN  CD ', ' L 160  LEU HD13', -0.467, (10.494, 13.845, 87.659)), (' A 369  VAL  CG1', ' A 370  SER  H  ', -0.466, (30.667, -35.767, 34.374)), (' H 169  PRO  HD3', ' L 164  THR HG22', -0.466, (20.751, 24.305, 85.321)), (' H  31  THR  O  ', ' H  31  THR HG22', -0.466, (16.999, 24.578, 42.505)), (' B 179  LEU HD23', ' B 180  SER  N  ', -0.466, (21.975, -18.966, -31.313)), (' A 386  SER  O  ', ' A 387  PHE  HB3', -0.465, (24.884, -13.258, 34.682)), (' L 142  LYS  HB3', ' L 173  TYR  CD1', -0.465, (30.426, 19.305, 84.41)), (' A 421  LEU  N  ', ' A 421  LEU HD12', -0.462, (25.927, -24.839, 30.356)), (' H 173  GLN  NE2', ' L 160  LEU HD13', -0.461, (10.272, 14.111, 88.294)), (' B 212  ILE  N  ', ' B 212  ILE HD12', -0.461, (22.297, -24.792, -43.738)), (' H  33  ARG  HG2', ' H  52  TYR  HD1', -0.46, (14.77, 19.556, 45.008)), (' S 344  LYS  O  ', ' S 345  ILE HD12', -0.46, (9.712, 21.281, 14.825)), (' A 426  ARG  NH1', ' A 485  THR  O  ', -0.46, (19.954, -8.122, 13.688)), (' A 469  PRO  HA ', ' A 471  ALA  N  ', -0.459, (38.617, 13.5, 36.303)), (' A 374  LEU  C  ', ' A 376  ASP  H  ', -0.459, (24.347, -38.919, 35.816)), (' C 147  LYS  HE3', ' C 197  THR  OG1', -0.458, (30.085, 1.829, -34.048)), (' C 147  LYS  HD2', ' C 147  LYS  N  ', -0.458, (26.522, -0.16, -34.329)), (' S 469  PRO  HG3', ' S 476  TRP  CZ2', -0.457, (36.942, -1.885, 23.208)), (' C 186  TYR  HA ', ' C 192  TYR  OH ', -0.456, (12.455, -4.879, -44.06)), (' S 369  VAL HG12', ' S 370  SER  N  ', -0.454, (15.729, 37.895, 23.718)), (' A 336  SER  HB3', ' A 439  LYS  O  ', -0.454, (27.558, -6.37, 32.258)), (' A 390  LYS  CG ', ' A 491  TYR  HA ', -0.453, (29.846, -9.632, 20.499)), (' B 168  PHE  HE1', ' C 175  MET  HA ', -0.452, (28.76, -12.624, -30.28)), (' H  10  VAL  CG1', ' H  18  VAL HG21', -0.451, (2.383, 21.558, 67.349)), (' L  50  ALA  O  ', ' L  51  ALA  HB3', -0.45, (35.92, 18.767, 51.224)), (' C 183  LYS  HE2', ' C 187  GLU  OE2', -0.449, (6.141, -9.787, -48.164)), (' L 142  LYS  HB3', ' L 173  TYR  CE1', -0.449, (30.692, 18.686, 84.091)), (' C  12  SER  HG ', ' C 105  GLU  CD ', -0.447, (41.392, -8.555, -20.908)), (' B  94  ARG HH11', ' B 101  ASP  CG ', -0.446, (32.222, -22.309, 7.576)), (' A 323  CYS  HB2', ' A 348  CYS  HB2', -0.446, (14.163, -31.919, 42.334)), (' B  96  GLY  N  ', ' B 100C THR HG22', -0.445, (29.646, -17.214, 11.017)), (' C 110  ASP  N  ', ' C 110  ASP  OD1', -0.445, (45.533, -5.467, -28.913)), (' A 420  VAL  C  ', ' A 421  LEU HD12', -0.444, (26.243, -25.068, 30.322)), (' L  89  LEU  HB3', ' L  98  PHE  CD1', -0.444, (24.708, 15.499, 60.173)), (' A 347  ASN  O  ', ' A 348  CYS  HB3', -0.442, (14.649, -30.717, 45.068)), (' C  54  LEU  CD1', ' C  58  VAL  HB ', -0.442, (44.409, -19.399, 0.523)), (' C  35  TRP  CE3', ' C  88  CYS  HB3', -0.441, (37.455, -7.895, -2.448)), (' L 161  ASN HD22', ' L 177  SER  HA ', -0.441, (18.095, 15.483, 91.517)), (' A 323  CYS  HA ', ' A 324  PRO  HD2', -0.44, (13.215, -28.197, 42.443)), (' L 155  ARG  HD3', ' L 156  GLN  N  ', -0.44, (13.475, 5.006, 96.345)), (' A 367  TYR  C  ', ' A 369  VAL  H  ', -0.439, (33.695, -31.687, 34.287)), (' B 100C THR  O  ', ' B 100D LEU  HB2', -0.438, (33.163, -16.102, 5.205)), (' H 150  GLU  OE1', ' H 170  ALA  CB ', -0.438, (11.73, 24.005, 82.521)), (' C  32  TYR  CG ', ' C  92  VAL HG22', -0.435, (33.925, -6.894, 10.491)), (' C 198  HIS  HD2', ' C 200  THR  CB ', -0.435, (39.65, -3.552, -33.55)), (' L 189  HIS  O  ', ' L 211  ARG  HD3', -0.434, (9.536, 12.072, 109.734)), (' A 354  VAL  O  ', ' A 354  VAL HG12', -0.433, (16.343, -28.889, 28.822)), (' A 337  VAL HG13', ' A 389  VAL HG12', -0.433, (28.901, -11.815, 30.511)), (' C   6  GLN  NE2', ' C 101  GLY  HA2', -0.432, (34.615, -7.624, -7.731)), (' L  66  ARG  HG3', ' L  66  ARG  NH1', -0.432, (38.256, 11.691, 52.374)), (' A 337  VAL HG23', ' A 338  TYR  H  ', -0.432, (29.468, -8.396, 33.586)), (' L 118  PHE  HA ', ' L 119  PRO  HD3', -0.432, (16.31, 22.097, 103.826)), (' H   2  VAL HG13', ' H  27  TYR  CD1', -0.431, (17.119, 31.181, 50.497)), (' A 431  THR HG22', ' A 433  THR  N  ', -0.43, (17.225, -0.582, 18.509)), (' C 198  HIS  CD2', ' C 200  THR  H  ', -0.426, (38.951, -2.782, -32.358)), (' C  66  ARG  CG ', ' C  66  ARG  NH1', -0.426, (42.164, -2.326, 7.287)), (' A 337  VAL  CG1', ' A 389  VAL  CG1', -0.426, (29.478, -12.451, 30.137)), (' C 135  PHE  C  ', ' C 136  LEU HD12', -0.426, (28.713, -9.45, -35.816)), (' H  38  LYS  HB2', ' H  48  ILE HD11', -0.426, (12.642, 15.505, 63.077)), (' H 204  SER  O  ', ' H 206  THR HG23', -0.426, (-1.505, 32.332, 85.872)), (' A 404  VAL  CG2', ' S 470  PRO  HB3', -0.425, (39.552, -7.267, 27.316)), (' H 148  PHE  HA ', ' H 149  PRO  HA ', -0.424, (4.591, 23.51, 80.974)), (' A 351  ASP  O  ', ' A 354  VAL HG23', -0.423, (16.189, -32.419, 31.941)), (' H 190  TRP  CD1', ' H 191  PRO  HA ', -0.423, (17.947, 36.775, 105.425)), (' L 190  ASN  OD1', ' L 211  ARG  HB2', -0.423, (11.626, 13.89, 112.27)), (' H  47  TRP  CE3', ' L  95  PRO  HB3', -0.423, (17.305, 9.802, 54.847)), (' B  95  GLU  HG3', ' B 100C THR HG21', -0.421, (29.485, -14.87, 10.555)), (' A 385  ASP  O  ', ' A 497  VAL  HA ', -0.42, (24.224, -18.938, 34.194)), (' H 142  CYS  HB2', ' H 156  TRP  CH2', -0.42, (14.304, 30.638, 95.322)), (' H  35  HIS  CE1', ' L  96  TRP  CZ2', -0.42, (19.58, 17.112, 51.955)), (' S 488  GLY  O  ', ' S 492  GLN  HG3', -0.419, (20.402, 14.019, 42.856)), (' A 484  TYR  HB2', ' A 487  THR HG23', -0.419, (24.244, -4.119, 16.395)), (' H  83  THR  O  ', ' H 111  VAL HG21', -0.417, (5.415, 13.337, 71.209)), (' C  18  ARG  HG3', ' C  76  SER  HA ', -0.417, (52.258, -11.64, -7.408)), (' B 213  GLU  HA ', ' B 214  PRO  HD3', -0.416, (23.249, -24.052, -50.381)), (' L 108  ARG  HG3', ' L 109  ALA  O  ', -0.416, (38.189, 22.373, 87.817)), (' C 198  HIS  CD2', ' C 200  THR  HB ', -0.416, (39.917, -3.646, -32.825)), (' B 186  THR  O  ', ' B 188  SER  N  ', -0.416, (36.121, -22.885, -49.179)), (' C 140  TYR  CG ', ' C 141  PRO  HA ', -0.415, (40.641, -7.933, -26.714)), (' S 441  ARG HH22', ' S 457  ASN  H  ', -0.415, (31.115, 7.86, 20.046)), (' A 331  ALA  HB3', ' A 334  PHE  CE1', -0.415, (16.626, -15.699, 32.974)), (' H 101  ASP  N  ', ' H 101  ASP  OD2', -0.415, (23.022, 25.897, 52.842)), (' A 355  LEU HD13', ' A 364  PHE  CE1', -0.414, (23.576, -30.367, 29.309)), (' B  16  ALA  O  ', ' B  82C LEU  HG ', -0.413, (6.941, -15.643, -7.614)), (' B 169  PRO  HD3', ' C 164  THR HG22', -0.411, (28.572, -16.886, -27.039)), (' H 154  LEU HD23', ' H 155  THR  N  ', -0.41, (14.379, 34.241, 89.643)), (' B  24  ALA  HB1', ' B  27  TYR  CE1', -0.41, (25.654, -26.842, 7.539)), (' L 161  ASN  ND2', ' L 177  SER  OG ', -0.41, (18.341, 14.27, 92.347)), (' L  48  ILE HD13', ' L  73  LEU  CD1', -0.41, (35.886, 22.535, 60.532)), (' H 169  PRO  HD2', ' L 162  SER  OG ', -0.41, (18.495, 21.366, 85.7)), (' B 190  TRP  CG ', ' B 191  PRO  HA ', -0.409, (28.896, -24.644, -49.562)), (' S 367  TYR  O  ', ' S 417  MET  HA ', -0.409, (20.793, 33.968, 22.014)), (' H   2  VAL  CG1', ' H   3  GLN  N  ', -0.409, (17.742, 32.519, 52.788)), (' L   6  GLN  NE2', ' L 102  THR  OG1', -0.408, (31.675, 15.033, 67.531)), (' S 431  THR  CG2', ' S 433  THR  H  ', -0.408, (15.718, 1.3, 40.476)), (' B  52  TYR  O  ', ' B  55  SER  N  ', -0.408, (15.888, -19.643, 14.563)), (' H  52A PRO  O  ', ' H  53  GLY  C  ', -0.406, (7.508, 21.847, 42.321)), (' H 186  THR  O  ', ' H 188  SER  N  ', -0.406, (25.561, 36.607, 105.414)), (' A 331  ALA  HB3', ' A 334  PHE  HE1', -0.405, (16.673, -15.768, 32.419)), (' C 198  HIS  HD2', ' C 200  THR  HB ', -0.405, (39.465, -3.758, -32.982)), (' L  46  ARG  HD2', ' L  55  ASP  OD2', -0.404, (28.613, 27.33, 55.86)), (' L  61  ARG  HD2', ' L  77  SER  O  ', -0.404, (41.634, 29.265, 68.681)), (' L 186  TYR  HA ', ' L 192  TYR  OH ', -0.403, (9.054, 11.518, 105.007)), (' L 123  GLU  O  ', ' L 126  THR  HB ', -0.403, (0.975, 23.906, 101.971)), (' C 138  ASN  ND2', ' C 172  THR  OG1', -0.403, (38.189, -15.477, -31.421)), (' H  68  LYS  HB2', ' H  68  LYS  HE2', -0.403, (2.143, 12.899, 56.811)), (' H   2  VAL HG13', ' H  27  TYR  HD1', -0.401, (17.114, 31.516, 50.384)), (' S 337  VAL  HA ', ' S 387  PHE  HB2', -0.401, (21.262, 14.805, 25.827))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

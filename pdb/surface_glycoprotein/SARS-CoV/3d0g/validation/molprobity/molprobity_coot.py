# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('A', ' 147 ', 'GLY', 0.09562579857814155, (77.77, 6.7669999999999995, 111.523)), ('A', ' 212 ', 'VAL', 0.00256301, (37.570000000000014, -13.174999999999997, 87.543)), ('A', ' 289 ', 'PRO', 0.04180881023158874, (64.889, 30.425, 98.894)), ('A', ' 339 ', 'VAL', 0.04420508086157355, (63.723, 7.786, 131.459)), ('B', '  20 ', 'THR', 0.016978593968747232, (49.02200000000002, 25.228, 20.042)), ('B', '  54 ', 'ILE', 0.08733589499502513, (22.248000000000005, 53.601, 51.595000000000006)), ('B', '  84 ', 'PRO', 0.0480194705954783, (37.923, 23.358, 23.258)), ('B', '  87 ', 'GLU', 0.01684108844799379, (41.785, 18.958, 24.469)), ('B', ' 212 ', 'VAL', 0.017737214003210433, (38.14700000000001, 12.278, 38.744)), ('B', ' 213 ', 'ASP', 0.02254371465238081, (37.145, 8.671, 39.629)), ('B', ' 339 ', 'VAL', 0.049520463753060746, (21.729, 59.536, 59.605000000000004)), ('B', ' 340 ', 'GLN', 0.03009952487642164, (23.864000000000004, 56.981, 57.699999999999996)), ('B', ' 536 ', 'GLU', 0.006149453614494215, (42.342, 14.083, 75.277)), ('E', ' 330 ', 'ASN', 0.02836772715635317, (23.402000000000005, -1.118, 138.508)), ('E', ' 358 ', 'SER', 0.016032360959353037, (20.517999999999997, 10.74, 131.01)), ('E', ' 368 ', 'GLY', 0.024588056947798816, (6.597000000000003, 0.986, 120.93500000000002)), ('E', ' 401 ', 'GLN', 0.04398367513095359, (18.832, -7.535, 112.14700000000002)), ('E', ' 402 ', 'THR', 0.028004455399925653, (21.195000000000007, -9.911, 110.25900000000001)), ('E', ' 404 ', 'VAL', 0.004645255321316723, (25.138000000000012, -14.001, 115.258)), ('E', ' 416 ', 'PHE', 0.014636390947868479, (5.880000000000008, -6.846999999999999, 119.184)), ('E', ' 465 ', 'LYS', 0.029627409176905754, (26.568000000000005, -36.017, 114.60700000000001)), ('F', ' 368 ', 'GLY', 0.012952144908834319, (77.213, 45.183, 47.318)), ('F', ' 369 ', 'VAL', 0.001555567899584308, (77.816, 46.491, 50.89)), ('F', ' 370 ', 'SER', 0.0008909094536124895, (76.937, 49.477, 53.135)), ('F', ' 391 ', 'GLY', 0.09686832728803763, (53.728, 45.857, 46.99900000000001)), ('F', ' 416 ', 'PHE', 0.00967439115216163, (76.526, 42.883, 39.052)), ('F', ' 465 ', 'LYS', 0.01790610813864094, (51.455, 37.465, 13.491))]
data['omega'] = [('A', ' 146 ', 'PRO', None, (73.959, 6.043999999999998, 113.04800000000002)), ('B', ' 146 ', 'PRO', None, (14.663000000000004, 45.780999999999985, 64.416)), ('E', ' 470 ', 'PRO', None, (39.92400000000002, -33.039, 120.25699999999999)), ('F', ' 470 ', 'PRO', None, (39.791999999999994, 44.597, 17.368))]
data['rota'] = [('A', '  23 ', 'GLU', 0.011747432304255156, (30.292000000000016, -25.103, 104.2)), ('A', '  29 ', 'LEU', 0.019892457834746486, (37.48100000000001, -19.77, 108.781)), ('A', '  35 ', 'GLU', 0.21882698738868717, (40.728, -16.872, 117.65100000000001)), ('A', '  55 ', 'THR', 0.1391330819022638, (61.87100000000001, -2.552, 129.463)), ('A', '  60 ', 'GLN', 0.10248155118782121, (59.739, -10.742999999999997, 127.53900000000002)), ('A', '  78 ', 'THR', 0.09626846241835041, (48.461, -26.815, 108.388)), ('A', '  81 ', 'GLN', 0.005428543835820805, (45.53, -27.147999999999993, 103.91)), ('A', '  85 ', 'LEU', 0.02361084502585983, (40.61, -24.362, 97.214)), ('A', '  86 ', 'GLN', 0.035297609979647086, (39.509000000000015, -25.243, 93.686)), ('A', ' 100 ', 'LEU', 0.06344151955625994, (45.873000000000005, -18.897999999999993, 105.471)), ('A', ' 103 ', 'ASN', 0.1654607007751188, (52.736, -23.058999999999997, 104.457)), ('A', ' 114 ', 'LYS', 0.0, (66.154, -24.313, 111.867)), ('A', ' 129 ', 'THR', 0.0013599335943581536, (75.59800000000001, -4.538, 114.426)), ('A', ' 148 ', 'LEU', 0.0, (78.557, 5.92, 107.898)), ('A', ' 156 ', 'LEU', 0.004689460416745003, (82.198, 16.312, 99.944)), ('A', ' 172 ', 'VAL', 0.1566801073536609, (79.94799999999998, -6.724000000000002, 106.428)), ('A', ' 198 ', 'ASP', 0.1765986570575967, (61.797999999999995, -20.232, 92.12)), ('A', ' 212 ', 'VAL', 0.02203985486435155, (37.570000000000014, -13.174999999999997, 87.543)), ('A', ' 240 ', 'LEU', 0.004645339354037343, (68.224, 13.334000000000003, 84.99)), ('A', ' 283 ', 'VAL', 0.003150532575091347, (70.048, 22.538, 92.712)), ('A', ' 291 ', 'ILE', 0.2569501154574256, (59.796, 25.923, 100.331)), ('A', ' 292 ', 'ASP', 0.17461478268831204, (60.78700000000002, 24.967, 103.914)), ('A', ' 293 ', 'VAL', 0.008312770446999244, (58.099, 26.224, 106.339)), ('A', ' 333 ', 'LEU', 0.22323884059876178, (52.98000000000001, 11.978999999999996, 119.829)), ('A', ' 334 ', 'THR', 0.019324752022962795, (56.22899999999999, 13.058999999999996, 121.553)), ('A', ' 343 ', 'VAL', 0.0647927320986567, (62.046, 3.601, 119.195)), ('A', ' 364 ', 'VAL', 0.007351242675213143, (58.592, 20.510999999999992, 114.682)), ('A', ' 371 ', 'THR', 0.033969401111816906, (55.322, 12.828, 107.674)), ('A', ' 375 ', 'GLU', 0.07942593345239442, (51.39500000000002, 8.1, 108.451)), ('A', ' 385 ', 'TYR', 0.20618399292520695, (39.02700000000001, -1.7860000000000003, 105.49200000000002)), ('A', ' 392 ', 'LEU', 0.1488821194916331, (41.570000000000014, -9.632, 104.302)), ('A', ' 401 ', 'HIS', 0.08435356170268715, (49.67000000000001, 1.101, 101.538)), ('A', ' 410 ', 'LEU', 0.0, (51.95, 15.260999999999997, 97.91400000000002)), ('A', ' 418 ', 'LEU', 0.06716988333956224, (50.512, 25.64, 102.858)), ('A', ' 439 ', 'LEU', 0.0, (60.589000000000006, 19.27, 90.86600000000001)), ('A', ' 444 ', 'LEU', 0.0, (66.325, 13.083999999999996, 92.816)), ('A', ' 449 ', 'THR', 0.06770351280531872, (65.329, 5.38, 92.73600000000002)), ('A', ' 455 ', 'MET', 0.00018097069637060321, (67.902, -3.352, 88.723)), ('A', ' 456 ', 'LEU', 0.0826178698471848, (68.118, -4.71, 92.301)), ('A', ' 460 ', 'ARG', 0.0, (67.658, -10.898, 92.688)), ('A', ' 476 ', 'LYS', 0.008141335090169018, (76.84800000000001, -9.548999999999996, 86.865)), ('A', ' 488 ', 'VAL', 0.0, (79.96699999999998, 2.226, 88.581)), ('A', ' 503 ', 'LEU', 0.043975531394174046, (71.432, -3.084999999999999, 101.813)), ('A', ' 514 ', 'ARG', 0.02062008200768534, (57.001999999999995, -2.876, 95.836)), ('A', ' 518 ', 'ARG', 0.28700449637121095, (53.955, 1.658, 94.337)), ('A', ' 526 ', 'GLN', 0.0012377524188818495, (47.24300000000001, 11.351, 92.112)), ('A', ' 549 ', 'GLU', 0.04290537169928235, (34.352, 13.451, 95.362)), ('A', ' 557 ', 'MET', 0.2868427416005952, (39.216000000000015, 1.24, 96.769)), ('A', ' 558 ', 'LEU', 0.1711834874884959, (40.297000000000004, 2.155, 100.282)), ('A', ' 562 ', 'LYS', 0.010284605095089201, (42.83300000000001, -7.322, 100.153)), ('A', ' 573 ', 'VAL', 0.010474575827976776, (40.253000000000014, 4.834, 91.471)), ('A', ' 585 ', 'LEU', 0.013548880791290263, (55.907, 11.078, 83.338)), ('A', ' 595 ', 'LEU', 0.0, (66.33100000000002, 18.837, 81.118)), ('A', ' 597 ', 'ASP', 0.0690997465692309, (67.256, 21.80699999999999, 76.848)), ('A', ' 600 ', 'LYS', 0.0007193614334177078, (71.596, 20.735999999999994, 74.737)), ('B', '  29 ', 'LEU', 0.022786453216679072, (42.911, 33.709, 31.018000000000004)), ('B', '  81 ', 'GLN', 0.01891059491928127, (33.499, 28.882, 24.905)), ('B', '  98 ', 'GLN', 0.016029597243515457, (35.286, 25.770999999999994, 32.739)), ('B', ' 100 ', 'LEU', 0.12906385011562616, (34.21200000000002, 31.026, 32.696)), ('B', ' 103 ', 'ASN', 0.07258036232022508, (25.68700000000001, 30.81399999999999, 30.637)), ('B', ' 110 ', 'GLU', 0.16904944799645732, (14.658000000000005, 40.035, 26.639)), ('B', ' 114 ', 'LYS', 0.0, (13.984000000000004, 42.266, 32.966)), ('B', ' 121 ', 'ASN', 0.05986201962772427, (14.106000000000003, 43.183, 43.404)), ('B', ' 125 ', 'THR', 0.16940764002765107, (12.122000000000003, 45.22399999999999, 49.011)), ('B', ' 129 ', 'THR', 0.2952058044236201, (10.563000000000002, 47.348, 54.096000000000004)), ('B', ' 137 ', 'ASN', 0.09673836672912578, (-1.7359999999999962, 51.657, 67.753)), ('B', ' 139 ', 'GLN', 0.158313711956748, (1.3450000000000006, 54.90199999999999, 64.85)), ('B', ' 148 ', 'LEU', 0.0, (9.448, 42.03299999999999, 65.636)), ('B', ' 156 ', 'LEU', 0.01752549687035378, (6.718000000000005, 35.119, 77.229)), ('B', ' 187 ', 'LYS', 0.15014829319467998, (13.611000000000004, 30.509000000000004, 37.3)), ('B', ' 198 ', 'ASP', 0.08352317429399356, (14.698, 22.549999999999997, 37.373)), ('B', ' 212 ', 'VAL', 0.007351242675213143, (38.14700000000001, 12.278, 38.744)), ('B', ' 240 ', 'LEU', 0.029041979386243113, (15.613000000000001, 17.272, 71.993)), ('B', ' 244 ', 'VAL', 0.15754297159102879, (11.978999999999997, 21.198999999999998, 74.91300000000001)), ('B', ' 291 ', 'ILE', 0.08891002822166821, (27.327000000000012, 29.26, 80.103)), ('B', ' 305 ', 'GLN', 0.2830660165042629, (36.254000000000005, 46.22, 69.311)), ('B', ' 325 ', 'GLN', 0.11021322827785096, (45.568, 47.198, 58.807)), ('B', ' 333 ', 'LEU', 0.06735374664172508, (31.772999999999993, 46.65799999999999, 63.332)), ('B', ' 334 ', 'THR', 0.0013599335943581536, (28.809999999999995, 48.74899999999999, 64.645)), ('B', ' 343 ', 'VAL', 0.0759232193934459, (22.095, 46.642, 55.96200000000001)), ('B', ' 357 ', 'ARG', 0.19206261731191512, (36.585, 43.442, 55.888000000000005)), ('B', ' 375 ', 'GLU', 0.11025161972547724, (32.57, 35.702, 60.158)), ('B', ' 385 ', 'TYR', 0.16607560850120517, (43.191, 31.347, 49.07300000000001)), ('B', ' 392 ', 'LEU', 0.007742985492559124, (39.446, 29.67, 41.811)), ('B', ' 401 ', 'HIS', 0.13233064864642446, (32.82500000000001, 28.368999999999993, 53.946000000000005)), ('B', ' 407 ', 'ILE', 0.10601882195261114, (34.632, 25.365, 63.329)), ('B', ' 410 ', 'LEU', 0.0, (32.793000000000006, 25.471, 68.09900000000002)), ('B', ' 416 ', 'LYS', 0.2127503024726623, (37.265, 26.065, 78.781)), ('B', ' 418 ', 'LEU', 0.030558602252291105, (35.30200000000001, 31.338, 78.112)), ('B', ' 421 ', 'ILE', 0.06284398378919516, (39.163000000000004, 34.963, 77.917)), ('B', ' 424 ', 'LEU', 0.09540246059534853, (34.077, 32.707, 83.154)), ('B', ' 427 ', 'ASP', 0.10967533343186554, (37.793, 29.168, 89.559)), ('B', ' 429 ', 'GLN', 0.11775621563522251, (34.783, 24.175, 87.863)), ('B', ' 430 ', 'GLU', 0.06748485008486962, (33.482, 21.854, 85.12400000000001)), ('B', ' 432 ', 'ASN', 0.10641673131338465, (28.638000000000005, 16.845, 84.401)), ('B', ' 439 ', 'LEU', 0.0, (25.672000000000004, 20.384999999999994, 75.28)), ('B', ' 444 ', 'LEU', 0.0, (19.365, 24.083, 70.646)), ('B', ' 455 ', 'MET', 0.0017364534694004118, (12.461999999999998, 20.673, 55.468)), ('B', ' 456 ', 'LEU', 0.04658415558835668, (12.652, 24.26899999999999, 54.05700000000001)), ('B', ' 488 ', 'VAL', 0.0006660997405059924, (2.4250000000000034, 23.426, 63.841)), ('B', ' 496 ', 'THR', 0.008159601566148922, (-3.185999999999999, 33.623, 50.042)), ('B', ' 503 ', 'LEU', 0.07281271174441722, (12.403, 33.929, 55.422)), ('B', ' 529 ', 'LEU', 0.0784628650424487, (41.381, 19.084, 63.94200000000001)), ('B', ' 549 ', 'GLU', 0.23013098174736243, (49.504000000000005, 21.875, 64.39)), ('B', ' 553 ', 'LYS', 0.0, (46.013, 21.314, 58.941)), ('B', ' 557 ', 'MET', 0.014361620201341845, (42.916000000000004, 22.837999999999994, 52.98400000000001)), ('B', ' 560 ', 'LEU', 0.006531915529141035, (43.355, 25.298, 47.992)), ('B', ' 568 ', 'LEU', 0.15347566297721035, (39.05, 15.160999999999998, 47.678)), ('B', ' 585 ', 'LEU', 0.001691250309442222, (26.431, 12.171, 66.751)), ('B', ' 589 ', 'GLU', 0.038466383840398, (26.287, 11.616, 72.68900000000001)), ('B', ' 593 ', 'THR', 0.004888982307418098, (22.078000000000007, 9.629, 76.686)), ('E', ' 327 ', 'GLU', 0.16998821010068094, (18.046000000000014, -3.682, 141.052)), ('E', ' 329 ', 'PHE', 0.048593250618508596, (20.582000000000004, -1.364, 135.902)), ('E', ' 332 ', 'THR', 0.10938426181969238, (27.185000000000016, -5.363, 140.05)), ('E', ' 333 ', 'LYS', 0.0, (27.498, -8.162, 137.425)), ('E', ' 337 ', 'VAL', 0.003150532575091347, (24.368, -12.814, 126.10800000000002)), ('E', ' 359 ', 'THR', 0.2305003722083104, (23.518000000000004, 11.111000000000004, 128.683)), ('E', ' 369 ', 'VAL', 0.034651033953137664, (5.876000000000003, 4.408999999999999, 122.47900000000001)), ('E', ' 412 ', 'LEU', 0.0, (13.925000000000002, -9.763, 119.49)), ('E', ' 415 ', 'ASP', 0.1566860357107278, (6.658000000000001, -6.598999999999998, 115.459)), ('E', ' 416 ', 'PHE', 0.0017478780348831066, (5.880000000000008, -6.846999999999999, 119.184)), ('E', ' 417 ', 'MET', 0.013601881097584497, (8.135000000000005, -4.5779999999999985, 121.327)), ('E', ' 432 ', 'SER', 0.21289283220363714, (44.10800000000001, -3.173, 130.26)), ('E', ' 433 ', 'THR', 0.024147335484955977, (45.07200000000002, -6.834999999999998, 130.537)), ('E', ' 447 ', 'LYS', 0.0, (18.402000000000015, -19.605000000000008, 114.505)), ('E', ' 455 ', 'ILE', 0.05816805974204422, (22.207, -22.590999999999994, 127.62700000000001)), ('E', ' 467 ', 'CYS', 0.05492158234119415, (31.584000000000003, -34.661, 118.373)), ('E', ' 468 ', 'THR', 0.1500324662377719, (34.825, -35.298, 120.17200000000001)), ('E', ' 472 ', 'LEU', 0.014318771302576047, (38.66, -31.692, 112.823)), ('E', ' 480 ', 'ASP', 0.13758499431772792, (34.941, -15.463, 124.765)), ('E', ' 484 ', 'TYR', 0.028630477629757217, (40.295, -4.412, 126.69400000000002)), ('F', ' 329 ', 'PHE', 0.0, (63.51900000000001, 60.32899999999999, 45.816)), ('F', ' 333 ', 'LYS', 0.0, (56.41500000000003, 62.32800000000002, 39.766)), ('F', ' 337 ', 'VAL', 0.014193275354503853, (58.05900000000002, 50.286, 35.372)), ('F', ' 341 ', 'GLU', 0.016607681632396065, (63.876000000000005, 56.32699999999999, 33.709)), ('F', ' 343 ', 'LYS', 0.2957456832715602, (69.448, 59.293, 35.946)), ('F', ' 359 ', 'THR', 0.0741608662770396, (62.809999999999995, 54.319, 58.69400000000001)), ('F', ' 369 ', 'VAL', 0.003150532575091347, (77.816, 46.491, 50.89)), ('F', ' 372 ', 'THR', 0.016319203132297844, (81.53800000000001, 54.94399999999999, 51.797)), ('F', ' 388 ', 'VAL', 0.09852179213497014, (56.385, 52.519, 40.562)), ('F', ' 390 ', 'LYS', 0.0, (52.806, 47.275, 43.568)), ('F', ' 395 ', 'ARG', 0.1635107173375707, (60.398, 41.255, 45.567)), ('F', ' 412 ', 'LEU', 0.0, (68.634, 43.107, 37.297)), ('F', ' 415 ', 'ASP', 0.017719441945762655, (75.725, 39.204, 39.743)), ('F', ' 416 ', 'PHE', 0.04312234082028517, (76.526, 42.883, 39.052)), ('F', ' 417 ', 'MET', 0.02066745832829387, (74.819, 44.979, 41.781)), ('F', ' 426 ', 'ARG', 0.09522631908995675, (49.649, 54.928, 49.303)), ('F', ' 427 ', 'ASN', 0.19008903746558126, (48.81000000000003, 58.567, 50.056)), ('F', ' 455 ', 'ILE', 0.010715549368043599, (58.91800000000001, 51.032, 25.076)), ('F', ' 485 ', 'THR', 0.02991853980347514, (43.719, 53.684, 48.853))]
data['cbeta'] = [('B', ' 244 ', 'VAL', ' ', 0.3206152524704933, (12.591999999999999, 22.057999999999993, 73.764)), ('B', ' 281 ', 'LEU', ' ', 0.2872491574825978, (12.066, 28.897, 79.233)), ('B', ' 593 ', 'THR', ' ', 0.2706732031933963, (23.353000000000005, 8.801, 77.152)), ('F', ' 401 ', 'GLN', ' ', 0.3256025516687871, (63.62000000000001, 38.184, 40.585)), ('F', ' 404 ', 'VAL', ' ', 0.3128043906055671, (54.95500000000001, 39.518, 35.293))]
data['probe'] = [(' B 261  CYS  HB2', ' B 488  VAL HG22', -0.973, (2.495, 20.56, 65.55)), (' B  47  SER  HA ', ' B  62  MET  HG3', -0.933, (27.357, 48.479, 45.61)), (' A 524  GLN HE22', ' A 579  MET  HA ', -0.914, (49.31, 1.722, 87.24)), (' A  47  SER  HA ', ' A  62  MET  HG3', -0.903, (56.459, -6.448, 120.496)), (' E 425  THR HG21', ' E 495  ARG  HG3', -0.844, (27.809, -2.011, 130.849)), (' A  24  LEU HD22', ' E 473  ASN HD22', -0.808, (33.392, -30.489, 107.75)), (' A 457  GLU  OE2', ' A 460  ARG  NH1', -0.78, (64.767, -8.302, 95.39)), (' A 261  CYS  CB ', ' A 488  VAL HG22', -0.779, (79.991, 4.424, 86.29)), (' E 329  PHE  O  ', ' E 330  ASN  HB2', -0.771, (21.813, -0.087, 138.776)), (' A 414  THR HG21', ' A 542  CYS  O  ', -0.766, (49.046, 19.742, 94.689)), (' F 459  PRO  HB2', ' F 467  CYS  HB2', -0.752, (48.584, 43.748, 17.211)), (' B 407  ILE HD11', ' B 522  GLN  O  ', -0.747, (34.132, 20.884, 61.435)), (' A 261  CYS  HB2', ' A 488  VAL HG22', -0.727, (80.213, 4.124, 86.177)), (' A 493  HIS  HD2', ' A 499  ASP  OD1', -0.727, (80.74, -4.836, 94.932)), (' F 335  PRO  HG3', ' F 341  GLU  HG2', -0.725, (61.071, 57.17, 34.636)), (' A 490  PRO  HA ', ' A 612  PRO  HG2', -0.718, (85.134, 3.743, 90.406)), (' B  47  SER  HA ', ' B  62  MET  CG ', -0.711, (26.99, 47.596, 45.273)), (' F 329  PHE  O  ', ' F 330  ASN  HB2', -0.707, (64.068, 63.539, 46.053)), (' B 414  THR  O  ', ' B 418  LEU HD22', -0.706, (33.954, 28.527, 76.162)), (' E 404  VAL  H  ', ' E 407  ASP  HB2', -0.703, (22.943, -14.218, 114.078)), (' B 279  TYR  CE1', ' B 441  LYS  HB2', -0.701, (21.961, 25.764, 76.743)), (' B 546  ASN HD21', ' B 618  NDG  C1 ', -0.699, (47.395, 29.852, 74.955)), (' B 293  VAL HG22', ' B 366  MET  HG3', -0.694, (29.213, 33.873, 76.046)), (' B 456  LEU HD22', ' B 477  TRP  HH2', -0.691, (10.945, 27.364, 54.16)), (' A 229  THR  OG1', ' A 581  VAL  HB ', -0.688, (55.595, 2.339, 82.903)), (' A 430  GLU  HB3', ' A 435  GLU  OE2', -0.683, (54.239, 28.514, 90.263)), (' A  85  LEU HD22', ' A 101  GLN HE22', -0.681, (44.07, -23.294, 99.125)), (' A 229  THR HG23', ' A 516  TYR  OH ', -0.669, (58.074, -0.006, 84.366)), (' B 419  LYS  HD3', ' B 428  PHE  HB3', -0.667, (35.843, 28.452, 84.491)), (' A 324  THR HG23', ' A 383  MET  HE2', -0.657, (39.044, 5.518, 114.135)), (' B 320  LEU HD13', ' B 380  GLN  HG2', -0.653, (43.102, 31.618, 60.072)), (' A  85  LEU  H  ', ' A  85  LEU HD23', -0.651, (42.609, -25.665, 97.281)), (' F 408  TYR  CD2', ' F 444  ARG  HB3', -0.642, (58.247, 39.355, 28.03)), (' F 417  MET  HA ', ' F 417  MET  HE2', -0.639, (73.571, 45.837, 40.287)), (' A 230  PHE  HA ', ' A 233  ILE HD12', -0.636, (60.195, 2.411, 83.254)), (' B 273  ARG  HG3', ' B 452  PHE  CE1', -0.631, (15.538, 28.733, 59.383)), (' A 261  CYS  HB3', ' A 488  VAL HG22', -0.631, (79.082, 4.662, 86.153)), (' F 459  PRO  HB2', ' F 467  CYS  CB ', -0.628, (48.359, 43.276, 16.97)), (' A 225  ASP  O  ', ' A 229  THR HG22', -0.618, (56.372, -2.328, 83.077)), (' A 560  LEU  O  ', ' A 563  SER  HB3', -0.614, (38.068, -5.819, 99.964)), (' B 571  GLU  HA ', ' B 576  ALA  H  ', -0.613, (38.334, 12.253, 53.536)), (' E 416  PHE  CD1', ' E 416  PHE  N  ', -0.609, (5.836, -7.848, 117.184)), (' B 275  TRP  HB3', ' B 278  LEU HD12', -0.608, (14.055, 25.793, 70.883)), (' B 249  MET  HE1', ' B 258  PRO  HG3', -0.607, (1.163, 17.622, 77.654)), (' A 137  ASN HD21', ' A 139  GLN HE21', -0.606, (91.462, 9.034, 117.718)), (' A 543  ASP  OD1', ' A 545  SER  HB2', -0.606, (44.404, 19.535, 99.292)), (' B  54  ILE  O  ', ' B  54  ILE HG22', -0.603, (19.986, 54.262, 50.156)), (' E 469  PRO  HA ', ' E 471  ALA  N  ', -0.602, (38.604, -33.021, 118.098)), (' A 524  GLN  NE2', ' A 579  MET  HA ', -0.602, (49.38, 1.801, 86.994)), (' E 426  ARG  HD3', ' E 485  THR HG23', -0.599, (39.539, 1.086, 128.702)), (' A 417  HIS  CD2', ' A 421  ILE HD11', -0.598, (48.564, 22.167, 103.797)), (' B 455  MET  HE2', ' B 455  MET  O  ', -0.587, (10.225, 22.233, 53.689)), (' B 564  GLU  OE1', ' B 568  LEU HD12', -0.586, (41.94, 18.005, 45.05)), (' A 198  ASP  OD1', ' A 465  LYS  HG2', -0.585, (63.179, -18.359, 88.029)), (' B 226  VAL  O  ', ' B 229  THR HG22', -0.585, (21.507, 13.431, 55.029)), (' B 427  ASP  HB2', ' B 918  HOH  O  ', -0.583, (35.219, 30.016, 90.803)), (' A 455  MET  HE1', ' A 477  TRP  CZ3', -0.582, (72.271, -5.558, 91.798)), (' B 168  TRP  O  ', ' B 172  VAL HG22', -0.58, (5.15, 39.236, 56.186)), (' B 546  ASN  ND2', ' B 618  NDG  O1L', -0.579, (47.314, 29.596, 74.122)), (' B 557  MET  HE2', ' B 558  LEU HD12', -0.578, (39.712, 25.876, 54.624)), (' A 180  TYR  O  ', ' A 184  VAL HG23', -0.576, (72.028, -16.993, 99.053)), (' A 166  GLU  OE1', ' A 493  HIS  HE1', -0.576, (85.255, -1.932, 97.03)), (' A 187  LYS  HG2', ' A 199  TYR  CE2', -0.575, (63.457, -16.562, 99.511)), (' E 357  ASN  O  ', ' E 358  SER  HB2', -0.573, (18.631, 10.06, 132.538)), (' A 557  MET  HA ', ' A 560  LEU HD12', -0.572, (38.823, -0.615, 95.931)), (' A 560  LEU  O  ', ' A 563  SER  CB ', -0.572, (38.705, -6.216, 99.947)), (' B 183  TYR  OH ', ' B 509  ASP  OD1', -0.57, (15.325, 31.725, 43.638)), (' A 474  MET  HE1', ' A 499  ASP  HB2', -0.566, (77.574, -5.85, 94.961)), (' B 322  ASN  ND2', ' B 617  NDG  H1 ', -0.561, (49.24, 41.194, 64.408)), (' A 494  ASP  OD2', ' A 496  THR HG22', -0.559, (86.352, -9.706, 96.036)), (' A 320  LEU  HB3', ' A 321  PRO  HD2', -0.558, (37.77, 9.26, 106.037)), (' A 125  THR  O  ', ' A 129  THR  OG1', -0.557, (74.303, -6.831, 114.408)), (' A 440  LEU HD13', ' A 444  LEU HD22', -0.557, (67.725, 17.222, 92.64)), (' B 293  VAL  CG2', ' B 366  MET  HG3', -0.556, (29.302, 34.636, 75.908)), (' B  46  ALA  HB1', ' B  62  MET  HA ', -0.551, (28.594, 50.146, 43.181)), (' A 294  THR HG23', ' A 365  THR  HA ', -0.551, (60.677, 21.882, 110.658)), (' A 177  ARG  O  ', ' A 181  GLU  HG3', -0.547, (77.384, -16.488, 99.667)), (' B 175  GLN  O  ', ' B 178  PRO  HD2', -0.547, (2.727, 38.714, 46.06)), (' F 403  GLY  HA2', ' F 407  ASP  CG ', -0.543, (59.312, 36.842, 34.393)), (' B 554  LEU  HG ', ' B 558  LEU HD13', -0.543, (41.413, 25.817, 56.979)), (' B 322  ASN HD21', ' B 617  NDG  H1 ', -0.542, (49.315, 40.615, 64.888)), (' B 249  MET  HE3', ' B 256  ILE  O  ', -0.542, (1.281, 20.306, 76.416)), (' A 183  TYR  OH ', ' A 509  ASP  OD1', -0.538, (64.834, -13.488, 101.002)), (' B 457  GLU  HG2', ' B 512  PHE  HB3', -0.537, (17.47, 25.349, 52.025)), (' A 275  TRP  HB3', ' A 278  LEU HD12', -0.536, (71.496, 12.575, 93.074)), (' B 546  ASN  ND2', ' B 618  NDG  C1 ', -0.536, (47.35, 29.199, 74.78)), (' A  24  LEU HD22', ' E 473  ASN  ND2', -0.531, (34.057, -30.293, 108.114)), (' A 368  ASP  HA ', ' A 371  THR  HB ', -0.531, (57.211, 14.136, 109.055)), (' A 526  GLN  HA ', ' A 526  GLN  NE2', -0.528, (47.122, 12.291, 93.288)), (' F 335  PRO  HG3', ' F 341  GLU  CG ', -0.521, (60.924, 57.498, 34.821)), (' E 469  PRO  HA ', ' E 471  ALA  H  ', -0.521, (38.617, -33.257, 118.294)), (' A 503  LEU HD22', ' A 504  PHE  H  ', -0.518, (69.89, -1.771, 103.16)), (' E 329  PHE  O  ', ' E 330  ASN  CB ', -0.516, (21.915, -0.078, 138.536)), (' B 218  SER  H  ', ' B 221  GLN  NE2', -0.516, (27.142, 11.604, 42.61)), (' A 503  LEU HD22', ' A 504  PHE  N  ', -0.512, (69.239, -2.178, 102.971)), (' A 183  TYR  O  ', ' A 187  LYS  HB2', -0.511, (66.751, -18.877, 100.303)), (' B 166  GLU  OE1', ' B 493  HIS  HE1', -0.51, (-1.41, 33.586, 59.97)), (' A 349  TRP  HB3', ' A 351  LEU  CD1', -0.507, (49.102, -0.153, 116.197)), (' A 574  VAL HG23', ' A 576  ALA  H  ', -0.506, (42.309, 2.36, 86.039)), (' F 404  VAL  H  ', ' F 407  ASP  HB2', -0.505, (58.116, 38.276, 33.589)), (' B 296  ALA  O  ', ' B 300  GLN  HG3', -0.505, (31.521, 40.425, 81.751)), (' A 407  ILE HD11', ' A 522  GLN  O  ', -0.503, (49.335, 9.059, 93.466)), (' F 334  PHE  CD2', ' F 386  SER  HB3', -0.498, (60.715, 56.717, 40.25)), (' A  90  ASN  C  ', ' A  90  ASN HD22', -0.498, (33.419, -16.51, 96.879)), (' B 261  CYS  CB ', ' B 488  VAL HG22', -0.494, (3.466, 20.982, 65.818)), (' B 499  ASP  HB3', ' B 902   CL CL  ', -0.491, (5.681, 30.097, 56.869)), (' A 177  ARG  HB3', ' A 178  PRO  HD3', -0.488, (80.564, -14.285, 101.687)), (' B 294  THR HG23', ' B 365  THR  HA ', -0.488, (24.872, 38.993, 75.212)), (' E 459  PRO  HB2', ' E 467  CYS  HB3', -0.486, (31.662, -32.115, 119.501)), (' F 409  ASN HD21', ' F 441  ARG  H  ', -0.486, (55.373, 45.62, 31.845)), (' A 455  MET  C  ', ' A 455  MET  HE2', -0.486, (69.602, -4.852, 89.833)), (' B 540  HIS  HA ', ' B 587  TYR  CE1', -0.484, (32.126, 19.411, 70.86)), (' F 416  PHE  CD1', ' F 416  PHE  N  ', -0.483, (76.3, 41.334, 38.022)), (' A 557  MET  C  ', ' A 557  MET  SD ', -0.482, (40.808, 1.114, 97.515)), (' E 436  TYR  OH ', ' E 484  TYR  OH ', -0.48, (42.446, -10.789, 124.827)), (' A 417  HIS  HB2', ' A 543  ASP  OD2', -0.48, (47.341, 21.986, 99.369)), (' A 227  GLU  OE2', ' A 458  LYS  HE2', -0.48, (64.446, -8.034, 82.765)), (' B 455  MET  HE1', ' B 477  TRP  CE3', -0.479, (8.188, 24.139, 53.986)), (' F 332  THR HG23', ' F 333  LYS  HG3', -0.479, (57.119, 65.413, 39.367)), (' B 569  ALA  O  ', ' B 573  VAL HG23', -0.479, (40.079, 18.527, 52.825)), (' A 103  ASN  C  ', ' A 103  ASN HD22', -0.479, (54.405, -24.122, 105.266)), (' A 360  MET  SD ', ' A 371  THR HG22', -0.478, (55.286, 11.578, 110.882)), (' E 425  THR HG21', ' E 495  ARG  CG ', -0.477, (27.396, -2.521, 131.385)), (' B 401  HIS  CB ', ' B 904  HOH  O  ', -0.477, (30.701, 29.232, 52.628)), (' B 293  VAL HG11', ' B 418  LEU  HG ', -0.477, (31.699, 32.301, 77.942)), (' B 318  VAL  O  ', ' B 548  THR  HA ', -0.477, (48.871, 26.75, 64.6)), (' E 436  TYR  O  ', ' E 480  ASP  OD2', -0.475, (35.805, -15.22, 128.485)), (' E 436  TYR  HH ', ' E 484  TYR  HH ', -0.475, (42.756, -11.401, 124.352)), (' A 455  MET  HE1', ' A 477  TRP  CE3', -0.472, (72.511, -5.781, 91.411)), (' B 230  PHE  HA ', ' B 233  ILE HD12', -0.472, (20.193, 13.65, 59.203)), (' A 320  LEU  HB3', ' A 321  PRO  CD ', -0.471, (37.453, 9.217, 106.415)), (' B 379  ILE HG22', ' B 383  MET  HE3', -0.47, (40.885, 38.393, 57.051)), (' A 499  ASP  N  ', ' A 500  PRO  HD2', -0.469, (76.77, -7.604, 96.416)), (' B  33  ASN  O  ', ' B  37  GLN  HG3', -0.468, (42.132, 40.191, 37.731)), (' E 341  GLU  O  ', ' E 385  ASP  HA ', -0.468, (16.582, -10.184, 130.786)), (' A 271  TRP  CE2', ' A 503  LEU HD23', -0.468, (71.518, 0.302, 101.514)), (' F 373  LYS  HD3', ' F 375  ASN HD22', -0.468, (83.763, 55.185, 44.04)), (' B 227  GLU  OE2', ' B 458  LYS  HE2', -0.467, (13.309, 14.011, 50.362)), (' A 454  TYR  CE2', ' A 458  LYS  HD3', -0.466, (64.604, -6.462, 85.196)), (' A 499  ASP  HB3', ' A 902   CL CL  ', -0.466, (77.222, -3.493, 96.146)), (' A 284  PRO  HB3', ' A 594  TRP  CH2', -0.465, (67.79, 23.537, 86.811)), (' B 417  HIS  O  ', ' B 421  ILE HG13', -0.463, (37.84, 32.084, 76.733)), (' B 517  THR HG22', ' B 579  MET  HE1', -0.463, (25.746, 17.924, 52.022)), (' B 493  HIS  HD2', ' B 499  ASP  OD1', -0.459, (1.615, 30.247, 56.708)), (' F 415  ASP  O  ', ' F 416  PHE  C  ', -0.459, (75.081, 42.481, 40.169)), (' F 396  GLN  OE1', ' F 403  GLY  O  ', -0.456, (58.128, 39.815, 37.942)), (' A  98  GLN  HA ', ' A 101  GLN HE21', -0.454, (44.725, -21.359, 100.41)), (' A 489  GLU  HG2', ' A 613  TYR  HE2', -0.454, (84.597, -0.458, 89.766)), (' F 337  VAL  O  ', ' F 340  TRP  HD1', -0.453, (60.598, 49.988, 33.312)), (' B 198  ASP  OD1', ' B 465  LYS  HG2', -0.453, (12.846, 18.83, 39.737)), (' B 546  ASN  ND2', ' B 618  NDG  H1 ', -0.452, (47.327, 28.782, 75.037)), (' F 469  PRO  HG3', ' F 476  TRP  NE1', -0.452, (44.182, 47.403, 20.335)), (' B 306  ARG  O  ', ' B 310  GLU  HB2', -0.452, (37.717, 40.751, 72.002)), (' A 472  GLN  O  ', ' A 476  LYS  HB2', -0.451, (77.389, -12.046, 87.893)), (' A 199  TYR  O  ', ' A 202  TYR  HB3', -0.45, (59.618, -16.288, 95.616)), (' B 472  GLN  HG2', ' B 475  LYS  HE3', -0.448, (-3.326, 20.772, 48.597)), (' E 329  PHE  H  ', ' E 329  PHE  HD2', -0.448, (17.866, -1.298, 136.113)), (' F 334  PHE  CD1', ' F 495  ARG  HD3', -0.447, (58.297, 58.552, 42.944)), (' A  38  GLU  OE2', ' A 353  LYS  NZ ', -0.447, (38.798, -10.013, 120.169)), (' A 597  ASP  O  ', ' A 600  LYS  HB2', -0.447, (70.285, 22.544, 75.845)), (' E 403  GLY  HA2', ' E 406  ALA  HB3', -0.447, (21.477, -11.437, 114.277)), (' F 439  LYS  HD3', ' F 480  ASP  OD1', -0.446, (47.765, 51.697, 31.904)), (' B 524  GLN HE22', ' B 579  MET  HA ', -0.445, (30.852, 15.339, 55.448)), (' B 187  LYS  HG2', ' B 199  TYR  CE2', -0.445, (15.763, 30.131, 40.59)), (' F 363  THR  HB ', ' F 422  ALA  HB3', -0.445, (61.623, 48.649, 48.671)), (' A 439  LEU  HA ', ' A 439  LEU HD12', -0.445, (59.28, 18.311, 91.404)), (' B 456  LEU HD22', ' B 477  TRP  CH2', -0.444, (10.667, 26.817, 54.146)), (' F 325  PHE  C  ', ' F 327  GLU  H  ', -0.443, (67.926, 63.694, 44.974)), (' E 403  GLY  HA3', ' E 407  ASP  CG ', -0.442, (21.908, -13.362, 112.914)), (' B  85  LEU HD22', ' B 101  GLN HE22', -0.441, (35.236, 24.388, 27.433)), (' B  47  SER  O  ', ' B  51  ASN  OD1', -0.44, (26.824, 47.209, 49.306)), (' B 485  VAL HG12', ' B 487  VAL HG23', -0.439, (9.723, 21.793, 63.601)), (' B 499  ASP  N  ', ' B 500  PRO  HD2', -0.439, (5.018, 30.33, 52.516)), (' B 459  TRP  O  ', ' B 463  VAL HG23', -0.439, (8.357, 23.135, 46.966)), (' E 324  PRO  HD3', ' E 348  CYS  SG ', -0.437, (8.492, -1.871, 140.456)), (' B 584  LEU  C  ', ' B 584  LEU HD23', -0.437, (26.036, 14.999, 66.142)), (' B 320  LEU  HB3', ' B 380  GLN  OE1', -0.437, (44.597, 33.35, 59.695)), (' B 418  LEU  HB2', ' B 424  LEU HD22', -0.435, (33.175, 29.826, 79.909)), (' B  85  LEU  HA ', ' B  88  ILE HD12', -0.435, (40.46, 23.424, 27.372)), (' A  24  LEU HD23', ' E 462  PRO  HG2', -0.435, (30.943, -29.031, 108.188)), (' B  83  TYR  HA ', ' B  84  PRO  HD2', -0.435, (39.089, 26.85, 22.081)), (' A 261  CYS  HB2', ' A 488  VAL  CG2', -0.432, (80.448, 4.111, 86.049)), (' B 453  THR HG23', ' B 512  PHE  CD1', -0.432, (18.317, 25.238, 55.436)), (' B 401  HIS  HB3', ' B 904  HOH  O  ', -0.431, (30.62, 29.519, 53.083)), (' A 273  ARG  O  ', ' A 449  THR  OG1', -0.431, (65.883, 4.998, 95.389)), (' A 455  MET  SD ', ' A 481  LYS  HG2', -0.43, (72.685, -2.562, 89.823)), (' A 188  ASN  O  ', ' A 192  ARG  HG3', -0.43, (62.666, -23.952, 94.903)), (' B 322  ASN HD21', ' B 617  NDG  C1 ', -0.428, (49.553, 40.869, 65.448)), (' A 482  ARG  HG2', ' A 488  VAL HG13', -0.427, (80.142, 1.242, 85.533)), (' B 166  GLU  OE1', ' B 493  HIS  CE1', -0.427, (-1.086, 33.03, 59.779)), (' A 540  HIS  HA ', ' A 587  TYR  CE1', -0.426, (52.864, 16.77, 91.097)), (' B 119  ILE HG21', ' B 183  TYR  HB2', -0.425, (9.975, 35.833, 41.356)), (' A 417  HIS  O  ', ' A 421  ILE HG13', -0.424, (47.577, 24.543, 103.97)), (' B 408  MET  HE1', ' B 554  LEU HD21', -0.424, (39.672, 27.145, 60.414)), (' F 367  TYR  HB2', ' F 417  MET  HB3', -0.423, (73.532, 43.859, 44.043)), (' B 238  GLU  O  ', ' B 241  HIS  HB3', -0.423, (11.919, 15.279, 70.169)), (' A 520  LEU  O  ', ' A 524  GLN  HG3', -0.423, (50.61, 4.771, 89.213)), (' A 144  LEU HD22', ' A 168  TRP  CZ2', -0.423, (74.667, -0.742, 106.69)), (' A 169  ARG  O  ', ' A 173  GLY  HA3', -0.423, (80.672, -6.544, 101.776)), (' B  69  TRP  CE2', ' B  73  LEU HD11', -0.423, (31.887, 39.155, 37.396)), (' B 115  ARG  O  ', ' B 119  ILE HG12', -0.422, (10.376, 39.873, 37.488)), (' A 311  ALA  O  ', ' A 314  PHE  HB3', -0.421, (44.469, 15.939, 107.326)), (' B 514  ARG  HG2', ' B 515  TYR  N  ', -0.421, (23.502, 26.567, 54.039)), (' A 456  LEU HD22', ' A 477  TRP  HH2', -0.42, (70.485, -4.689, 94.62)), (' A 442  GLN  HA ', ' A 442  GLN HE21', -0.419, (60.92, 15.136, 95.157)), (' A 225  ASP  O  ', ' A 229  THR  CG2', -0.419, (55.848, -1.54, 83.711)), (' B 290  ASN  ND2', ' B 292  ASP  H  ', -0.419, (24.601, 30.711, 80.656)), (' A 555  PHE  HA ', ' A 558  LEU  HB2', -0.418, (38.783, 4.754, 100.104)), (' B 410  LEU  HA ', ' B 410  LEU HD12', -0.418, (31.224, 24.983, 68.537)), (' A 417  HIS  HD2', ' A 421  ILE HD11', -0.418, (48.887, 21.879, 103.912)), (' B 248  LEU HD21', ' B 278  LEU HD22', -0.417, (10.898, 27.643, 73.618)), (' B 305  GLN  O  ', ' B 309  LYS  HB2', -0.417, (39.025, 44.051, 69.469)), (' B 407  ILE  HA ', ' B 407  ILE HD13', -0.416, (33.832, 23.882, 63.681)), (' E 372  THR HG22', ' E 374  LEU HD12', -0.415, (3.253, 6.36, 134.121)), (' A 491  VAL HG13', ' A 492  PRO  HD2', -0.414, (88.807, -1.809, 93.581)), (' B 229  THR HG23', ' B 516  TYR  OH ', -0.413, (21.536, 14.578, 57.086)), (' A 505  HIS  CD2', ' A 505  HIS  H  ', -0.413, (66.768, -3.302, 102.173)), (' A 349  TRP  HB3', ' A 351  LEU HD12', -0.413, (49.064, -0.203, 116.136)), (' E 329  PHE  CD2', ' E 329  PHE  N  ', -0.412, (18.8, -1.788, 135.508)), (' A 514  ARG  HG2', ' A 515  TYR  N  ', -0.412, (58.509, -1.645, 96.851)), (' F 369  VAL  O  ', ' F 370  SER  HB2', -0.412, (75.592, 47.872, 53.085)), (' E 404  VAL  H  ', ' E 407  ASP  CB ', -0.411, (22.566, -14.586, 114.157)), (' A  85  LEU  N  ', ' A  85  LEU HD23', -0.411, (42.167, -25.345, 97.985)), (' A 320  LEU HD13', ' A 380  GLN  HG2', -0.41, (40.787, 8.926, 105.048)), (' B 239  HIS  O  ', ' B 240  LEU  C  ', -0.41, (13.946, 16.839, 72.531)), (' B 412  ALA  HA ', ' B 417  HIS  CD2', -0.409, (36.653, 30.434, 72.686)), (' F 404  VAL  N  ', ' F 407  ASP  HB2', -0.408, (58.003, 38.537, 34.19)), (' B 489  GLU  HG2', ' B 613  TYR  HE2', -0.408, (-2.62, 25.84, 62.273)), (' B 212  VAL  HB ', ' B 215  TYR  HB2', -0.407, (37.697, 12.678, 41.871)), (' F 422  ALA  HB2', ' F 496  VAL HG22', -0.407, (60.822, 49.714, 45.75)), (' A 560  LEU  O  ', ' A 563  SER  HB2', -0.405, (38.405, -6.287, 100.697)), (' E 408  TYR  CD2', ' E 444  ARG  HB3', -0.405, (22.863, -20.977, 116.061)), (' A 489  GLU  HG2', ' A 489  GLU  O  ', -0.403, (83.964, 0.512, 90.154)), (' B  85  LEU  H  ', ' B  85  LEU HD23', -0.402, (36.217, 22.764, 26.035)), (' B  54  ILE HG13', ' B 341  LYS  O  ', -0.402, (22.459, 52.193, 54.228)), (' A 212  VAL  O  ', ' A 213  ASP  HB2', -0.402, (36.446, -12.358, 84.499)), (' B 167  SER  O  ', ' B 171  GLU  HG2', -0.402, (1.614, 40.983, 58.845)), (' F 472  LEU  O  ', ' F 473  ASN  HB2', -0.401, (43.329, 35.787, 18.209)), (' A 454  TYR  OH ', ' A 458  LYS  HD3', -0.401, (64.85, -6.555, 84.499)), (' A 493  HIS  CD2', ' A 499  ASP  OD1', -0.4, (81.332, -5.088, 95.182)), (' E 339  ALA  HA ', ' E 455  ILE HD11', -0.4, (21.482, -18.646, 129.127)), (' A 455  MET  HE2', ' A 455  MET  O  ', -0.4, (69.145, -5.385, 90.05)), (' B 388  GLN  OE1', ' B 389  PRO  HD2', -0.4, (44.714, 29.032, 42.322))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)

# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('A', '  21 ', 'ILE', 0.005077794978563156, (90.02799999999999, 65.874, 44.232000000000006)), ('A', '  90 ', 'ASN', 0.011017418763544937, (80.016, 66.553, 49.322)), ('A', ' 339 ', 'VAL', 0.00512602, (53.26800000000001, 82.787, 6.98))]
data['omega'] = [('A', ' 146 ', 'PRO', None, (47.11899999999999, 61.033999999999985, 10.977000000000002))]
data['rota'] = [('A', '  21 ', 'ILE', 0.03431263838877569, (90.02799999999999, 65.874, 44.232000000000006)), ('A', '  29 ', 'LEU', 0.0, (81.902, 72.07799999999997, 38.28900000000001)), ('A', '  85 ', 'LEU', 0.10680675838003906, (83.48599999999998, 59.29799999999998, 42.55900000000001)), ('A', '  87 ', 'GLU', 0.043770304176819264, (87.107, 60.04399999999998, 46.682000000000016)), ('A', ' 107 ', 'VAL', 0.27489398676408716, (80.83199999999998, 53.12700000000001, 26.010000000000005)), ('A', ' 126 ', 'ILE', 0.019322762220403442, (58.982000000000006, 53.159, 10.047)), ('A', ' 136 ', 'ASP', 0.008810398983923976, (39.373, 46.794, -1.297)), ('A', ' 148 ', 'LEU', 0.0001326421607203659, (44.348999999999975, 54.808, 11.970000000000004)), ('A', ' 176 ', 'LEU', 0.0, (60.1, 46.30599999999999, 13.839)), ('A', ' 186 ', 'LEU', 0.0, (73.01499999999997, 46.45599999999999, 21.842)), ('A', ' 187 ', 'LYS', 0.03594588012824183, (71.23099999999997, 48.25300000000001, 24.668)), ('A', ' 190 ', 'MET', 0.00016935549128826633, (75.639, 49.51, 26.689)), ('A', ' 209 ', 'VAL', 0.06061719857864421, (69.361, 57.384, 45.71700000000001)), ('A', ' 233 ', 'ILE', 0.0026840160990299045, (44.62399999999998, 49.12399999999998, 42.63500000000001)), ('A', ' 240 ', 'LEU', 0.08725065339977268, (35.93899999999998, 49.447999999999986, 36.233000000000004)), ('A', ' 244 ', 'VAL', 0.07854752236225962, (32.89499999999999, 48.921, 30.85000000000001)), ('A', ' 245 ', 'ARG', 0.0, (32.95999999999999, 45.307, 29.64000000000001)), ('A', ' 278 ', 'LEU', 0.00340986500748863, (35.02499999999998, 54.82100000000001, 25.576)), ('A', ' 281 ', 'LEU', 0.020435312726456812, (29.660999999999976, 54.145, 25.171000000000006)), ('A', ' 287 ', 'GLN', 0.0, (21.354999999999997, 63.033, 30.044000000000008)), ('A', ' 309 ', 'LYS', 0.08643494105473795, (46.42499999999998, 86.03099999999998, 33.399000000000015)), ('A', ' 333 ', 'LEU', 0.057105508681818684, (50.56399999999999, 82.589, 23.570000000000007)), ('A', ' 338 ', 'ASN', 0.0351187429688324, (49.71699999999999, 81.945, 8.094000000000003)), ('A', ' 341 ', 'LYS', 0.0, (54.25500000000001, 78.43, 10.741)), ('A', ' 343 ', 'VAL', 0.13261125320365347, (54.73499999999999, 73.85499999999999, 16.16100000000001)), ('A', ' 385 ', 'TYR', 0.08316334790767016, (64.58099999999999, 75.79299999999998, 41.446)), ('A', ' 392 ', 'LEU', 0.00346684252594675, (70.26099999999998, 70.01899999999998, 39.597000000000016)), ('A', ' 397 ', 'ASN', 0.022319318516763997, (62.733999999999995, 62.35399999999999, 39.55)), ('A', ' 401 ', 'HIS', 0.08387181273782286, (57.138999999999974, 67.66199999999998, 36.75400000000001)), ('A', ' 410 ', 'LEU', 0.21092056504765028, (42.61999999999998, 69.29599999999998, 38.842000000000006)), ('A', ' 421 ', 'ILE', 0.07332218768885759, (36.039, 82.80099999999997, 38.551)), ('A', ' 435 ', 'GLU', 0.03355295851409823, (29.852999999999987, 63.50799999999998, 40.03600000000001)), ('A', ' 436 ', 'ILE', 0.13687556104140608, (29.93999999999999, 59.83099999999999, 39.04600000000001)), ('A', ' 439 ', 'LEU', 0.0, (34.845, 60.34299999999999, 38.139)), ('A', ' 444 ', 'LEU', 0.0, (38.80499999999998, 55.80699999999998, 31.959000000000003)), ('A', ' 455 ', 'MET', 0.1302598009173015, (52.241, 45.496999999999986, 32.22000000000001)), ('A', ' 456 ', 'LEU', 0.009596416376983375, (54.098, 47.079000000000015, 29.292)), ('A', ' 476 ', 'LYS', 0.06388392891641842, (54.455999999999996, 36.149, 26.959000000000003)), ('A', ' 479 ', 'GLU', 0.18051335902313495, (49.76899999999997, 35.983, 28.255000000000003)), ('A', ' 488 ', 'VAL', 0.016198527795901734, (42.89999999999999, 39.783, 24.624000000000006)), ('A', ' 496 ', 'THR', 0.024943108021170973, (56.89, 37.19499999999999, 13.660000000000004)), ('A', ' 503 ', 'LEU', 0.00028916173874970384, (53.60699999999998, 51.725999999999985, 20.43700000000001)), ('A', ' 518 ', 'ARG', 0.054016089726681066, (53.58899999999999, 60.328, 38.214)), ('A', ' 529 ', 'LEU', 0.003291926070959656, (47.834999999999994, 70.151, 49.410000000000004)), ('A', ' 534 ', 'LYS', 0.0, (41.46500000000001, 72.525, 54.964)), ('A', ' 558 ', 'LEU', 0.07931982396760054, (59.67199999999999, 72.68099999999997, 44.183)), ('A', ' 560 ', 'LEU', 0.0, (64.76099999999998, 71.621, 45.64100000000001)), ('A', ' 562 ', 'LYS', 0.0, (66.94099999999997, 67.49499999999998, 42.01700000000002)), ('A', ' 570 ', 'LEU', 0.0024225556870763674, (58.091, 63.81199999999998, 48.32700000000001)), ('A', ' 585 ', 'LEU', 0.0, (41.98699999999999, 55.35199999999999, 45.734)), ('A', ' 595 ', 'LEU', 0.0, (30.811999999999983, 50.595, 40.618))]
data['cbeta'] = []
data['probe'] = [(' A 293  VAL HG11', ' A 423  LEU  HB3', -1.02, (34.035, 80.159, 32.438)), (' A  54  ILE  HB ', ' A 341  LYS  HG3', -0.934, (57.896, 77.1, 9.65)), (' A 246  ALA  HA ', ' A 249  MET  HE2', -0.906, (29.362, 43.177, 29.607)), (' A 293  VAL HG13', ' A 296  ALA  HB3', -0.891, (31.994, 78.996, 30.811)), (' A  97  LEU  HG ', ' A 101  GLN HE21', -0.864, (82.053, 62.536, 38.219)), (' A 246  ALA  HA ', ' A 249  MET  CE ', -0.85, (28.9, 43.476, 28.93)), (' A 493  HIS  HD2', ' A 499  ASP  OD1', -0.848, (50.69, 41.548, 17.859)), (' A 285  PHE  HB3', ' A 287  GLN HE22', -0.831, (22.902, 60.67, 33.467)), (' A  21  ILE  H  ', ' A  21  ILE HD13', -0.797, (91.024, 65.347, 45.604)), (' A  60  GLN  HA ', ' A  63  ASN HD21', -0.794, (70.226, 73.29, 10.724)), (' A 125  THR  O  ', ' A 129  THR HG22', -0.777, (58.81, 55.882, 8.54)), (' A 552  GLN HE21', ' A 556  ASN HD21', -0.774, (58.593, 76.313, 52.297)), (' A 336  PRO  HB2', ' A 340  GLN  HB3', -0.768, (53.346, 82.939, 12.66)), (' A 229  THR HG23', ' A 516  TYR  OH ', -0.765, (51.945, 50.487, 41.832)), (' A  91  LEU  H  ', ' A  91  LEU HD12', -0.764, (78.241, 64.288, 50.347)), (' A 320  LEU HD13', ' A 380  GLN  HG2', -0.762, (53.183, 77.703, 41.515)), (' A 474  MET  HE1', ' A 499  ASP  HB2', -0.755, (52.936, 41.77, 20.192)), (' A 221  GLN  HG3', ' A 917  HOH  O  ', -0.748, (61.328, 48.259, 47.916)), (' A 407  ILE HD11', ' A 522  GLN  O  ', -0.744, (48.2, 65.271, 42.012)), (' A  84  PRO  HB2', ' A  87  GLU  HB2', -0.744, (87.647, 59.945, 44.33)), (' A 292  ASP  OD2', ' A 294  THR HG22', -0.738, (33.508, 73.736, 26.693)), (' A 546  ASN  OD1', ' A 802  NAG  H2 ', -0.733, (39.856, 82.493, 47.401)), (' A 394  ASN HD22', ' A 395  GLY  H  ', -0.732, (63.075, 68.331, 36.143)), (' A  90  ASN  O  ', ' A  93  VAL HG22', -0.729, (79.325, 66.341, 46.254)), (' A 117  ASN  HB3', ' A 865  HOH  O  ', -0.728, (72.281, 57.024, 14.16)), (' A  23  GLU  O  ', ' A  27  THR HG23', -0.722, (88.46, 72.955, 43.056)), (' A 397  ASN  C  ', ' A 397  ASN HD22', -0.718, (60.824, 61.298, 38.74)), (' A 424  LEU HD12', ' A 934  HOH  O  ', -0.709, (28.174, 77.203, 33.69)), (' A 287  GLN  H  ', ' A 287  GLN  NE2', -0.704, (21.556, 61.571, 30.99)), (' A 190  MET  HE2', ' A 191  ALA  HA ', -0.7, (74.453, 50.235, 29.884)), (' C 916  UNK  O  ', ' C 918  UNK  N  ', -0.695, (37.841, 40.216, 6.952)), (' A  55  THR  HB ', ' A  58  ASN  HB2', -0.69, (64.268, 79.391, 10.468)), (' A 552  GLN HE21', ' A 556  ASN  ND2', -0.689, (58.295, 76.109, 51.565)), (' A 293  VAL  CG1', ' A 296  ALA  HB3', -0.675, (32.454, 79.332, 30.321)), (' A 335  ASP  HB2', ' A 361  CYS  HB3', -0.674, (48.437, 78.348, 17.478)), (' A 293  VAL  O  ', ' A 293  VAL HG12', -0.674, (33.491, 79.12, 29.215)), (' A 225  ASP  O  ', ' A 229  THR HG22', -0.667, (53.71, 49.532, 43.434)), (' A 552  GLN  NE2', ' A 556  ASN HD21', -0.664, (58.297, 76.692, 51.726)), (' A 287  GLN  CD ', ' A 287  GLN  H  ', -0.664, (21.52, 61.249, 30.704)), (' A  51  ASN HD22', ' A 343  VAL HG21', -0.661, (57.993, 73.327, 18.1)), (' A  97  LEU  HG ', ' A 101  GLN  NE2', -0.659, (82.572, 62.556, 38.391)), (' A 240  LEU  O  ', ' A 244  VAL HG13', -0.659, (34.813, 49.337, 32.793)), (' A 494  ASP  OD2', ' A 496  THR  HB ', -0.658, (54.794, 35.932, 12.987)), (' A 166  GLU  OE1', ' A 493  HIS  HE1', -0.658, (46.809, 40.167, 14.054)), (' A  60  GLN  HA ', ' A  63  ASN  ND2', -0.657, (69.769, 73.334, 10.476)), (' A 389  PRO  HG2', ' A 392  LEU HD22', -0.648, (73.513, 71.063, 41.479)), (' A 261  CYS  HB2', ' A 488  VAL HG22', -0.644, (40.238, 38.886, 26.174)), (' A 336  PRO  HB2', ' A 340  GLN  CB ', -0.643, (52.73, 83.219, 12.295)), (' A 545  SER  O  ', ' A 546  ASN  HB2', -0.641, (41.827, 79.926, 48.134)), (' A 557  MET  HG2', ' A 573  VAL HG21', -0.635, (56.087, 69.042, 47.124)), (' C 923  UNK  O  ', ' C 924  UNK  C  ', -0.634, (35.239, 23.362, 7.941)), (' A 306  ARG  HG2', ' A 306  ARG HH11', -0.634, (39.295, 87.491, 30.39)), (' A 457  GLU  HG2', ' A 512  PHE  HB3', -0.633, (56.647, 51.436, 30.255)), (' A 209  VAL  C  ', ' A 210  ASN HD22', -0.633, (70.59, 55.638, 46.561)), (' A 223  ILE  O  ', ' A 227  GLU  HG3', -0.633, (56.988, 46.076, 41.008)), (' A 285  PHE  CE1', ' A 433  GLU  HG2', -0.632, (24.204, 59.355, 37.422)), (' A 526  GLN  HA ', ' A 526  GLN HE21', -0.63, (47.206, 68.157, 45.096)), (' A 177  ARG  HB3', ' A 178  PRO  HD3', -0.622, (60.368, 41.37, 13.108)), (' A 397  ASN  ND2', ' A 399  GLY  H  ', -0.621, (59.805, 60.778, 38.338)), (' A  21  ILE  CD1', ' A  21  ILE  H  ', -0.621, (91.193, 64.647, 45.483)), (' A  56  GLU  O  ', ' A  59  VAL HG12', -0.621, (67.096, 74.971, 8.292)), (' A  21  ILE  N  ', ' A  21  ILE HD13', -0.618, (90.509, 65.568, 45.991)), (' A 456  LEU HD21', ' A 503  LEU HD12', -0.617, (53.779, 50.51, 24.777)), (' A 397  ASN HD22', ' A 399  GLY  H  ', -0.617, (60.007, 61.263, 38.888)), (' A 562  LYS  HG2', ' A1093  HOH  O  ', -0.615, (66.74, 64.124, 42.12)), (' A  55  THR HG22', ' A  57  GLU  H  ', -0.614, (65.092, 79.201, 7.499)), (' A 365  THR HG22', ' A 366  MET  N  ', -0.613, (38.125, 74.754, 25.875)), (' A 557  MET  HA ', ' A 560  LEU HD22', -0.611, (61.258, 70.579, 47.926)), (' A 331  SER  HB3', ' A 333  LEU HD13', -0.61, (53.174, 83.485, 25.653)), (' A 338  ASN  N  ', ' A 338  ASN HD22', -0.608, (48.964, 83.631, 8.542)), (' A 245  ARG  HB2', ' A 262  LEU HD21', -0.608, (34.443, 44.04, 29.107)), (' A 190  MET  HE1', ' A 202  TYR  CE1', -0.606, (73.345, 53.205, 30.29)), (' A 455  MET  HE1', ' A 477  TRP  CE3', -0.602, (52.909, 43.16, 26.55)), (' A 296  ALA  O  ', ' A 300  GLN  HG3', -0.599, (32.047, 84.028, 29.156)), (' A 394  ASN  ND2', ' A 395  GLY  H  ', -0.598, (62.831, 67.914, 36.004)), (' A 570  LEU HD22', ' A 574  VAL HG22', -0.598, (54.852, 62.71, 49.083)), (' B 901  UNK  HA ', ' C 910  UNK  O  ', -0.598, (40.226, 27.247, 13.365)), (' A  21  ILE  HA ', ' A  24  GLN HE21', -0.596, (90.748, 66.844, 43.592)), (' A  97  LEU  O  ', ' A 101  GLN  HG2', -0.595, (79.62, 62.234, 36.882)), (' A 209  VAL HG21', ' A 565  PRO  HB3', -0.591, (67.246, 60.051, 47.889)), (' A  91  LEU  CD1', ' A  91  LEU  H  ', -0.587, (77.427, 64.249, 50.121)), (' A  91  LEU  N  ', ' A  91  LEU HD12', -0.585, (78.167, 64.373, 49.552)), (' A 323  MET  HA ', ' A 323  MET  HE2', -0.584, (55.03, 83.797, 35.991)), (' C 288  HOH  O  ', ' C 920  UNK  HA ', -0.583, (34.128, 34.735, 6.094)), (' A  82  MET  O  ', ' A  84  PRO  HD3', -0.579, (89.512, 61.325, 39.162)), (' A 403  ALA  O  ', ' A 407  ILE HG12', -0.573, (50.25, 67.068, 39.782)), (' A  85  LEU  N  ', ' A  85  LEU HD23', -0.566, (84.504, 58.174, 41.639)), (' A  82  MET  HE2', ' A  83  TYR  CZ ', -0.565, (89.537, 66.906, 37.811)), (' A 122  THR  O  ', ' A 126  ILE HG23', -0.565, (62.076, 52.768, 10.817)), (' A 365  THR HG22', ' A 367  ASP  H  ', -0.562, (38.337, 73.41, 26.535)), (' A 420  SER  OG ', ' A 802  NAG  H83', -0.561, (37.024, 81.676, 44.34)), (' A 285  PHE  CZ ', ' A 433  GLU  HG2', -0.558, (23.287, 59.177, 37.871)), (' A 166  GLU  OE1', ' A 493  HIS  CE1', -0.558, (47.529, 40.452, 14.582)), (' A 121  ASN  O  ', ' A 125  THR HG23', -0.556, (64.283, 56.345, 11.524)), (' A 338  ASN  H  ', ' A 338  ASN  ND2', -0.555, (48.522, 83.084, 8.686)), (' A 229  THR  OG1', ' A 581  VAL  HB ', -0.553, (50.038, 52.489, 44.595)), (' A  20  THR  C  ', ' A  22  GLU  H  ', -0.552, (90.038, 67.748, 45.475)), (' A 281  LEU  N  ', ' A 281  LEU HD12', -0.551, (30.851, 55.296, 24.286)), (' A  22  GLU  O  ', ' A  26  LYS  HG3', -0.55, (85.417, 70.321, 45.042)), (' A  51  ASN HD22', ' A 343  VAL  CG2', -0.55, (57.443, 73.231, 18.076)), (' A 126  ILE HG12', ' A 176  LEU  CD1', -0.55, (60.094, 49.608, 12.512)), (' A  75  GLU  O  ', ' A  79  LEU  HB2', -0.549, (85.723, 66.345, 28.889)), (' A 209  VAL  O  ', ' A 210  ASN  ND2', -0.548, (70.602, 55.055, 46.553)), (' A 394  ASN HD22', ' A 395  GLY  N  ', -0.545, (63.339, 68.103, 36.867)), (' A 568  LEU  O  ', ' A 568  LEU HD23', -0.543, (62.204, 66.256, 50.965)), (' A 281  LEU  H  ', ' A 281  LEU HD12', -0.541, (31.262, 55.283, 24.584)), (' A 338  ASN  H  ', ' A 338  ASN HD22', -0.54, (48.628, 83.324, 9.104)), (' A  85  LEU  CD2', ' A  85  LEU  H  ', -0.539, (84.52, 58.19, 40.841)), (' A  55  THR HG22', ' A  56  GLU  N  ', -0.538, (64.495, 79.146, 7.569)), (' A  21  ILE  CA ', ' A  24  GLN HE21', -0.537, (91.087, 66.278, 43.814)), (' A 524  GLN HE22', ' A 579  MET  HA ', -0.536, (53.652, 57.574, 46.037)), (' A 380  GLN  NE2', ' A 912  HOH  O  ', -0.536, (53.389, 81.171, 39.657)), (' A  55  THR  CG2', ' A  56  GLU  N  ', -0.534, (63.793, 79.274, 7.322)), (' A 168  TRP  O  ', ' A 172  VAL HG22', -0.534, (52.03, 47.952, 11.866)), (' A 524  GLN  NE2', ' A 580  ASN  H  ', -0.532, (52.753, 57.072, 46.586)), (' A 557  MET  HG2', ' A 573  VAL  CG2', -0.532, (56.263, 69.148, 47.335)), (' A 199  TYR  O  ', ' A 202  TYR  HB3', -0.53, (68.717, 50.791, 31.396)), (' A 591  LEU  HG ', ' A 595  LEU HD22', -0.53, (34.172, 53.356, 39.409)), (' A 241  HIS  O  ', ' A 245  ARG  HB3', -0.529, (34.513, 45.406, 31.701)), (' A 174  LYS  HE2', ' A 496  THR HG22', -0.527, (54.305, 38.412, 11.789)), (' A 190  MET  HE3', ' A 194  ASN  ND2', -0.526, (75.868, 52.723, 29.06)), (' A  24  GLN  HG3', ' A  83  TYR  HE2', -0.518, (89.421, 67.947, 40.206)), (' A 435  GLU  HG3', ' A 540  HIS  NE2', -0.516, (32.141, 64.252, 42.073)), (' A 306  ARG  HG2', ' A 306  ARG  NH1', -0.515, (38.701, 87.237, 31.096)), (' A 245  ARG  HG2', ' A 245  ARG HH21', -0.513, (32.697, 42.263, 31.997)), (' A 615  ASP  OXT', ' B 901  UNK  N  ', -0.511, (36.511, 28.48, 15.208)), (' A 419  LYS  HD3', ' A1073  HOH  O  ', -0.509, (28.615, 76.145, 40.496)), (' A  89  GLN  O  ', ' A  91  LEU HD12', -0.509, (79.05, 63.654, 50.259)), (' A 440  LEU HD13', ' A 444  LEU HD22', -0.509, (34.172, 56.841, 31.947)), (' A 482  ARG  HG2', ' A 488  VAL  CG1', -0.509, (43.438, 37.315, 26.125)), (' A 505  HIS  CD2', ' A 505  HIS  H  ', -0.506, (55.43, 55.276, 23.029)), (' A 605  GLY  O  ', ' A 915  HOH  O  ', -0.506, (35.057, 40.02, 34.383)), (' A 457  GLU  OE2', ' A 460  ARG  HD3', -0.504, (59.224, 49.62, 29.487)), (' A  84  PRO  O  ', ' A  88  ILE HG12', -0.504, (84.802, 61.3, 43.779)), (' A 165  TRP  CZ3', ' A 490  PRO  HD2', -0.503, (44.573, 41.942, 17.606)), (' A 331  SER  HB3', ' A 333  LEU  CD1', -0.502, (53.158, 82.822, 25.873)), (' A  21  ILE  HA ', ' A  24  GLN  NE2', -0.501, (91.256, 66.698, 42.846)), (' A 570  LEU HD22', ' A 574  VAL  CG2', -0.5, (54.501, 62.298, 49.499)), (' A  85  LEU  H  ', ' A  85  LEU HD23', -0.499, (84.709, 58.15, 41.388)), (' A 229  THR  OG1', ' A 520  LEU HD21', -0.498, (50.833, 52.331, 43.772)), (' A 137  ASN  C  ', ' A 137  ASN HD22', -0.497, (42.626, 50.908, -3.342)), (' C 920  UNK  O  ', ' C 921  UNK  C  ', -0.496, (34.414, 30.317, 8.505)), (' A 482  ARG  HG2', ' A 488  VAL HG13', -0.493, (43.514, 37.555, 26.777)), (' A 131  LYS  HE2', ' A 143  LEU HD12', -0.492, (50.711, 56.79, 4.996)), (' A 209  VAL  C  ', ' A 210  ASN  ND2', -0.491, (71.107, 55.377, 46.466)), (' A 137  ASN  ND2', ' A 139  GLN  H  ', -0.49, (43.839, 51.65, -3.742)), (' A 456  LEU  CD1', ' A 460  ARG  HD2', -0.488, (57.202, 48.77, 27.324)), (' A 562  LYS  CB ', ' A 562  LYS  NZ ', -0.486, (67.866, 66.657, 39.541)), (' A  21  ILE  N  ', ' A  24  GLN HE21', -0.484, (91.361, 66.399, 44.233)), (' A 246  ALA  HA ', ' A 249  MET  HE3', -0.483, (28.122, 43.631, 29.377)), (' A 556  ASN  O  ', ' A 560  LEU HD22', -0.482, (61.737, 71.561, 48.474)), (' A 442  GLN  NE2', ' A1086  HOH  O  ', -0.482, (38.757, 63.909, 33.484)), (' A 315  PHE  HB3', ' A 912  HOH  O  ', -0.481, (52.203, 81.048, 40.591)), (' A  82  MET  HE2', ' A  83  TYR  CE2', -0.481, (90.021, 66.44, 38.133)), (' A 341  LYS  HB2', ' A 341  LYS  NZ ', -0.481, (54.786, 76.201, 9.26)), (' A 293  VAL  CG1', ' A 293  VAL  O  ', -0.48, (32.885, 78.527, 29.985)), (' A 192  ARG  HA ', ' A 196  TYR  O  ', -0.478, (75.115, 45.774, 32.99)), (' A 580  ASN HD21', ' A 582  ARG  HD3', -0.476, (48.657, 53.74, 50.483)), (' A 320  LEU HD13', ' A 380  GLN  CG ', -0.475, (54.005, 78.454, 41.16)), (' A  55  THR HG22', ' A  57  GLU  N  ', -0.474, (65.847, 79.12, 7.9)), (' A 586  ASN  HB3', ' A1053  HOH  O  ', -0.473, (40.926, 60.768, 49.697)), (' A 526  GLN  HA ', ' A 526  GLN  NE2', -0.472, (46.201, 68.186, 44.907)), (' A  94  LYS  O  ', ' A  98  GLN  HB2', -0.471, (77.112, 62.189, 40.961)), (' A 134  ASN  OD1', ' A 136  ASP  N  ', -0.469, (40.166, 47.565, 0.363)), (' A 478  TRP  CD2', ' A 489  GLU  HB3', -0.469, (46.991, 39.56, 21.781)), (' A  59  VAL  O  ', ' A  63  ASN  ND2', -0.469, (69.201, 73.23, 11.424)), (' A 339  VAL  O  ', ' A 339  VAL HG12', -0.467, (55.105, 84.138, 7.097)), (' A 218  SER  HB3', ' A 221  GLN  HB2', -0.466, (65.228, 48.839, 46.134)), (' A 126  ILE HG12', ' A 176  LEU HD13', -0.465, (59.589, 49.531, 12.508)), (' A  85  LEU  CD2', ' A  85  LEU  N  ', -0.463, (84.26, 57.769, 41.457)), (' A 365  THR  CG2', ' A 366  MET  N  ', -0.461, (37.687, 75.106, 25.647)), (' A 423  LEU  HA ', ' A 423  LEU HD23', -0.46, (32.645, 82.265, 32.885)), (' A 261  CYS  CB ', ' A 488  VAL HG22', -0.46, (40.345, 39.594, 26.936)), (' A 294  THR  OG1', ' A 365  THR  HA ', -0.46, (36.576, 76.791, 24.771)), (' A 226  VAL  O  ', ' A 229  THR HG22', -0.46, (52.921, 49.452, 42.711)), (' A 364  VAL  O  ', ' A 364  VAL HG12', -0.46, (37.02, 80.38, 24.421)), (' A 525  PHE  O  ', ' A 529  LEU HD22', -0.459, (49.379, 68.087, 47.105)), (' A 568  LEU  C  ', ' A 568  LEU HD23', -0.458, (62.482, 65.568, 50.584)), (' A  24  GLN  HG3', ' A  83  TYR  CE2', -0.457, (89.426, 67.612, 40.319)), (' A 245  ARG  HG2', ' A 245  ARG  NH2', -0.455, (33.119, 41.999, 32.409)), (' A 351  LEU  H  ', ' A 351  LEU HD12', -0.455, (63.455, 79.176, 28.524)), (' A 338  ASN  N  ', ' A 338  ASN  ND2', -0.452, (48.955, 83.482, 8.333)), (' A 287  GLN  N  ', ' A 287  GLN  NE2', -0.451, (21.688, 61.778, 31.062)), (' A  55  THR HG21', ' A  57  GLU  HG2', -0.449, (65.231, 81.166, 8.065)), (' A 414  THR HG21', ' A 542  CYS  O  ', -0.449, (39.215, 70.861, 43.223)), (' A 456  LEU  C  ', ' A 456  LEU HD12', -0.449, (56.026, 48.227, 28.758)), (' A 302  TRP  NE1', ' A 306  ARG  NH1', -0.448, (37.42, 87.057, 31.378)), (' A  57  GLU  N  ', ' A  57  GLU  OE1', -0.447, (66.528, 79.16, 6.775)), (' A 397  ASN  C  ', ' A 397  ASN  ND2', -0.444, (60.965, 61.69, 39.395)), (' A 456  LEU  CD2', ' A 503  LEU HD12', -0.443, (53.741, 50.267, 25.312)), (' A 396  ALA  HB1', ' A 566  TRP  HA ', -0.442, (62.829, 64.034, 44.366)), (' A 526  GLN  CA ', ' A 526  GLN HE21', -0.441, (46.553, 67.883, 44.561)), (' A  46  ALA  HB1', ' A  62  MET  HA ', -0.44, (69.362, 76.59, 16.882)), (' A 323  MET  HB3', ' A 327  PHE  CD1', -0.44, (54.748, 85.041, 32.666)), (' A 292  ASP  C  ', ' A 292  ASP  OD2', -0.439, (32.331, 73.911, 28.586)), (' A 221  GLN  HG3', ' A 859  HOH  O  ', -0.439, (62.881, 47.729, 47.893)), (' A 181  GLU  HB3', ' A 470  LYS  NZ ', -0.439, (66.957, 39.538, 19.213)), (' A 395  GLY  O  ', ' A 562  LYS  HG3', -0.438, (64.868, 65.702, 39.431)), (' A 126  ILE HG13', ' A 127  TYR  N  ', -0.438, (58.744, 52.544, 11.968)), (' A 552  GLN  NE2', ' A 556  ASN  ND2', -0.438, (58.492, 76.292, 51.693)), (' A 562  LYS  HB3', ' A 562  LYS  NZ ', -0.437, (68.768, 66.574, 39.544)), (' A 501  ALA  HA ', ' A 506  VAL  CG1', -0.436, (57.969, 48.621, 20.627)), (' A 420  SER  CB ', ' A 802  NAG  H83', -0.435, (36.521, 81.285, 44.277)), (' A 231  GLU  HG2', ' A 843  HOH  O  ', -0.434, (50.47, 43.173, 42.744)), (' A  21  ILE  HA ', ' A  24  GLN  HG2', -0.433, (90.139, 67.136, 43.181)), (' A 209  VAL HG22', ' A 216  ASP  HA ', -0.432, (68.469, 56.739, 49.07)), (' A  55  THR  CG2', ' A  57  GLU  HG2', -0.431, (65.679, 80.823, 8.162)), (' A 137  ASN  C  ', ' A 137  ASN  ND2', -0.431, (42.457, 51.037, -3.173)), (' A 190  MET  HE1', ' A 202  TYR  CD1', -0.429, (72.661, 52.547, 31.05)), (' A 533  ALA  C  ', ' A 534  LYS  HG2', -0.429, (42.793, 74.356, 54.658)), (' A 291  ILE HD12', ' A 973  HOH  O  ', -0.428, (32.05, 69.273, 36.756)), (' A 414  THR  HA ', ' A 989  HOH  O  ', -0.427, (36.419, 70.048, 38.961)), (' A 278  LEU  HA ', ' A 281  LEU HD13', -0.427, (33.619, 54.364, 24.127)), (' D 940  UNK  O  ', ' D 941  UNK  C  ', -0.425, (39.62, 25.234, -0.232)), (' A  56  GLU  HA ', ' A  56  GLU  OE2', -0.425, (64.857, 75.287, 6.535)), (' A 557  MET  HA ', ' A 560  LEU  CD2', -0.424, (61.823, 70.036, 48.162)), (' A 210  ASN  ND2', ' A 938  HOH  O  ', -0.424, (70.804, 53.017, 47.176)), (' A 407  ILE HD12', ' A 526  GLN  HB2', -0.423, (46.877, 66.92, 42.805)), (' A 493  HIS  CD2', ' A 499  ASP  OD1', -0.422, (50.252, 40.474, 18.132)), (' A 320  LEU  HB3', ' A 380  GLN  OE1', -0.42, (54.724, 80.38, 41.639)), (' A 476  LYS  NZ ', ' A 863  HOH  O  ', -0.42, (57.026, 33.942, 31.85)), (' A 553  LYS  HB3', ' A 553  LYS  HE3', -0.42, (53.204, 70.424, 51.367)), (' A 324  THR  O  ', ' A 327  PHE  HB3', -0.42, (57.064, 87.002, 32.441)), (' C 914  UNK  O  ', ' C 915  UNK  CB ', -0.42, (41.7, 37.834, 0.858)), (' A  50  TYR  CE1', ' A  59  VAL HG23', -0.419, (64.066, 73.105, 11.872)), (' A 562  LYS  HB3', ' A 562  LYS  HZ3', -0.418, (68.797, 66.579, 40.04)), (' A 425  SER  C  ', ' A 427  ASP  H  ', -0.418, (25.212, 79.159, 38.686)), (' A 303  ASP  HB2', ' A 872  HOH  O  ', -0.417, (42.923, 86.082, 22.992)), (' A 294  THR  OG1', ' A 365  THR HG23', -0.416, (36.021, 75.311, 24.423)), (' A 351  LEU  N  ', ' A 351  LEU HD12', -0.416, (63.758, 78.73, 28.714)), (' A 585  LEU  O  ', ' A 589  GLU  HG2', -0.415, (38.838, 55.935, 47.294)), (' A 137  ASN HD21', ' A 139  GLN  HB2', -0.414, (43.503, 53.066, -4.676)), (' A 380  GLN  CD ', ' A 912  HOH  O  ', -0.414, (53.732, 80.781, 40.346)), (' A 455  MET  HE1', ' A 477  TRP  CZ3', -0.414, (53.369, 44.043, 26.966)), (' A 240  LEU HD13', ' A 275  TRP  HZ3', -0.414, (37.643, 50.06, 33.035)), (' A 186  LEU  HA ', ' A 186  LEU HD12', -0.413, (74.631, 45.904, 21.553)), (' A 131  LYS  HB3', ' A 131  LYS  HE2', -0.413, (50.853, 55.992, 5.382)), (' A  85  LEU HD22', ' A 936  HOH  O  ', -0.413, (84.605, 57.508, 39.295)), (' A 374  HIS  C  ', ' A 374  HIS  CD2', -0.411, (50.671, 72.276, 32.642)), (' A 126  ILE HG12', ' A 176  LEU HD11', -0.41, (59.837, 50.192, 12.915)), (' A 245  ARG  CB ', ' A 262  LEU HD21', -0.409, (34.578, 44.523, 29.568)), (' A 288  LYS  HA ', ' A 289  PRO  HD3', -0.408, (22.17, 66.46, 32.92)), (' A 504  PHE  O  ', ' A 508  ASN  HB2', -0.408, (58.584, 55.521, 20.606)), (' A  21  ILE  CD1', ' A  21  ILE  N  ', -0.407, (90.962, 65.177, 45.471)), (' A 450  LEU  HA ', ' A 450  LEU HD23', -0.407, (49.116, 52.921, 35.366)), (' C 917  UNK  O  ', ' C 918  UNK  C  ', -0.407, (37.906, 39.208, 9.574)), (' A 407  ILE  HA ', ' A 407  ILE HD13', -0.407, (46.88, 67.725, 40.752)), (' A 293  VAL  C  ', ' A 295  ASP  H  ', -0.406, (32.346, 77.55, 27.522)), (' A 131  LYS  HE2', ' A 143  LEU  CD1', -0.405, (50.624, 57.157, 5.294)), (' A 546  ASN  OD1', ' A 802  NAG  C2 ', -0.404, (40.105, 82.487, 47.33)), (' A 338  ASN  O  ', ' A 339  VAL  HB ', -0.404, (52.111, 84.424, 7.558)), (' A 190  MET  HE2', ' A 191  ALA  CA ', -0.404, (74.249, 50.209, 29.633)), (' A 478  TRP  CE3', ' A 489  GLU  HB3', -0.404, (46.665, 39.892, 22.095)), (' A 343  VAL  CG2', ' A 343  VAL  O  ', -0.402, (55.233, 74.202, 18.212)), (' A 489  GLU  HA ', ' A 490  PRO  HD3', -0.402, (43.595, 41.814, 20.629)), (' A 341  LYS  CB ', ' A 341  LYS  NZ ', -0.401, (54.988, 76.37, 9.042)), (' A  20  THR  O  ', ' A  22  GLU  N  ', -0.4, (89.259, 67.771, 44.939)), (' A 302  TRP  CH2', ' A 423  LEU HD11', -0.4, (37.352, 82.501, 31.999))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)
